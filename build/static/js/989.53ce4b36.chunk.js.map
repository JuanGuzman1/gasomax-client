{"version":3,"file":"static/js/989.53ce4b36.chunk.js","mappings":"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","sources":["actions/department.js","actions/provider.js","utils/functions.js","utils/modelTypes.js","components/payments/quotes/QuoteModalObs.js","components/payments/quotes/QuoteModalForm.js","actions/unit.js","actions/quoteConcept.js","components/payments/quotes/QuoteTable.js","views/payments/quotes/Quotes.js"],"sourcesContent":["import axios from 'axios'\nimport {\n  GET_DEPARTMENTS,\n  ADD_DEPARTMENT,\n  UPDATE_DEPARTMENT,\n  DELETE_DEPARTMENT,\n  SELECT_DEPARTMENTS,\n  DEPARTMENT_ERROR,\n} from './types'\nimport config from 'src/server.config'\n\nexport const getDepartments = (page, filter, value) => async (dispatch) => {\n  try {\n    const res = await axios.get(\n      `${config.instance.baseURL}/api/department?${filter}=${value}&page=${page}`,\n      {\n        headers: {\n          ...config.instance.headers,\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      },\n    )\n    dispatch({\n      type: GET_DEPARTMENTS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: DEPARTMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n\nexport const addDepartment = (data, cb) => async (dispatch) => {\n  try {\n    const res = await axios.post(`${config.instance.baseURL}/api/department`, data, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: ADD_DEPARTMENT,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: DEPARTMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const updateDepartment = (data, id, cb) => async (dispatch) => {\n  try {\n    const res = await axios.put(`${config.instance.baseURL}/api/department/${id}`, data, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: UPDATE_DEPARTMENT,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: DEPARTMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const deleteDepartment = (id, cb) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`${config.instance.baseURL}/api/department/${id}`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: DELETE_DEPARTMENT,\n      payload: id,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: DEPARTMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const selectDepartments = () => async (dispatch) => {\n  try {\n    const res = await axios.get(`${config.instance.baseURL}/api/select/department`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: SELECT_DEPARTMENTS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: DEPARTMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n","import axios from 'axios'\nimport {\n  ADD_PROVIDER,\n  GET_PROVIDERS,\n  PROVIDER_ERROR,\n  DELETE_PROVIDER,\n  UPDATE_PROVIDER,\n  EXPORT_PROVIDER_EXCEL,\n  SELECT_PROVIDERS,\n  SELECT_ACCOUNT_PROVIDERS,\n} from './types'\nimport config from '../server.config'\n\nexport const getProviders = (page, filter, value) => async (dispatch) => {\n  try {\n    const res = await axios.get(\n      `${config.instance.baseURL}/api/provider?${filter}=${value}&page=${page}`,\n      {\n        headers: {\n          ...config.instance.headers,\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      },\n    )\n    dispatch({\n      type: GET_PROVIDERS,\n      payload: { ...res.data, filters: { filter, value } },\n    })\n  } catch (err) {\n    dispatch({\n      type: PROVIDER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n\nexport const addProvider = (data, cb) => async (dispatch) => {\n  try {\n    const res = await axios.post(`${config.instance.baseURL}/api/provider`, data, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: ADD_PROVIDER,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: PROVIDER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const updateProvider = (data, id, cb) => async (dispatch) => {\n  try {\n    const res = await axios.put(`${config.instance.baseURL}/api/provider/${id}`, data, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: UPDATE_PROVIDER,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: PROVIDER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const deleteProvider = (id, cb) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`${config.instance.baseURL}/api/provider/${id}`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: DELETE_PROVIDER,\n      payload: id,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: PROVIDER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const exportProviderExcel = (filter, value) => async (dispatch) => {\n  try {\n    const res = await axios.get(\n      `${config.instance.baseURL}/api/excel/provider/export?${filter}=${value}`,\n      {\n        headers: {\n          ...config.instance.headers,\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n        responseType: 'blob',\n      },\n    )\n    const url = window.URL.createObjectURL(new Blob([res.data]))\n    const link = document.createElement('a')\n    link.href = url\n\n    link.setAttribute('download', 'Proveedores.xlsx')\n    document.body.appendChild(link)\n    link.click()\n\n    // Limpia el enlace y el objeto URL después de la descarga\n    document.body.removeChild(link)\n    window.URL.revokeObjectURL(url)\n\n    dispatch({\n      type: EXPORT_PROVIDER_EXCEL,\n    })\n  } catch (err) {\n    dispatch({\n      type: PROVIDER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n\nexport const selectProviders = () => async (dispatch) => {\n  try {\n    const res = await axios.get(`${config.instance.baseURL}/api/select/provider`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: SELECT_PROVIDERS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: PROVIDER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n\nexport const selectAccountsByProvider = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`${config.instance.baseURL}/api/select/account/provider/${id}`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: SELECT_ACCOUNT_PROVIDERS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: PROVIDER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n","import { DateTime } from 'luxon'\nimport { useSelector } from 'react-redux'\n\nexport const formatNumber = (value) => {\n  let val = (value / 1).toFixed(2)\n  return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n}\n\nexport const formatTimezoneToDate = (date) => {\n  return DateTime.fromISO(date).toLocaleString(DateTime.DATE_SHORT)\n}\n\nexport const formatTimezoneToDateTime = (date) => {\n  return DateTime.fromISO(date).toLocaleString(DateTime.DATETIME_SHORT)\n}\n\nexport const movementTypes = {\n  advance: 'Anticipo',\n  settlement: 'Liquidación',\n  payment: 'Abono a cuenta',\n}\n//////////////////////////// status QUOTE ////////////////////\nexport const statusQuote = (status, uploadQuotePermission = false, petitioner_id) => {\n  let statusQuoteLetter = {\n    inprogress: uploadQuotePermission ? 'Cotizaciónes enviadas' : 'Cotizaciónes disponibles',\n    approved: 'Cotización aprobada',\n    authorized: 'Cotización autorizada',\n    ok: 'Cotización VoBo',\n    sent: uploadQuotePermission ? 'Solicitud nueva' : 'Solicitud enviada',\n    sentPay: 'Enviada a pago',\n    paid: 'Pagado',\n    rejected: 'Cotizaciónes rechazadas',\n  }\n  return statusQuoteLetter[status]\n}\n\nexport const statusQuoteColors = {\n  inprogress: '#00FFFF',\n  approved: '#00FF00',\n  authorized: '#0000FF',\n  ok: '#008000',\n  sent: '#FFA500',\n  sentPay: '#30AFD4',\n  paid: '#800080',\n  rejected: '#FF0000',\n}\n////////////////////// status purchaseRequest (Update payments) //////////////\nexport const statusPurchaseRequest = {\n  pending: 'Pendiente de aprobación',\n  approved: 'Solicitud aprobada',\n  paid: 'Pagado',\n  rejected: 'Solicitud rechazada',\n}\n\nexport const statusPurchaseRequestColors = {\n  pending: '#FFA500',\n  approved: '#00FF00',\n  paid: '#800080',\n  rejected: '#FF0000',\n}\n\nexport const permissions = {\n  index: 'Listar',\n  show: 'Ver',\n  create: 'Crear',\n  edit: 'Editar',\n  delete: 'Eliminar',\n  reject: 'Rechazar',\n  pay: 'Pagar',\n  approve: 'Aprobar',\n  authorize: 'Autorizar',\n  'authorize.minor.1000': 'Autorizar < $1,000',\n  'authorize.mayor.1000': 'Autorizar > $1,000',\n  'authorize.minor.5000': 'Autorizar < $5,000',\n  'authorize.mayor.5000': 'Autorizar > $5,000',\n  modules: 'Asignar modulos',\n  permissions: 'Asignar permisos',\n  'upload.quote': 'Subir cotizaciónes',\n}\n\nexport const useHasPermission = (submodule, permission) => {\n  const userPermissions = useSelector((state) => state.auth.permissions)\n  const userModules = useSelector((state) => state.auth.modules)\n\n  const hasSubmodule = userModules.find((m) => m.submodule === submodule)\n\n  if (hasSubmodule) {\n    return userPermissions.find(\n      (p) => p.submodule === hasSubmodule.submodule && p.permission === permission,\n    )\n      ? true\n      : false\n  }\n\n  return false\n}\n","export const modelTypes = {\n  provider: 'provider',\n  purchaseRequest: 'purchaseRequest',\n  quote: 'quote',\n}\n","import React, { useEffect, useState } from 'react'\nimport {\n  CModal,\n  CModalHeader,\n  CModalBody,\n  CModalTitle,\n  CModalFooter,\n  CForm,\n  CButton,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableRow,\n  CTableHeaderCell,\n  CTableBody,\n  CTableDataCell,\n  CSpinner,\n} from '@coreui/react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setToast } from 'src/actions/toast'\nimport { AppToast } from 'src/components/app'\nimport { formatTimezoneToDateTime } from 'src/utils/functions'\nimport { addQuoteObservation, getQuoteObservations } from 'src/actions/quote'\n\nconst QuoteModalObs = ({ visible, onClose, quoteID }) => {\n  const dispatch = useDispatch(),\n    [message, setMessage] = useState(''),\n    { observations, loadingObservations } = useSelector((state) => state.quote),\n    user = useSelector((state) => state.auth.user)?.data?.user\n\n  useEffect(() => {\n    dispatch(getQuoteObservations(quoteID))\n  }, [dispatch, quoteID])\n\n  const onSave = (e) => {\n    e.preventDefault()\n    try {\n      if (!message || message === '') {\n        dispatch(setToast(AppToast({ msg: 'Escribe un mensaje', title: 'Error', type: 'error' })))\n        return\n      }\n      let data = {\n        message,\n        user_id: user.id,\n        quote_id: quoteID,\n      }\n      dispatch(\n        addQuoteObservation(data, (quoteObservationRes) => {\n          if (quoteObservationRes.success) {\n            dispatch(\n              setToast(\n                AppToast({\n                  msg: 'Mensaje guardado con exito',\n                  title: 'Observacion',\n                  type: 'success',\n                }),\n              ),\n            )\n          } else {\n            dispatch(\n              setToast(\n                AppToast({ msg: 'Ha ocurrido un error', title: 'Observacion', type: 'error' }),\n              ),\n            )\n          }\n        }),\n      )\n    } catch (error) {\n      console.log(error)\n    }\n    setMessage('')\n  }\n\n  return (\n    <CModal\n      visible={visible}\n      onClose={onClose}\n      aria-labelledby=\"ModalObsForm\"\n      keyboard={false}\n      backdrop=\"static\"\n    >\n      <CModalHeader onClose={onClose}>\n        <CModalTitle id=\"ModalObsForm\">Observaciones</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        {loadingObservations ? (\n          <div className=\"d-flex justify-content-center\">\n            <CSpinner color=\"primary\" variant=\"grow\" />\n          </div>\n        ) : (\n          <>\n            <CTable striped responsive>\n              <CTableHead>\n                <CTableRow>\n                  <CTableHeaderCell scope=\"col\">Usuario</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Observación</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Fecha</CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {observations?.map((observation) => (\n                  <CTableRow key={observation.id}>\n                    <CTableDataCell>{observation.user.name}</CTableDataCell>\n                    <CTableDataCell>{observation.message}</CTableDataCell>\n                    <CTableDataCell>\n                      {formatTimezoneToDateTime(observation.created_at)}\n                    </CTableDataCell>\n                  </CTableRow>\n                ))}\n              </CTableBody>\n            </CTable>\n            <CForm className=\"mt-3\">\n              <div className=\"mb-3\">\n                <CFormTextarea\n                  id=\"obs\"\n                  label=\"Observación\"\n                  rows={2}\n                  value={message}\n                  onChange={(e) => setMessage(e.target.value)}\n                ></CFormTextarea>\n              </div>\n            </CForm>\n          </>\n        )}\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"secondary\" onClick={onClose}>\n          Cerrar\n        </CButton>\n        <CButton color=\"primary\" className=\"text-light fw-semibold\" onClick={onSave}>\n          Guardar\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default QuoteModalObs\n","import React, { useState, useEffect, useCallback, useRef } from 'react'\nimport {\n  CModal,\n  CModalHeader,\n  CModalBody,\n  CModalTitle,\n  CModalFooter,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CButton,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CTabContent,\n  CTabPane,\n  CFormCheck,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableRow,\n  CTableHeaderCell,\n  CTableBody,\n  CTableDataCell,\n  CFormSelect,\n  CProgress,\n} from '@coreui/react'\nimport { cilPlus } from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fileTags } from 'src/utils/fileTags'\nimport { FileCard, AppToast } from '../../app'\nimport Swal from 'sweetalert2'\nimport { formatNumber, useHasPermission } from 'src/utils/functions'\nimport { selectAccountsByProvider, selectProviders } from 'src/actions/provider'\nimport { setToast } from 'src/actions/toast'\nimport { uploadFile } from 'src/actions/file'\nimport { modelTypes } from 'src/utils/modelTypes'\nimport { getCharges, getConceptsByCharge } from 'src/actions/quoteConcept'\nimport { addQuote, getQuotes, sendPay, updateQuote, uploadQuoteFile } from 'src/actions/quote'\nimport { getLines, getUnitsByLine } from 'src/actions/unit'\nimport QuoteModalObs from './QuoteModalObs'\nimport { selectDepartments } from 'src/actions/department'\n\nconst QuoteModalForm = ({ visible, onClose, quoteData, view }) => {\n  const [activeKey, setActiveKey] = useState(1),\n    [quoteID, setQuoteID] = useState(''),\n    [title, setTitle] = useState(''),\n    [charge, setCharge] = useState(''),\n    [departments, setDepartments] = useState([]),\n    [departmentID, setDepartmentID] = useState(''),\n    [quoteConceptID, setQuoteConceptID] = useState(''),\n    [description, setDescription] = useState(''),\n    [imgFiles, setImgFiles] = useState([]),\n    [quoteFiles, setQuoteFiles] = useState([]),\n    [invoiceFile, setInvoiceFile] = useState(null),\n    [descriptionQuote, setDescriptionQuote] = useState(''),\n    [numProviders, setNumProviders] = useState(0),\n    [recommendedProviders, setRecommendedProviders] = useState([]),\n    [recommendedProvidersInput, setRecommendedProvidersInput] = useState([]),\n    [suggestedProvider, setSuggestedProvider] = useState(''),\n    [line, setLine] = useState(''),\n    [unit, setUnit] = useState(''),\n    [selectedQuoteID, setSelectedQuoteID] = useState(''),\n    [rejectQuotes, setRejectQuotes] = useState(false),\n    [approvedAmount, setApprovedAmount] = useState(0),\n    [providerID, setProviderID] = useState(''),\n    [providerAccountID, setProviderAccountID] = useState(''),\n    [quoteProvider, setQuoteProvider] = useState(''),\n    [quoteAmount, setQuoteAmount] = useState(0),\n    [deliveryDate, setDeliveryDate] = useState(''),\n    [paymentWithoutInvoice, setPaymentWithoutInvoice] = useState(false),\n    [onePayment, setOnePayment] = useState(false),\n    [multiplePayments, setMultiplePayments] = useState(false),\n    [observation, setObservation] = useState(''),\n    dispatch = useDispatch(),\n    { progress } = useSelector((state) => state.file),\n    { providers, accounts } = useSelector((state) => state.provider),\n    hasPayPermission = useHasPermission('quotes', 'pay'),\n    hasRejectPermission = useHasPermission('quotes', 'reject'),\n    hasApprovePermission = useHasPermission('quotes', 'approve'),\n    hasAuthorizeMinor5000Permission = useHasPermission('quotes', 'authorize.minor.5000'),\n    hasAuthorizeMayor5000Permission = useHasPermission('quotes', 'authorize.mayor.5000'),\n    hasUploadQuotePermission = useHasPermission('quotes', 'upload.quote'),\n    inputImgFile = useRef(),\n    inputQuoteFile = useRef(),\n    inputInvoiceFile = useRef(),\n    user = useSelector((state) => state.auth.user)?.data?.user,\n    charges = useSelector((state) => state.quoteConcept.charges),\n    concepts = useSelector((state) => state.quoteConcept.concepts),\n    departmentsDB = useSelector((state) => state.department.departments),\n    lines = useSelector((state) => state.unit.lines),\n    units = useSelector((state) => state.unit.units),\n    { quotes, filters, progress: progressQuoteFile } = useSelector((state) => state.quote),\n    [visibleObs, setVisibleObs] = useState(false)\n\n  useEffect(() => {\n    dispatch(selectProviders())\n  }, [dispatch])\n\n  useEffect(() => {\n    dispatch(getLines())\n    dispatch(selectDepartments())\n  }, [dispatch])\n\n  useEffect(() => {\n    if (!departmentsDB) {\n      return\n    }\n    let blacklist = ['NOMINA', 'TESORERIA', 'CONTRALORIA', 'CARWASH', 'RESTAURANTE', 'MAXSTORE']\n    let data = departmentsDB.data.filter((dep) => !blacklist.includes(dep.name))\n    setDepartments(data)\n  }, [departmentsDB])\n\n  useEffect(() => {\n    if (!line) {\n      return\n    }\n    dispatch(getUnitsByLine(line))\n  }, [dispatch, line])\n\n  useEffect(() => {\n    if (!departmentID) {\n      return\n    }\n    dispatch(getCharges(departmentID))\n  }, [dispatch, departmentID])\n\n  useEffect(() => {\n    if (!charge) {\n      return\n    }\n    dispatch(getConceptsByCharge(charge))\n  }, [dispatch, charge])\n\n  useEffect(() => {\n    if (!providerID) {\n      return\n    }\n    dispatch(selectAccountsByProvider(providerID))\n  }, [dispatch, providerID])\n\n  useEffect(() => {\n    let array = []\n    for (let i = 0; i < numProviders; i++) {\n      array.push(i)\n    }\n    setRecommendedProvidersInput(array)\n  }, [numProviders])\n\n  useEffect(() => {\n    if (onePayment) {\n      setMultiplePayments(false)\n    }\n  }, [onePayment])\n\n  useEffect(() => {\n    if (multiplePayments) {\n      setOnePayment(false)\n    }\n  }, [multiplePayments])\n\n  useEffect(() => {\n    if (!quoteData) {\n      return\n    }\n    setQuoteID(quoteData.id)\n    setTitle(quoteData.title)\n    setDescription(quoteData.description)\n    setDepartmentID(quoteData.quote_concept.department_id)\n    setCharge(quoteData.quote_concept.charge)\n    setQuoteConceptID(quoteData.quote_concept.id)\n    setLine(quoteData.line)\n    setUnit(quoteData.unit)\n    setNumProviders(quoteData.numProviders)\n    setRecommendedProviders(JSON.parse(quoteData.recommendedProviders))\n    setImgFiles(quoteData.images)\n    setQuoteFiles(quoteData.files)\n    setSelectedQuoteID(quoteData.files.find((file) => file.selectedQuoteFile)?.id)\n    setRejectQuotes(quoteData.rejectQuotes)\n    setApprovedAmount(quoteData.approvedAmount)\n    setOnePayment(quoteData.onePayment)\n    setMultiplePayments(quoteData.multiplePayments)\n    setSuggestedProvider(quoteData.suggestedProvider)\n    setProviderID(quoteData.provider_id)\n    setProviderAccountID(quoteData.provider_account_id)\n    setPaymentWithoutInvoice(quoteData.paymentWithoutInvoice)\n    if (!quoteData.paymentWithoutInvoice) {\n      let filesPR = quoteData?.payments?.find(\n        (p) => !p.purchase_request_pending_id && p.fromQuote,\n      )?.files\n      let file = filesPR?.find((f) => f.tag === fileTags.invoice)\n      setInvoiceFile(file)\n    }\n  }, [quoteData])\n\n  const onSelectRecommendedProvider = (e, i) => {\n    if (e.target.value === '') {\n      setRecommendedProviders(recommendedProviders.filter((v, index) => index !== i))\n      return\n    }\n    let newArr = [...recommendedProviders]\n    newArr[i] = e.target.value ? e.target.value : ''\n\n    setRecommendedProviders(newArr)\n  }\n\n  const onPay = () => {\n    try {\n      if (!providerID) {\n        alert('Selecciona un proveedor')\n        return\n      }\n      if (!providerAccountID) {\n        alert('Selecciona una cuenta de proveedor')\n        return\n      }\n      if (!paymentWithoutInvoice) {\n        if (!invoiceFile) {\n          alert('Sube la factura de pago o selecciona pago sin factura')\n          return\n        }\n      }\n      let data = {\n        provider_id: providerID,\n        provider_account_id: providerAccountID,\n        paymentWithoutInvoice,\n        status: 'sentPay',\n      }\n      Swal.fire({\n        title: '¿Esta seguro de enviar a pago?',\n        showCancelButton: true,\n        confirmButtonText: 'Enviar',\n      }).then((result) => {\n        if (result.isConfirmed) {\n          dispatch(\n            sendPay(data, quoteID, (sendPayRes) => {\n              if (sendPayRes.success) {\n                dispatch(\n                  setToast(\n                    AppToast({\n                      msg: 'Solicitud enviada a pago',\n                      title: 'Solicitudes de compra',\n                      type: 'success',\n                    }),\n                  ),\n                )\n                onUploadInvoiceFile(sendPayRes.data.purchaseRequest)\n                onClose()\n                clearGeneralInputs()\n                Swal.fire('Solicitud de pago enviada!', '', 'success')\n              } else {\n                dispatch(\n                  setToast(\n                    AppToast({\n                      msg: sendPayRes.message,\n                      title: 'Solicitudes de compra',\n                      type: 'error',\n                    }),\n                  ),\n                )\n              }\n            }),\n          )\n        }\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const onAddFiles = (e) => {\n    if (!e.target.files[0]) {\n      return\n    }\n    let data = {\n      localName: e.target.files[0].name,\n      file: e.target.files[0],\n    }\n    if (inputImgFile.current.value) {\n      setImgFiles([...imgFiles, { ...data, tag: fileTags.img }])\n      inputImgFile.current.value = ''\n    }\n  }\n\n  const onAddQuoteFiles = () => {\n    if (!inputQuoteFile.current.value) {\n      alert('Carga una cotización')\n      return\n    }\n    if (!quoteProvider) {\n      alert('Escribe un proveedor')\n      return\n    }\n    if (!quoteAmount) {\n      alert('Escribe un monto')\n      return\n    }\n    if (!deliveryDate) {\n      alert('Selecciona fecha de entrega')\n      return\n    }\n    if (!descriptionQuote) {\n      alert('Deja una breve descripción')\n      return\n    }\n\n    if (inputQuoteFile.current.value) {\n      setQuoteFiles([\n        ...quoteFiles,\n        {\n          localName: inputQuoteFile.current.files[0].name,\n          file: inputQuoteFile.current.files[0],\n          tag: fileTags.quotation,\n          description: descriptionQuote,\n          provider: quoteProvider,\n          amount: quoteAmount,\n          deliveryDate,\n        },\n      ])\n      inputQuoteFile.current.value = ''\n      setDescriptionQuote('')\n      setQuoteProvider('')\n      setQuoteAmount(0)\n      setDeliveryDate('')\n    }\n  }\n\n  const clearGeneralInputs = useCallback(() => {\n    setImgFiles([])\n  }, [])\n\n  const onSave = (e) => {\n    e.preventDefault()\n    try {\n      if (!title || title === '') {\n        dispatch(\n          setToast(\n            AppToast({\n              msg: 'Falta agregar un titulo',\n              type: 'error',\n            }),\n          ),\n        )\n        return\n      }\n      let status\n\n      if (rejectQuotes) {\n        status = 'rejected'\n      } else if (approvedAmount > 0) {\n        status = 'approved'\n      }\n\n      let data = {\n        title,\n        provider_id: providerID,\n        quote_concept_id: quoteConceptID,\n        description,\n        numProviders,\n        recommendedProviders: JSON.stringify(recommendedProviders),\n        line,\n        unit,\n        rejectQuotes,\n        approvedAmount,\n        observation,\n        onePayment,\n        multiplePayments,\n        suggestedProvider,\n        status,\n        selectedQuoteID,\n      }\n      dispatch(\n        quoteData\n          ? updateQuote(data, quoteID, (quoteRes) => {\n              if (quoteRes.success) {\n                dispatch(\n                  setToast(\n                    AppToast({\n                      msg: 'Solicitud actualizada correctamente.',\n                      title: 'Solicitudes de compra',\n                      type: 'success',\n                    }),\n                  ),\n                )\n                onUploadImgFile(quoteRes.data)\n              } else {\n                dispatch(\n                  setToast(\n                    AppToast({\n                      msg: 'Ha ocurrido un error.',\n                      title: 'Solicitudes de compra',\n                      type: 'error',\n                    }),\n                  ),\n                )\n              }\n            })\n          : addQuote({ ...data, petitioner_id: user.id }, (quoteRes) => {\n              if (quoteRes.success) {\n                dispatch(\n                  setToast(\n                    AppToast({\n                      msg: 'Solicitud realizada correctamente.',\n                      title: 'Solicitudes de compra',\n                      type: 'success',\n                    }),\n                  ),\n                )\n                onUploadImgFile(quoteRes.data)\n              } else {\n                dispatch(\n                  setToast(\n                    AppToast({\n                      msg: 'Ha ocurrido un error.',\n                      title: 'Solicitudes de compra',\n                      type: 'error',\n                    }),\n                  ),\n                )\n              }\n            }),\n      )\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const onUploadImgFile = (quoteRes) => {\n    if (imgFiles.length > 0) {\n      Promise.all(\n        imgFiles.map((file) => {\n          if (!file.id) {\n            return dispatch(\n              uploadFile(file.file, file.tag, null, quoteRes.id, modelTypes.quote, () => {}),\n            )\n          } else {\n            onClose()\n            clearGeneralInputs()\n          }\n        }),\n      ).finally(() => {\n        dispatch(getQuotes(quotes.current_page, filters.filter, filters.value))\n      })\n    } else {\n      onClose()\n      clearGeneralInputs()\n    }\n  }\n\n  const onUploadQuoteFile = (e) => {\n    e.preventDefault()\n    try {\n      if (quoteFiles.length <= 0) {\n        alert('Agrega cotizaciónes a la solicitud')\n        return\n      }\n      dispatch(\n        updateQuote(\n          { status: 'inprogress', rejectQuotes: false, approvedAmount: 0 },\n          quoteID,\n          (quoteRes) => {\n            if (quoteRes.success) {\n              dispatch(\n                setToast(\n                  AppToast({\n                    msg: 'Solicitud actualizada correctamente.',\n                    title: 'Solicitudes de compra',\n                    type: 'success',\n                  }),\n                ),\n              )\n              if (quoteFiles.length > 0) {\n                Promise.all(\n                  quoteFiles.map((file) => {\n                    if (!file.id) {\n                      let data = {\n                        file: file.file,\n                        tag: file.tag,\n                        description: file.description,\n                        provider: file.provider,\n                        amount: file.amount,\n                        deliveryDate: file.deliveryDate,\n                        quote_id: quoteID,\n                      }\n                      return dispatch(uploadQuoteFile(data, () => {}))\n                    } else {\n                      onClose()\n                      clearGeneralInputs()\n                    }\n                  }),\n                ).finally(() => {\n                  dispatch(getQuotes(quotes.current_page, filters.filter, filters.value))\n                })\n              } else {\n                onClose()\n                clearGeneralInputs()\n              }\n            } else {\n              dispatch(\n                setToast(\n                  AppToast({\n                    msg: 'Ha ocurrido un error.',\n                    title: 'Solicitudes de compra',\n                    type: 'error',\n                  }),\n                ),\n              )\n            }\n          },\n        ),\n      )\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const onUploadInvoiceFile = (purchaseRequestRes) => {\n    try {\n      dispatch(\n        uploadFile(\n          invoiceFile.file,\n          invoiceFile.tag,\n          null,\n          purchaseRequestRes.id,\n          modelTypes.purchaseRequest,\n          () => {\n            dispatch(getQuotes(quotes.current_page, filters.filter, filters.value))\n          },\n        ),\n      )\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const onAuthorize = (e) => {\n    e.preventDefault()\n    try {\n      Swal.fire({\n        title: '¿Esta seguro de autorizar?',\n        showCancelButton: true,\n        confirmButtonText: 'Autorizar',\n      }).then((result) => {\n        if (result.isConfirmed) {\n          dispatch(\n            updateQuote({ status: 'authorized' }, quoteID, (quoteRes) => {\n              if (quoteRes.success) {\n                dispatch(\n                  setToast(\n                    AppToast({\n                      msg: 'Solicitud actualizada correctamente.',\n                      title: 'Solicitudes de compra',\n                      type: 'success',\n                    }),\n                  ),\n                )\n\n                onClose()\n                clearGeneralInputs()\n                Swal.fire('Autorizado!', '', 'success')\n              } else {\n                dispatch(\n                  setToast(\n                    AppToast({\n                      msg: 'Ha ocurrido un error.',\n                      title: 'Solicitudes de compra',\n                      type: 'error',\n                    }),\n                  ),\n                )\n              }\n            }),\n          )\n        }\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const onVOBO = (e) => {\n    e.preventDefault()\n    try {\n      Swal.fire({\n        title: '¿Dar el visto bueno?',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n      }).then((result) => {\n        if (result.isConfirmed) {\n          dispatch(\n            updateQuote({ status: 'ok' }, quoteID, (quoteRes) => {\n              if (quoteRes.success) {\n                dispatch(\n                  setToast(\n                    AppToast({\n                      msg: 'Solicitud actualizada correctamente.',\n                      title: 'Solicitudes de compra',\n                      type: 'success',\n                    }),\n                  ),\n                )\n\n                onClose()\n                clearGeneralInputs()\n                Swal.fire('Autorizado!', '', 'success')\n              } else {\n                dispatch(\n                  setToast(\n                    AppToast({\n                      msg: 'Ha ocurrido un error.',\n                      title: 'Solicitudes de compra',\n                      type: 'error',\n                    }),\n                  ),\n                )\n              }\n            }),\n          )\n        }\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const onReject = (e) => {\n    e.preventDefault()\n\n    Swal.fire({\n      title: 'Escribe un motivo del rechazo',\n      input: 'textarea',\n      inputAttributes: {\n        autocapitalize: 'off',\n      },\n      showCancelButton: true,\n      confirmButtonText: 'Enviar',\n      confirmButtonColor: '#E94834',\n      showLoaderOnConfirm: true,\n      preConfirm: async (observation) => {\n        try {\n          if (!observation) {\n            Swal.showValidationMessage(`\n              Escribe una observacion\n            `)\n            return\n          }\n          dispatch(\n            updateQuote(\n              {\n                status: 'rejected',\n                observation,\n                selectedQuoteID,\n                approvedAmount: 0,\n              },\n              quoteID,\n              (quoteRes) => {\n                if (quoteRes.success) {\n                  dispatch(\n                    setToast(\n                      AppToast({\n                        msg: 'Solicitud actualizada correctamente.',\n                        title: 'Solicitudes de compra',\n                        type: 'success',\n                      }),\n                    ),\n                  )\n\n                  onClose()\n                  clearGeneralInputs()\n                  Swal.fire('Rechazado!', '', 'success')\n                } else {\n                  dispatch(\n                    setToast(\n                      AppToast({\n                        msg: 'Ha ocurrido un error.',\n                        title: 'Solicitudes de compra',\n                        type: 'error',\n                      }),\n                    ),\n                  )\n                }\n              },\n            ),\n          )\n        } catch (error) {\n          Swal.showValidationMessage(`\n              Request failed: ${error}\n            `)\n        }\n      },\n      allowOutsideClick: () => !Swal.isLoading(),\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire({\n          title: `Solicitud rechazada correctamente`,\n        })\n      }\n    })\n  }\n\n  useEffect(() => {\n    if (progress === 100) {\n      setTimeout(() => {\n        onClose()\n        clearGeneralInputs()\n      }, 3000)\n    }\n  }, [progress, onClose, clearGeneralInputs])\n\n  useEffect(() => {\n    if (progressQuoteFile === 100) {\n      setTimeout(() => {\n        onClose()\n        clearGeneralInputs()\n      }, 3000)\n    }\n  }, [progressQuoteFile, onClose, clearGeneralInputs])\n\n  useEffect(() => {\n    if (rejectQuotes) {\n      setApprovedAmount(0)\n      setSelectedQuoteID('')\n    }\n  }, [rejectQuotes])\n\n  useEffect(() => {\n    if (!selectedQuoteID) {\n      setApprovedAmount(0)\n      return\n    }\n    let quote = quoteData?.files?.find((f) => f.id === selectedQuoteID)\n    if (quote) {\n      setApprovedAmount(quote.amount)\n      setRejectQuotes(false)\n    }\n  }, [selectedQuoteID, quoteData])\n\n  useEffect(() => {\n    if (view && quoteData.status === 'paid') {\n      return\n    }\n\n    if (paymentWithoutInvoice) {\n      setInvoiceFile(null)\n      inputInvoiceFile.current.value = ''\n    }\n  }, [paymentWithoutInvoice, quoteData, view])\n\n  return (\n    <>\n      <CModal\n        visible={visible}\n        onClose={onClose}\n        aria-labelledby=\"ModalForm\"\n        size=\"xl\"\n        scrollable\n        backdrop=\"static\"\n      >\n        <CModalHeader onClose={onClose}>\n          <CModalTitle id=\"ModalForm\">\n            {quoteData ? `${view ? '' : 'Editar'} Solicitud ${quoteData.title}` : 'Nueva Solicitud'}\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          {imgFiles.length > 0 && imgFiles.some((file) => !file.id) && (\n            <CProgress value={progress} className=\"mb-2\">\n              {progress}%\n            </CProgress>\n          )}\n          {quoteFiles.length > 0 && quoteFiles.some((file) => !file.id) && (\n            <CProgress value={progressQuoteFile} className=\"mb-2\">\n              {progressQuoteFile}%\n            </CProgress>\n          )}\n          {invoiceFile && !invoiceFile?.id && (\n            <CProgress value={progress} className=\"mb-2\">\n              {progress}%\n            </CProgress>\n          )}\n          <CNav variant=\"tabs\" role=\"tablist\" className=\"mt-1\">\n            <CNavItem role=\"presentation\">\n              <CNavLink\n                active={activeKey === 1}\n                component=\"button\"\n                role=\"tab\"\n                aria-controls=\"data-tab-pane\"\n                aria-selected={activeKey === 1}\n                onClick={() => setActiveKey(1)}\n              >\n                General\n              </CNavLink>\n            </CNavItem>\n            {view && (\n              <CNavItem role=\"presentation\">\n                <CNavLink\n                  active={activeKey === 2}\n                  component=\"button\"\n                  role=\"tab\"\n                  aria-controls=\"account-tab-pane\"\n                  aria-selected={activeKey === 2}\n                  onClick={() => setActiveKey(2)}\n                >\n                  Cotizaciónes\n                </CNavLink>\n              </CNavItem>\n            )}\n            {((view && quoteData.status === 'authorized' && hasPayPermission) ||\n              (view && quoteData.status === 'sentPay') ||\n              (view && quoteData.status === 'paid')) && (\n              <CNavItem role=\"presentation\">\n                <CNavLink\n                  active={activeKey === 3}\n                  component=\"button\"\n                  role=\"tab\"\n                  aria-controls=\"account-tab-pane\"\n                  aria-selected={activeKey === 3}\n                  onClick={() => setActiveKey(3)}\n                >\n                  Selección de cuenta y proveedor\n                </CNavLink>\n              </CNavItem>\n            )}\n          </CNav>\n          <CTabContent>\n            {/* Quote data */}\n            <CTabPane role=\"tabpanel\" aria-labelledby=\"data-tab-pane\" visible={activeKey === 1}>\n              <CForm className=\"mt-3\">\n                <div className=\"mb-3\">\n                  <CFormLabel>Título</CFormLabel>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"title\"\n                    placeholder=\"Título de la solicitud\"\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                    disabled={view}\n                  />\n                </div>\n                <div className=\"mb-3 d-flex\">\n                  <div className=\"flex-md-fill me-2\">\n                    <CFormLabel>Departamento</CFormLabel>\n                    <CFormSelect\n                      aria-label=\"department\"\n                      onChange={(e) => setDepartmentID(e.target.value)}\n                      value={departmentID}\n                      disabled={view}\n                    >\n                      <option value={''}>Selecciona...</option>\n                      {departments.map(({ id, name }) => (\n                        <option key={name} value={id}>\n                          {name}\n                        </option>\n                      ))}\n                    </CFormSelect>\n                  </div>\n                  <div className=\"flex-md-fill me-2\">\n                    <CFormLabel>Cargo</CFormLabel>\n                    <CFormSelect\n                      aria-label=\"charge\"\n                      onChange={(e) => setCharge(e.target.value)}\n                      value={charge}\n                      disabled={view}\n                    >\n                      <option value={''}>Selecciona...</option>\n                      {charges.map(({ charge }) => (\n                        <option key={charge} value={charge}>\n                          {charge}\n                        </option>\n                      ))}\n                    </CFormSelect>\n                  </div>\n                  <div className=\"flex-md-fill me-2\">\n                    <CFormLabel>Concepto</CFormLabel>\n                    <CFormSelect\n                      aria-label=\"concept\"\n                      onChange={(e) => setQuoteConceptID(e.target.value)}\n                      value={quoteConceptID}\n                      disabled={view}\n                    >\n                      <option value={''}>Selecciona...</option>\n                      {concepts.data.map(({ id, concept }) => (\n                        <option key={id} value={id}>\n                          {concept}\n                        </option>\n                      ))}\n                    </CFormSelect>\n                  </div>\n                </div>\n                <div className=\"mb-3\">\n                  <CFormTextarea\n                    id=\"desc\"\n                    label=\"Descripción \"\n                    rows={2}\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                    disabled={view}\n                  ></CFormTextarea>\n                </div>\n                {!view && (\n                  <div className=\"mb-3\">\n                    <CFormLabel>\n                      Sube <b>imágenes</b> para la solicitud (opcional)\n                    </CFormLabel>\n                    <CFormInput\n                      ref={inputImgFile}\n                      type=\"file\"\n                      id=\"imgFile\"\n                      onChange={onAddFiles}\n                      accept=\"image/*\"\n                      text=\"Archivos permitidos jpg, png, jpeg (10 MB)\"\n                    />\n                  </div>\n                )}\n                <div className=\"mb-3 d-flex\">\n                  {imgFiles.map((file, index) => {\n                    return (\n                      <FileCard\n                        file={file}\n                        key={file.tag}\n                        onDelete={(id) => {\n                          return file.id\n                            ? setImgFiles(imgFiles.filter((f) => f.id !== id))\n                            : setImgFiles(imgFiles.filter((f, i) => index !== i))\n                        }}\n                        viewMode={view}\n                      />\n                    )\n                  })}\n                </div>\n                <div className=\"mb-3\">\n                  <CFormCheck\n                    id=\"onePayment\"\n                    label=\"Pago en una sola exhibición\"\n                    checked={onePayment}\n                    onChange={(e) => setOnePayment(e.target.checked)}\n                    disabled={view}\n                  />\n                </div>\n                <div className=\"mb-3\">\n                  <CFormCheck\n                    id=\"multiplePayments\"\n                    label=\"Múltiples pagos\"\n                    checked={multiplePayments}\n                    onChange={(e) => setMultiplePayments(e.target.checked)}\n                    disabled={view}\n                  />\n                </div>\n                <div className=\"mb-3 d-flex\">\n                  <div className=\"flex-fill\">\n                    <CFormLabel>Giro</CFormLabel>\n                    <CFormSelect\n                      aria-label=\"line\"\n                      onChange={(e) => setLine(e.target.value)}\n                      value={line}\n                      disabled={view}\n                    >\n                      <option value={''}>Selecciona...</option>\n                      {lines.map((l) => (\n                        <option value={l.line} key={l.line}>\n                          {l.line}\n                        </option>\n                      ))}\n                    </CFormSelect>\n                  </div>\n                  <div className=\"flex-fill mx-2\">\n                    <CFormLabel>Unidad</CFormLabel>\n                    <CFormSelect\n                      aria-label=\"unit\"\n                      onChange={(e) => setUnit(e.target.value)}\n                      value={unit}\n                      disabled={view}\n                    >\n                      <option value={''}>Selecciona...</option>\n                      {units.data.map(({ id, unit }) => (\n                        <option key={id} value={unit}>\n                          {unit}\n                        </option>\n                      ))}\n                    </CFormSelect>\n                  </div>\n                  <div className=\"flex-fill\">\n                    <CFormLabel htmlFor=\"recommendedProviders\">Cotizaciónes requeridas</CFormLabel>\n                    <CFormInput\n                      type=\"number\"\n                      id=\"recommendedProviders\"\n                      placeholder=\"No Cotizaciónes\"\n                      onChange={(e) => setNumProviders(e.target.value)}\n                      value={numProviders}\n                      max={5}\n                      min={0}\n                      disabled={view}\n                    />\n                  </div>\n                </div>\n                {recommendedProvidersInput.map((x, i) => (\n                  <div className=\"mb-3\" key={x}>\n                    <CFormLabel>Proveedor recomendado {x + 1}</CFormLabel>\n                    <CFormSelect\n                      aria-label=\"charge\"\n                      onChange={(e) => onSelectRecommendedProvider(e, i)}\n                      value={recommendedProviders[i]}\n                      disabled={view}\n                    >\n                      <option value={''}>Selecciona...</option>\n                      {providers.data.map(({ id, name }) => (\n                        <option key={id} value={name}>\n                          {name}\n                        </option>\n                      ))}\n                    </CFormSelect>\n                  </div>\n                ))}\n                {numProviders > 0 && (\n                  <div className=\"mb-3\">\n                    <CFormLabel>Proveedor sugerido</CFormLabel>\n                    <CFormInput\n                      type=\"text\"\n                      id=\"suggestedProvider\"\n                      placeholder=\"Proveedor sugerido\"\n                      value={suggestedProvider}\n                      onChange={(e) => setSuggestedProvider(e.target.value)}\n                      disabled={view}\n                    />\n                  </div>\n                )}\n              </CForm>\n            </CTabPane>\n            {/* Quote files */}\n            <CTabPane role=\"tabpanel\" aria-labelledby=\"data-tab-pane\" visible={activeKey === 2}>\n              <CForm className=\"mt-3\">\n                {hasUploadQuotePermission &&\n                  quoteData.status !== 'authorized' &&\n                  quoteData.status !== 'approved' &&\n                  quoteData.status !== 'sentPay' &&\n                  quoteData.status !== 'paid' && (\n                    <>\n                      <CFormLabel className=\"fs-5\">\n                        Añade las <b>Cotizaciónes</b> para la solicitud\n                      </CFormLabel>\n                      <div className=\"mb-3\">\n                        <CFormInput\n                          ref={inputQuoteFile}\n                          type=\"file\"\n                          id=\"quoteFile\"\n                          text=\"Archivos permitidos jpg, pdf, png, xlxs (10 MB)\"\n                        />\n                      </div>\n                      <div className=\"d-flex mb-3\">\n                        <div className=\"flex-fill\">\n                          <CFormLabel>Proveedor(*)</CFormLabel>\n                          <CFormInput\n                            type=\"text\"\n                            id=\"quoteProvider\"\n                            placeholder=\"Proveedor\"\n                            value={quoteProvider}\n                            onChange={(e) => setQuoteProvider(e.target.value)}\n                          />\n                        </div>\n                        <div className=\"flex-fill mx-2\">\n                          <CFormLabel>Monto(*)</CFormLabel>\n                          <CFormInput\n                            type=\"number\"\n                            id=\"amount\"\n                            placeholder=\"0\"\n                            value={quoteAmount}\n                            onChange={(e) => setQuoteAmount(e.target.value)}\n                          />\n                        </div>\n                        <div className=\"flex-fill\">\n                          <CFormLabel>Tiempo de entrega(*)</CFormLabel>\n                          <CFormInput\n                            type=\"date\"\n                            id=\"deliveryDate\"\n                            value={deliveryDate}\n                            onChange={(e) => setDeliveryDate(e.target.value)}\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"mb-3\">\n                        <CFormTextarea\n                          id=\"desc\"\n                          label=\"Descripción(*)\"\n                          rows={2}\n                          value={descriptionQuote}\n                          onChange={(e) => setDescriptionQuote(e.target.value)}\n                        ></CFormTextarea>\n                      </div>\n                      <CButton\n                        color=\"primary\"\n                        className=\"text-light fw-semibold me-2\"\n                        onClick={onAddQuoteFiles}\n                      >\n                        <CIcon icon={cilPlus} className=\"me-1\" />\n                        Añadir a la solicitud\n                      </CButton>\n                    </>\n                  )}\n                {quoteFiles.length > 0 ? (\n                  <>\n                    <CTable striped responsive>\n                      <CTableHead>\n                        <CTableRow>\n                          <CTableHeaderCell scope=\"col\">Datos</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">Descripción</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">Archivo Cotización</CTableHeaderCell>\n                          {(hasApprovePermission ||\n                            hasAuthorizeMinor5000Permission ||\n                            hasAuthorizeMayor5000Permission ||\n                            (hasPayPermission && quoteData.status === 'approved') ||\n                            (hasPayPermission && quoteData.status === 'authorized') ||\n                            (hasPayPermission && quoteData.status === 'sentPay') ||\n                            (view && quoteData.status === 'paid')) && (\n                            <CTableHeaderCell scope=\"col\" className=\"text-center\">\n                              Aprobada\n                            </CTableHeaderCell>\n                          )}\n                        </CTableRow>\n                      </CTableHead>\n                      <CTableBody>\n                        {quoteFiles.map((file, index) => (\n                          <CTableRow key={file.name}>\n                            <CTableDataCell>\n                              <p>\n                                <b>Monto: </b>${formatNumber(file.amount)}\n                              </p>\n                              <p>\n                                <b>Proveedor: </b> {file.provider}\n                              </p>\n                              <p>\n                                <b>Tiempo de entrega: </b> {file.deliveryDate}\n                              </p>\n                            </CTableDataCell>\n                            <CTableDataCell>{file.description}</CTableDataCell>\n                            <CTableDataCell>\n                              <FileCard\n                                file={file}\n                                key={file.name}\n                                quoteFile={true}\n                                onDelete={(id) => {\n                                  return file.id\n                                    ? setQuoteFiles(quoteFiles.filter((f) => f.id !== id))\n                                    : setQuoteFiles(quoteFiles.filter((f, i) => index !== i))\n                                }}\n                                viewMode={\n                                  (view && !hasUploadQuotePermission) ||\n                                  (view && quoteData.status === 'approved') ||\n                                  (view && quoteData.status === 'authorized') ||\n                                  (view && quoteData.status === 'sentPay') ||\n                                  (view && quoteData.status === 'paid')\n                                }\n                              />\n                            </CTableDataCell>\n                            {(hasApprovePermission ||\n                              hasAuthorizeMinor5000Permission ||\n                              hasAuthorizeMayor5000Permission ||\n                              (hasPayPermission && quoteData.status === 'approved') ||\n                              (hasPayPermission && quoteData.status === 'authorized') ||\n                              (hasPayPermission && quoteData.status === 'sentPay') ||\n                              (view && quoteData.status === 'paid')) && (\n                              <CTableDataCell className=\"text-center\">\n                                <CFormCheck\n                                  id=\"selectedQuoteID\"\n                                  checked={file.id === selectedQuoteID}\n                                  onChange={(e) => {\n                                    if (e.target.checked) {\n                                      setSelectedQuoteID(file.id)\n                                    } else {\n                                      setSelectedQuoteID('')\n                                    }\n                                  }}\n                                  disabled={\n                                    (quoteData?.status === 'rejected' && quoteData.rejectQuotes) ||\n                                    quoteData?.status === 'approved' ||\n                                    quoteData?.status === 'ok' ||\n                                    quoteData?.status === 'authorized' ||\n                                    quoteData?.status === 'sentPay' ||\n                                    quoteData?.status === 'paid'\n                                  }\n                                />\n                              </CTableDataCell>\n                            )}\n                          </CTableRow>\n                        ))}\n                      </CTableBody>\n                    </CTable>\n                    {view &&\n                      (hasApprovePermission ||\n                        quoteData.status === 'approved' ||\n                        quoteData.status === 'ok' ||\n                        quoteData.status === 'authorized' ||\n                        quoteData.status === 'sentPay' ||\n                        quoteData.status === 'paid') && (\n                        <>\n                          <div className=\"mb-3\">\n                            <CFormCheck\n                              id=\"rejectQuotes\"\n                              label=\"Se descartan todas las cotizaciónes\"\n                              checked={rejectQuotes}\n                              onChange={(e) => setRejectQuotes(e.target.checked)}\n                              disabled={\n                                (quoteData?.status === 'rejected' && quoteData.rejectQuotes) ||\n                                quoteData?.status === 'approved' ||\n                                quoteData?.status === 'ok' ||\n                                quoteData?.status === 'authorized' ||\n                                quoteData?.status === 'sentPay' ||\n                                quoteData?.status === 'paid'\n                              }\n                            />\n                          </div>\n                          <div className=\"mb-3\">\n                            <CFormLabel htmlFor=\"approvedAmount\">\n                              Monto de cotización aprobada ($)\n                            </CFormLabel>\n                            <CFormInput\n                              type=\"number\"\n                              id=\"approvedAmount\"\n                              placeholder=\"Importe\"\n                              onChange={(e) => setApprovedAmount(e.target.value)}\n                              value={approvedAmount}\n                              disabled={\n                                rejectQuotes ||\n                                quoteData?.status === 'approved' ||\n                                quoteData?.status === 'ok' ||\n                                quoteData?.status === 'authorized' ||\n                                quoteData?.status === 'sentPay' ||\n                                quoteData?.status === 'paid'\n                              }\n                            />\n                          </div>\n                          {quoteData?.status === 'rejected' ||\n                          quoteData?.status === 'approved' ||\n                          quoteData?.status === 'ok' ||\n                          quoteData?.status === 'authorized' ||\n                          quoteData?.status === 'sentPay' ||\n                          quoteData?.status === 'paid' ? (\n                            <CButton\n                              color=\"primary\"\n                              className=\"text-white\"\n                              onClick={() => setVisibleObs(true)}\n                            >\n                              Ver observaciones\n                            </CButton>\n                          ) : (\n                            <div className=\"mb-3\">\n                              <CFormTextarea\n                                id=\"obs\"\n                                label=\"Observación\"\n                                rows={2}\n                                value={observation}\n                                onChange={(e) => setObservation(e.target.value)}\n                              ></CFormTextarea>\n                            </div>\n                          )}\n                        </>\n                      )}\n                  </>\n                ) : (\n                  !hasUploadQuotePermission && (\n                    <h3 className=\"text-center text-primary font-monospace\">\n                      No hay cotizaciónes disponibles\n                    </h3>\n                  )\n                )}\n              </CForm>\n            </CTabPane>\n            {/* Provider selection */}\n            <CTabPane role=\"tabpanel\" aria-labelledby=\"data-tab-pane\" visible={activeKey === 3}>\n              <CForm className=\"mt-3\">\n                <div className=\"mb-3 d-flex\">\n                  <div className=\"flex-md-fill me-2\">\n                    <CFormLabel>Proveedor(*)</CFormLabel>\n                    <CFormSelect\n                      aria-label=\"provider\"\n                      onChange={(e) => setProviderID(e.target.value)}\n                      value={providerID}\n                      disabled={quoteData?.status === 'sentPay' || quoteData?.status === 'paid'}\n                    >\n                      <option value={''}>Selecciona...</option>\n                      {providers.data.map(({ id, name }) => (\n                        <option key={id} value={id}>\n                          {name}\n                        </option>\n                      ))}\n                    </CFormSelect>\n                  </div>\n                  <div className=\"flex-md-fill me-2\">\n                    <CFormLabel>Cuenta(*)</CFormLabel>\n                    <CFormSelect\n                      aria-label=\"providerAccount\"\n                      onChange={(e) => setProviderAccountID(e.target.value)}\n                      value={providerAccountID}\n                      disabled={quoteData?.status === 'sentPay' || quoteData?.status === 'paid'}\n                    >\n                      <option value={''}>Selecciona...</option>\n                      {accounts?.data?.map(({ id, clabe, bank }) => (\n                        <option key={id} value={id}>\n                          {bank.name} - {clabe}\n                        </option>\n                      ))}\n                    </CFormSelect>\n                  </div>\n                </div>\n                {view && quoteData.status === 'authorized' && hasPayPermission && (\n                  <div className=\"mb-3\">\n                    <CFormLabel>\n                      Sube la <b>factura</b> para la solicitud de pago\n                    </CFormLabel>\n                    <CFormInput\n                      ref={inputInvoiceFile}\n                      type=\"file\"\n                      id=\"invoiceFile\"\n                      onChange={(e) =>\n                        setInvoiceFile({\n                          tag: fileTags.invoice,\n                          file: e.target.files[0],\n                          localName: e.target.files[0].name,\n                        })\n                      }\n                      text=\"Archivos permitidos jpg, pdf, jpeg (10 MB)\"\n                      disabled={paymentWithoutInvoice}\n                    />\n                  </div>\n                )}\n                {invoiceFile && (\n                  <div className=\"mb-3 d-flex\">\n                    <FileCard\n                      file={invoiceFile}\n                      onDelete={(id) => {\n                        setInvoiceFile(null)\n                        inputInvoiceFile.current.value = ''\n                      }}\n                      viewMode={invoiceFile?.id}\n                    />\n                  </div>\n                )}\n                <div className=\"mb-3\">\n                  <CFormCheck\n                    id=\"paymentWithoutInvoice\"\n                    label=\"Tramitar pago sin factura\"\n                    checked={paymentWithoutInvoice}\n                    onChange={(e) => setPaymentWithoutInvoice(e.target.checked)}\n                    disabled={quoteData?.status === 'sentPay' || quoteData?.status === 'paid'}\n                  />\n                </div>\n              </CForm>\n            </CTabPane>\n          </CTabContent>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={onClose}>\n            Cerrar\n          </CButton>\n          {view && quoteData.status === 'authorized' && hasPayPermission && (\n            <CButton color=\"info\" className=\"text-light fw-semibold\" onClick={onPay}>\n              Enviar a pago\n            </CButton>\n          )}\n\n          {view &&\n            quoteData.status !== 'approved' &&\n            quoteData.status !== 'authorized' &&\n            quoteData.status !== 'sentPay' &&\n            quoteData.status !== 'paid' && (\n              <CButton\n                color=\"primary\"\n                className=\"text-light fw-semibold\"\n                onClick={(e) => {\n                  if (user.id !== quoteData.petitioner_id && hasUploadQuotePermission) {\n                    onUploadQuoteFile(e)\n                  } else {\n                    onSave(e) //for approve\n                  }\n                }}\n              >\n                Guardar\n              </CButton>\n            )}\n\n          {!view && (\n            <CButton\n              color=\"primary\"\n              className=\"text-light fw-semibold\"\n              onClick={(e) => {\n                onSave(e)\n              }}\n            >\n              Guardar\n            </CButton>\n          )}\n\n          {hasAuthorizeMinor5000Permission &&\n            view &&\n            quoteData.status === 'approved' &&\n            quoteData.approvedAmount < 5000 && (\n              <CButton color=\"info\" className=\"text-light fw-semibold\" onClick={onAuthorize}>\n                Autorizar\n              </CButton>\n            )}\n          {hasAuthorizeMayor5000Permission &&\n            view &&\n            quoteData.status === 'ok' &&\n            quoteData.approvedAmount > 5000 && (\n              <CButton color=\"info\" className=\"text-light fw-semibold\" onClick={onAuthorize}>\n                Autorizar\n              </CButton>\n            )}\n          {hasAuthorizeMinor5000Permission &&\n            view &&\n            quoteData.status === 'approved' &&\n            quoteData.approvedAmount > 5000 && (\n              <CButton color=\"info\" className=\"text-light fw-semibold\" onClick={onVOBO}>\n                VoBo\n              </CButton>\n            )}\n          {hasAuthorizeMinor5000Permission && view && quoteData.status === 'approved' && (\n            <CButton color=\"danger\" className=\"text-light fw-semibold\" onClick={onReject}>\n              Rechazar\n            </CButton>\n          )}\n        </CModalFooter>\n      </CModal>\n      {visibleObs && (\n        <QuoteModalObs\n          quoteID={quoteData?.id}\n          visible={visibleObs}\n          onClose={() => setVisibleObs(false)}\n        />\n      )}\n    </>\n  )\n}\n\nexport default QuoteModalForm\n","import axios from 'axios'\nimport { GET_UNIT_LINES, GET_UNITS, UNIT_ERROR } from './types'\nimport config from '../server.config'\n\nexport const getLines = () => async (dispatch) => {\n  try {\n    const res = await axios.get(`${config.instance.baseURL}/api/select/line`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: GET_UNIT_LINES,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: UNIT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n\nexport const getUnitsByLine = (line) => async (dispatch) => {\n  try {\n    const res = await axios.get(`${config.instance.baseURL}/api/select/unit/line?line=${line}`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: GET_UNITS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: UNIT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n","import axios from 'axios'\nimport { GET_QUOTE_CONCEPTS, QUOTE_CONCEPT_ERROR, GET_QUOTE_CHARGES } from './types'\nimport config from '../server.config'\n\nexport const getCharges = (departmentID) => async (dispatch) => {\n  try {\n    const res = await axios.get(\n      `${config.instance.baseURL}/api/select/charge?department_id=${departmentID}`,\n      {\n        headers: {\n          ...config.instance.headers,\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      },\n    )\n    dispatch({\n      type: GET_QUOTE_CHARGES,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: QUOTE_CONCEPT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n\nexport const getConceptsByCharge = (charge) => async (dispatch) => {\n  try {\n    const res = await axios.get(\n      `${config.instance.baseURL}/api/select/concept/charge?charge=${charge}`,\n      {\n        headers: {\n          ...config.instance.headers,\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      },\n    )\n    dispatch({\n      type: GET_QUOTE_CONCEPTS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: QUOTE_CONCEPT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n","import React, { useState } from 'react'\nimport {\n  CTable,\n  CTableBody,\n  CTableHead,\n  CTableRow,\n  CTableHeaderCell,\n  CTableDataCell,\n  CDropdown,\n  CDropdownToggle,\n  CDropdownMenu,\n  CDropdownItem,\n  CBadge,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilOptions } from '@coreui/icons'\nimport { useDispatch } from 'react-redux'\nimport Swal from 'sweetalert2'\nimport {\n  formatTimezoneToDate,\n  statusQuote,\n  statusQuoteColors,\n  useHasPermission,\n} from 'src/utils/functions'\nimport { setToast } from 'src/actions/toast'\nimport { AppToast } from 'src/components/app'\nimport QuoteModalForm from './QuoteModalForm'\nimport QuoteModalObs from './QuoteModalObs'\nimport { deleteFilesByQuote, deleteQuote } from 'src/actions/quote'\n\nconst QuoteTable = ({ data }) => {\n  const [visible, setVisible] = useState(false),\n    [visibleObs, setVisibleObs] = useState(false),\n    [quoteData, setQuoteData] = useState(null),\n    [viewModalMode, setViewModalMode] = useState(false),\n    dispatch = useDispatch(),\n    hasDeletePermission = useHasPermission('quotes', 'delete'),\n    hasEditPermission = useHasPermission('quotes', 'edit'),\n    hasShowPermission = useHasPermission('quotes', 'show'),\n    hasUploadQuotePermission = useHasPermission('quotes', 'upload.quote')\n\n  const onDelete = (id) => {\n    Swal.fire({\n      title: '¿Está seguro?',\n      text: 'No podrás revertir esto.',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, eliminar.',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(\n          deleteQuote(id, (dataRes) => {\n            if (dataRes.success) {\n              dispatch(\n                setToast(\n                  AppToast({\n                    msg: 'Solicitud eliminada correctamente.',\n                    title: 'Solicitudes de compra',\n                    type: 'success',\n                  }),\n                ),\n              )\n              dispatch(deleteFilesByQuote(id))\n            } else {\n              dispatch(\n                setToast(\n                  AppToast({\n                    msg: 'Ha ocurrido un error.',\n                    title: 'Solicitudes de compra',\n                    type: 'error',\n                  }),\n                ),\n              )\n            }\n          }),\n        )\n        Swal.fire({\n          title: 'Eliminado!',\n          text: 'La solicitud ha sido eliminada.',\n          icon: 'success',\n        })\n      }\n    })\n  }\n\n  return (\n    <>\n      <CTable striped responsive>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Folio</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Solicitante</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Titulo</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Fecha de solicitud</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Giro</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Unidad</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Status</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\" className=\"text-center\">\n              Opciones\n            </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          {data?.map((quote) => (\n            <CTableRow key={quote.id}>\n              <CTableHeaderCell scope=\"row\">{quote.id}</CTableHeaderCell>\n              <CTableDataCell>{quote.petitioner.name}</CTableDataCell>\n              <CTableDataCell>{quote.title}</CTableDataCell>\n              <CTableDataCell>{formatTimezoneToDate(quote.created_at)}</CTableDataCell>\n              <CTableDataCell>{quote.line}</CTableDataCell>\n              <CTableDataCell>{quote.unit}</CTableDataCell>\n              <CTableDataCell>\n                <CBadge style={{ backgroundColor: statusQuoteColors[quote.status] }}>\n                  {statusQuote(quote.status, hasUploadQuotePermission)}\n                </CBadge>\n              </CTableDataCell>\n              <CTableDataCell className=\"text-center overflow-visible\">\n                <CDropdown variant=\"dropdown\">\n                  <CDropdownToggle href=\"#\" color=\"light\">\n                    <CIcon icon={cilOptions} title=\"Opciones\" size=\"lg\" />\n                  </CDropdownToggle>\n                  <CDropdownMenu className=\"position-fixed\">\n                    {hasShowPermission && (\n                      <CDropdownItem\n                        style={{ cursor: 'pointer' }}\n                        onClick={() => {\n                          setQuoteData(quote)\n                          setViewModalMode(true)\n                          setVisible(!visible)\n                        }}\n                      >\n                        Ver solicitud\n                      </CDropdownItem>\n                    )}\n                    {hasEditPermission &&\n                      quote.status !== 'approved' &&\n                      quote.status !== 'inprogress' &&\n                      quote.status !== 'ok' &&\n                      quote.status !== 'authorized' &&\n                      quote.status !== 'sentPay' &&\n                      quote.status !== 'paid' && (\n                        <CDropdownItem\n                          style={{ cursor: 'pointer' }}\n                          onClick={() => {\n                            setQuoteData(quote)\n                            setVisible(!visible)\n                          }}\n                        >\n                          Editar\n                        </CDropdownItem>\n                      )}\n                    {hasDeletePermission &&\n                      quote.status !== 'approved' &&\n                      quote.status !== 'inprogress' &&\n                      quote.status !== 'ok' &&\n                      quote.status !== 'authorized' &&\n                      quote.status !== 'sentPay' &&\n                      quote.status !== 'paid' && (\n                        <CDropdownItem\n                          style={{ cursor: 'pointer' }}\n                          onClick={() => onDelete(quote.id)}\n                        >\n                          Eliminar\n                        </CDropdownItem>\n                      )}\n                    <CDropdownItem\n                      style={{ cursor: 'pointer' }}\n                      onClick={() => {\n                        setQuoteData(quote)\n                        setVisibleObs(!visibleObs)\n                      }}\n                    >\n                      Ver observaciones\n                    </CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n              </CTableDataCell>\n            </CTableRow>\n          ))}\n        </CTableBody>\n      </CTable>\n      {visible && (\n        <QuoteModalForm\n          visible={visible}\n          onClose={() => {\n            setVisible(false)\n            setViewModalMode(false)\n          }}\n          quoteData={quoteData}\n          view={viewModalMode}\n        />\n      )}\n      {visibleObs && (\n        <QuoteModalObs\n          quoteID={quoteData?.id}\n          visible={visibleObs}\n          onClose={() => setVisibleObs(false)}\n        />\n      )}\n    </>\n  )\n}\n\nexport default QuoteTable\n","/* eslint-disable react/no-unescaped-entities */\nimport React, { useEffect, useState } from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardFooter,\n  CButton,\n  CForm,\n  CFormLabel,\n  CFormSelect,\n  CFormInput,\n  CSpinner,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilPlus, cilCloudDownload } from '@coreui/icons'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AppPagination } from 'src/components/app'\nimport { useHasPermission } from 'src/utils/functions'\nimport QuoteModalForm from 'src/components/payments/quotes/QuoteModalForm'\nimport QuoteTable from 'src/components/payments/quotes/QuoteTable'\nimport { getQuotes } from 'src/actions/quote'\n\nconst Quotes = () => {\n  const [visible, setVisible] = useState(false),\n    [caseFilter, setCaseFilter] = useState('provider'),\n    [filterValue, setFilterValue] = useState(''),\n    [currentPage, setCurrentPage] = useState(1),\n    dispatch = useDispatch(),\n    {\n      currentPage: currentPageState,\n      last_page,\n      data: quotes,\n    } = useSelector((state) => state.quote.quotes),\n    loading = useSelector((state) => state.quote.loading)\n\n  useEffect(() => {\n    dispatch(getQuotes(currentPage, caseFilter, filterValue))\n  }, [currentPage, dispatch])\n\n  useEffect(() => {\n    if (!currentPageState) {\n      return\n    }\n    setCurrentPage(currentPageState)\n  }, [currentPageState])\n\n  return (\n    <>\n      <CCard>\n        <CCardHeader className=\"d-flex justify-content-between align-items-center\">\n          <h4>Solicitudes de compra</h4>\n          <div className=\"d-flex gap-2\">\n            {useHasPermission('quotes', 'create') && (\n              <CButton\n                color=\"primary\"\n                className=\"text-light fw-semibold align-content-center d-flex\"\n                onClick={() => setVisible(!visible)}\n              >\n                <CIcon icon={cilPlus} size=\"xl\" className=\"me-1\" />\n                Nuevo\n              </CButton>\n            )}\n            <CButton color=\"info\" className=\"text-light align-content-center d-flex\">\n              <CIcon icon={cilCloudDownload} size=\"xl\" />\n            </CButton>\n          </div>\n        </CCardHeader>\n        <CCardBody>\n          <CForm>\n            <CFormLabel>Filtros de busqueda</CFormLabel>\n            <div className=\"mb-3 d-flex\">\n              <div className=\"flex-fill me-2\">\n                <CFormSelect\n                  value={caseFilter}\n                  onChange={(e) => setCaseFilter(e.target.value)}\n                  aria-label=\"caseFilter\"\n                  options={[\n                    { label: 'Proveedor', value: 'provider' },\n                    { label: 'Solicitante', value: 'petitioner' },\n                    { label: 'Status', value: 'status' },\n                  ]}\n                />\n              </div>\n              <div className=\"flex-fill me-2\">\n                {caseFilter !== 'status' ? (\n                  <CFormInput\n                    value={filterValue}\n                    onChange={(e) => setFilterValue(e.target.value)}\n                    type=\"text\"\n                    id=\"provider\"\n                    placeholder=\"Ingresar texto\"\n                  />\n                ) : (\n                  <CFormSelect\n                    value={filterValue}\n                    onChange={(e) => setFilterValue(e.target.value)}\n                    aria-label=\"caseFilter\"\n                    options={[\n                      { label: 'Pendientes', value: 'pending' },\n                      { label: 'Revisadas', value: 'review' },\n                      { label: 'Aprobadas', value: 'approved' },\n                      { label: 'Rechazadas', value: 'rejects' },\n                    ]}\n                  />\n                )}\n              </div>\n            </div>\n            <CButton\n              type=\"button\"\n              className=\"text-light fw-semibold\"\n              onClick={() => dispatch(getQuotes(currentPage, caseFilter, filterValue))}\n            >\n              Buscar\n            </CButton>\n          </CForm>\n          {loading ? (\n            <div className=\"d-flex justify-content-center\">\n              <CSpinner color=\"primary\" variant=\"grow\" />\n            </div>\n          ) : (\n            <QuoteTable data={quotes} />\n          )}\n        </CCardBody>\n        <CCardFooter>\n          <AppPagination\n            currentPage={currentPage}\n            lastPage={last_page}\n            setCurrentPage={setCurrentPage}\n          />\n        </CCardFooter>\n      </CCard>\n      {visible && <QuoteModalForm visible={visible} onClose={() => setVisible(false)} />}\n    </>\n  )\n}\n\nexport default Quotes\n"],"names":["getDepartments","page","filter","value","async","res","axios","get","concat","config","instance","baseURL","headers","Authorization","localStorage","getItem","dispatch","type","GET_DEPARTMENTS","payload","data","err","DEPARTMENT_ERROR","msg","response","statusText","status","addDepartment","cb","post","ADD_DEPARTMENT","success","message","updateDepartment","id","put","UPDATE_DEPARTMENT","deleteDepartment","delete","DELETE_DEPARTMENT","selectDepartments","SELECT_DEPARTMENTS","getProviders","GET_PROVIDERS","filters","PROVIDER_ERROR","addProvider","ADD_PROVIDER","updateProvider","UPDATE_PROVIDER","deleteProvider","DELETE_PROVIDER","exportProviderExcel","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","EXPORT_PROVIDER_EXCEL","selectProviders","SELECT_PROVIDERS","selectAccountsByProvider","SELECT_ACCOUNT_PROVIDERS","formatNumber","toFixed","toString","replace","formatTimezoneToDate","date","DateTime","fromISO","toLocaleString","DATE_SHORT","formatTimezoneToDateTime","DATETIME_SHORT","statusQuote","uploadQuotePermission","arguments","length","undefined","inprogress","approved","authorized","ok","sent","sentPay","paid","rejected","statusQuoteColors","statusPurchaseRequest","pending","statusPurchaseRequestColors","permissions","index","show","create","edit","reject","pay","approve","authorize","modules","useHasPermission","submodule","permission","userPermissions","useSelector","state","auth","hasSubmodule","find","m","p","modelTypes","provider","purchaseRequest","quote","_ref","_useSelector","_useSelector$data","visible","onClose","quoteID","useDispatch","setMessage","useState","observations","loadingObservations","user","useEffect","getQuoteObservations","_jsxs","CModal","keyboard","backdrop","children","_jsx","CModalHeader","CModalTitle","CModalBody","className","CSpinner","color","variant","_Fragment","CTable","striped","responsive","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","map","observation","CTableDataCell","name","created_at","CForm","CFormTextarea","label","rows","onChange","e","target","CModalFooter","CButton","onClick","preventDefault","setToast","AppToast","title","user_id","quote_id","addQuoteObservation","quoteObservationRes","error","console","log","_accounts$data","quoteData","view","activeKey","setActiveKey","setQuoteID","setTitle","charge","setCharge","departments","setDepartments","departmentID","setDepartmentID","quoteConceptID","setQuoteConceptID","description","setDescription","imgFiles","setImgFiles","quoteFiles","setQuoteFiles","invoiceFile","setInvoiceFile","descriptionQuote","setDescriptionQuote","numProviders","setNumProviders","recommendedProviders","setRecommendedProviders","recommendedProvidersInput","setRecommendedProvidersInput","suggestedProvider","setSuggestedProvider","line","setLine","unit","setUnit","selectedQuoteID","setSelectedQuoteID","rejectQuotes","setRejectQuotes","approvedAmount","setApprovedAmount","providerID","setProviderID","providerAccountID","setProviderAccountID","quoteProvider","setQuoteProvider","quoteAmount","setQuoteAmount","deliveryDate","setDeliveryDate","paymentWithoutInvoice","setPaymentWithoutInvoice","onePayment","setOnePayment","multiplePayments","setMultiplePayments","setObservation","progress","file","providers","accounts","hasPayPermission","hasApprovePermission","hasAuthorizeMinor5000Permission","hasAuthorizeMayor5000Permission","hasUploadQuotePermission","inputImgFile","useRef","inputQuoteFile","inputInvoiceFile","charges","quoteConcept","concepts","departmentsDB","department","lines","units","quotes","progressQuoteFile","visibleObs","setVisibleObs","GET_UNIT_LINES","UNIT_ERROR","blacklist","dep","includes","GET_UNITS","getUnitsByLine","GET_QUOTE_CHARGES","QUOTE_CONCEPT_ERROR","getCharges","GET_QUOTE_CONCEPTS","getConceptsByCharge","array","i","push","_quoteData$files$find","quote_concept","department_id","JSON","parse","images","files","selectedQuoteFile","provider_id","provider_account_id","_quoteData$payments","_quoteData$payments$f","filesPR","payments","purchase_request_pending_id","fromQuote","f","tag","fileTags","invoice","clearGeneralInputs","useCallback","onSave","quote_concept_id","stringify","updateQuote","quoteRes","onUploadImgFile","addQuote","petitioner_id","Promise","all","uploadFile","finally","getQuotes","current_page","onUploadInvoiceFile","purchaseRequestRes","onAuthorize","Swal","showCancelButton","confirmButtonText","then","result","isConfirmed","setTimeout","_quoteData$files","amount","current","size","scrollable","some","CProgress","CNav","role","CNavItem","CNavLink","active","component","CTabContent","CTabPane","CFormLabel","CFormInput","placeholder","disabled","CFormSelect","_ref2","_ref3","_ref4","concept","ref","localName","img","accept","text","FileCard","onDelete","viewMode","CFormCheck","checked","l","_ref5","htmlFor","max","min","x","onSelectRecommendedProvider","v","newArr","_ref6","onAddQuoteFiles","quotation","alert","CIcon","icon","cilPlus","quoteFile","_ref7","_ref8","clabe","bank","onPay","sendPay","sendPayRes","uploadQuoteFile","onUploadQuoteFile","input","inputAttributes","autocapitalize","confirmButtonColor","showLoaderOnConfirm","preConfirm","allowOutsideClick","QuoteModalObs","setVisible","setQuoteData","viewModalMode","setViewModalMode","hasDeletePermission","hasEditPermission","hasShowPermission","cancelButtonColor","deleteQuote","dataRes","deleteFilesByQuote","petitioner","CBadge","style","backgroundColor","CDropdown","CDropdownToggle","cilOptions","CDropdownMenu","CDropdownItem","cursor","QuoteModalForm","Quotes","caseFilter","setCaseFilter","filterValue","setFilterValue","currentPage","setCurrentPage","currentPageState","last_page","loading","CCard","CCardHeader","cilCloudDownload","CCardBody","options","QuoteTable","CCardFooter","AppPagination","lastPage"],"sourceRoot":""}