{"version":3,"file":"static/js/752.45262bc8.chunk.js","mappings":"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","sources":["utils/functions.js","actions/department.js","components/users/departments/DepartmentModalForm.js","components/users/departments/DepartmentTable.js","views/users/departments/Departments.js"],"sourcesContent":["import { DateTime } from 'luxon'\nimport { useSelector } from 'react-redux'\n\nexport const formatNumber = (value) => {\n  let val = (value / 1).toFixed(2)\n  return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n}\n\nexport const formatTimezoneToDate = (date) => {\n  return DateTime.fromISO(date).toLocaleString(DateTime.DATE_SHORT)\n}\n\nexport const formatTimezoneToDateTime = (date) => {\n  return DateTime.fromISO(date).toLocaleString(DateTime.DATETIME_SHORT)\n}\n\nexport const movementTypes = {\n  advance: 'Anticipo',\n  settlement: 'Liquidación',\n  payment: 'Abono a cuenta',\n}\n\nexport const statusPurchaseRequest = {\n  pending: 'Cotización completa',\n  approved: 'Cotización aprobada',\n  paid: 'Cotización pagada',\n  rejected: 'Cotización rechazada',\n}\n\nexport const statusPurchaseRequestColors = {\n  pending: 'warning',\n  approved: 'success',\n  paid: 'info',\n  rejected: 'danger',\n}\n\nexport const permissions = {\n  index: 'Lectura',\n  create: 'Crear',\n  edit: 'Editar',\n  delete: 'Eliminar',\n  reject: 'Rechazar',\n  pay: 'Pagar',\n  authorize: 'Autorizar',\n  modules: 'Asignar modulos',\n  permissions: 'Asignar permisos',\n}\n\nexport const useHasPermission = (submodule, permission) => {\n  const userPermissions = useSelector((state) => state.auth.permissions)\n  const userModules = useSelector((state) => state.auth.modules)\n\n  const hasSubmodule = userModules.find((m) => m.submodule === submodule)\n\n  if (hasSubmodule) {\n    return userPermissions.find(\n      (p) => p.submodule === hasSubmodule.submodule && p.permission === permission,\n    )\n      ? true\n      : false\n  }\n\n  return false\n}\n","import axios from 'axios'\nimport {\n  GET_DEPARTMENTS,\n  ADD_DEPARTMENT,\n  UPDATE_DEPARTMENT,\n  DELETE_DEPARTMENT,\n  SELECT_DEPARTMENTS,\n  DEPARTMENT_ERROR,\n} from './types'\nimport config from 'src/server.config'\n\nexport const getDepartments = (page, filter, value) => async (dispatch) => {\n  try {\n    const res = await axios.get(\n      `${config.instance.baseURL}/api/department?${filter}=${value}&page=${page}`,\n      {\n        headers: {\n          ...config.instance.headers,\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      },\n    )\n    dispatch({\n      type: GET_DEPARTMENTS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: DEPARTMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n\nexport const addDepartment = (data, cb) => async (dispatch) => {\n  try {\n    const res = await axios.post(`${config.instance.baseURL}/api/department`, data, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: ADD_DEPARTMENT,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: DEPARTMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const updateDepartment = (data, id, cb) => async (dispatch) => {\n  try {\n    const res = await axios.put(`${config.instance.baseURL}/api/department/${id}`, data, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: UPDATE_DEPARTMENT,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: DEPARTMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const deleteDepartment = (id, cb) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`${config.instance.baseURL}/api/department/${id}`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: DELETE_DEPARTMENT,\n      payload: id,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: DEPARTMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const selectDepartments = () => async (dispatch) => {\n  try {\n    const res = await axios.get(`${config.instance.baseURL}/api/select/department`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: SELECT_DEPARTMENTS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: DEPARTMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport {\n  CModal,\n  CModalHeader,\n  CModalBody,\n  CModalTitle,\n  CModalFooter,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CButton,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CTabContent,\n  CTabPane,\n} from '@coreui/react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setToast } from 'src/actions/toast'\nimport { AppToast } from 'src/components/app'\nimport { addDepartment, updateDepartment } from 'src/actions/department'\n\nconst DepartmentModalForm = ({ visible, onClose, departmentData }) => {\n  const [activeKey, setActiveKey] = useState(1),\n    [departmentID, setDepartmentID] = useState(),\n    [department, setDepartment] = useState(),\n    dispatch = useDispatch(),\n    loading = useSelector((state) => state.department.loading)\n\n  const onSave = (e) => {\n    e.preventDefault()\n    if (!department) {\n      alert('Ingrese un nombre')\n      return\n    }\n    let data = {\n      name: department,\n    }\n    dispatch(\n      departmentData\n        ? updateDepartment(data, departmentID, (dataRes) => {\n            if (dataRes.success) {\n              dispatch(\n                setToast(\n                  AppToast({\n                    msg: 'Departamento actualizado correctamente.',\n                    title: 'Departamentos',\n                    type: 'success',\n                  }),\n                ),\n              )\n            } else {\n              dispatch(\n                setToast(\n                  AppToast({ msg: 'Ha ocurrido un error.', title: 'Departamentos', type: 'error' }),\n                ),\n              )\n            }\n            cleanInputs()\n            onClose()\n          })\n        : addDepartment(data, (dataRes) => {\n            if (dataRes.success) {\n              dispatch(\n                setToast(\n                  AppToast({\n                    msg: 'Departamento agregado correctamente.',\n                    title: 'Departamentos',\n                    type: 'success',\n                  }),\n                ),\n              )\n            } else {\n              dispatch(\n                setToast(\n                  AppToast({ msg: 'Ha ocurrido un error.', title: 'Departamentos', type: 'error' }),\n                ),\n              )\n            }\n            cleanInputs()\n            onClose()\n          }),\n    )\n  }\n\n  const cleanInputs = useCallback(() => {\n    setDepartment()\n    setActiveKey(1)\n  }, [])\n\n  useEffect(() => {\n    if (!departmentData) {\n      return\n    }\n    setDepartmentID(departmentData.id)\n    setDepartment(departmentData.name)\n  }, [departmentData])\n\n  return (\n    <CModal visible={visible} onClose={onClose} aria-labelledby=\"LiveDemoExampleLabel\" size=\"lg\">\n      <CModalHeader onClose={onClose}>\n        <CModalTitle id=\"LiveDemoExampleLabel\">\n          {departmentData ? `Editar ${departmentData.name}` : 'Agregar nuevo'}\n        </CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <CNav variant=\"tabs\" role=\"tablist\" className=\"mt-1\">\n          <CNavItem role=\"presentation\">\n            <CNavLink\n              active={activeKey === 1}\n              component=\"button\"\n              role=\"tab\"\n              aria-controls=\"data-tab-pane\"\n              aria-selected={activeKey === 1}\n              onClick={() => setActiveKey(1)}\n            >\n              Datos\n            </CNavLink>\n          </CNavItem>\n        </CNav>\n        <CTabContent>\n          {/* department data */}\n          <CTabPane role=\"tabpanel\" aria-labelledby=\"data-tab-pane\" visible={activeKey === 1}>\n            <CForm className=\"mt-3\">\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"department\">Departamento</CFormLabel>\n                <CFormInput\n                  type=\"text\"\n                  id=\"department\"\n                  placeholder=\"nombre\"\n                  onChange={(e) => setDepartment(e.target.value)}\n                  value={department}\n                />\n              </div>\n            </CForm>\n          </CTabPane>\n        </CTabContent>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"secondary\" onClick={onClose}>\n          Cerrar\n        </CButton>\n        <CButton color=\"primary\" className=\"text-light fw-semibold\" onClick={onSave}>\n          Guardar\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default DepartmentModalForm\n","import React, { useState } from 'react'\nimport {\n  CTable,\n  CTableBody,\n  CTableHead,\n  CTableRow,\n  CTableHeaderCell,\n  CTableDataCell,\n  CDropdown,\n  CDropdownToggle,\n  CDropdownMenu,\n  CDropdownItem,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilOptions } from '@coreui/icons'\nimport { useDispatch } from 'react-redux'\nimport Swal from 'sweetalert2'\nimport { setToast } from 'src/actions/toast'\nimport { AppToast } from 'src/components/app'\nimport DepartmentModalForm from './DepartmentModalForm'\nimport { deleteDepartment } from 'src/actions/department'\nimport { useHasPermission } from 'src/utils/functions'\n\nconst DepartmentTable = ({ data }) => {\n  const [visible, setVisible] = useState(false),\n    [departmentData, setDepartmentData] = useState(null),\n    dispatch = useDispatch(),\n    hasDeletePermission = useHasPermission('departments', 'delete'),\n    hasEditPermission = useHasPermission('departments', 'edit')\n\n  const onDelete = (id) => {\n    Swal.fire({\n      title: '¿Está seguro?',\n      text: 'No podrás revertir esto.',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, eliminar.',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(\n          deleteDepartment(id, (dataRes) => {\n            if (dataRes.success) {\n              dispatch(\n                setToast(\n                  AppToast({\n                    msg: 'Departamento eliminado correctamente.',\n                    title: 'Departamentos',\n                    type: 'success',\n                  }),\n                ),\n              )\n              Swal.fire({\n                title: 'Eliminado!',\n                text: 'El departamento ha sido eliminado.',\n                icon: 'success',\n              })\n            } else {\n              dispatch(\n                setToast(\n                  AppToast({\n                    msg: 'Ocurrio un error.',\n                    title: 'Departamentos',\n                    type: 'error',\n                  }),\n                ),\n              )\n            }\n          }),\n        )\n      }\n    })\n  }\n\n  return (\n    <>\n      <CTable striped responsive>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">#</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Departamento</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\" className=\"text-center\">\n              Opciones\n            </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          {data?.map((department) => (\n            <CTableRow key={department.id}>\n              <CTableHeaderCell scope=\"row\">{department.id}</CTableHeaderCell>\n              <CTableDataCell>{department.name}</CTableDataCell>\n              <CTableDataCell className=\"text-center overflow-visible\">\n                <CDropdown variant=\"dropdown\">\n                  <CDropdownToggle href=\"#\" color=\"light\">\n                    <CIcon icon={cilOptions} title=\"Opciones\" size=\"lg\" />\n                  </CDropdownToggle>\n                  <CDropdownMenu className=\"position-fixed\">\n                    {hasEditPermission && (\n                      <CDropdownItem\n                        style={{ cursor: 'pointer' }}\n                        onClick={() => {\n                          setVisible(!visible)\n                          setDepartmentData(department)\n                        }}\n                      >\n                        Editar\n                      </CDropdownItem>\n                    )}\n                    {hasDeletePermission && (\n                      <CDropdownItem\n                        style={{ cursor: 'pointer' }}\n                        onClick={() => onDelete(department.id)}\n                      >\n                        Eliminar\n                      </CDropdownItem>\n                    )}\n                  </CDropdownMenu>\n                </CDropdown>\n              </CTableDataCell>\n            </CTableRow>\n          ))}\n        </CTableBody>\n      </CTable>\n      <DepartmentModalForm\n        visible={visible}\n        onClose={() => setVisible(false)}\n        departmentData={departmentData}\n      />\n    </>\n  )\n}\n\nexport default DepartmentTable\n","import React, { useEffect, useState } from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardFooter,\n  CButton,\n  CForm,\n  CFormLabel,\n  CFormSelect,\n  CFormInput,\n  CSpinner,\n} from '@coreui/react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport CIcon from '@coreui/icons-react'\nimport { cilPlus } from '@coreui/icons'\nimport { AppPagination } from 'src/components/app'\nimport { getDepartments } from 'src/actions/department'\nimport DepartmentTable from 'src/components/users/departments/DepartmentTable'\nimport DepartmentModalForm from 'src/components/users/departments/DepartmentModalForm'\nimport { useHasPermission } from 'src/utils/functions'\n\nconst Departments = () => {\n  const [visible, setVisible] = useState(false),\n    dispatch = useDispatch(),\n    [caseFilter, setCaseFilter] = useState('name'),\n    [filterValue, setFilterValue] = useState(''),\n    departments = useSelector((state) => state.department.departments.data),\n    [currentPage, setCurrentPage] = useState(1),\n    currentPageState = useSelector((state) => state.department.departments.current_page),\n    lastPage = useSelector((state) => state.department.departments.last_page),\n    total = useSelector((state) => state.department.departments.total),\n    loading = useSelector((state) => state.department.loading)\n\n  useEffect(() => {\n    dispatch(getDepartments(currentPage, caseFilter, filterValue))\n  }, [dispatch, currentPage])\n\n  useEffect(() => {\n    if (!currentPageState) {\n      return\n    }\n    setCurrentPage(currentPageState)\n  }, [currentPageState])\n\n  return (\n    <>\n      <CCard>\n        <CCardHeader className=\"d-flex justify-content-between align-items-center\">\n          <h4>Listado de departamentos</h4>\n          <div className=\"d-flex gap-2\">\n            {useHasPermission('departments', 'create') && (\n              <CButton\n                color=\"primary\"\n                className=\"text-light fw-semibold align-content-center d-flex\"\n                onClick={() => setVisible(!visible)}\n              >\n                <CIcon icon={cilPlus} size=\"xl\" className=\"me-1\" />\n                Nuevo\n              </CButton>\n            )}\n          </div>\n        </CCardHeader>\n        <CCardBody>\n          <CForm>\n            <CFormLabel>Filtros de busqueda</CFormLabel>\n            <div className=\"mb-3 d-flex\">\n              <div className=\"flex-fill me-2\">\n                <CFormSelect\n                  value={caseFilter}\n                  onChange={(e) => setCaseFilter(e.target.value)}\n                  aria-label=\"caseFilter\"\n                  options={[{ label: 'Departamento', value: 'name' }]}\n                />\n              </div>\n              <div className=\"flex-fill me-2\">\n                <CFormInput\n                  value={filterValue}\n                  onChange={(e) => setFilterValue(e.target.value)}\n                  type=\"text\"\n                  placeholder=\"Ingresar texto\"\n                />\n              </div>\n            </div>\n            <CButton\n              type=\"button\"\n              className=\"text-light fw-semibold\"\n              onClick={() => dispatch(getDepartments(currentPage, caseFilter, filterValue))}\n            >\n              Buscar\n            </CButton>\n          </CForm>\n          {loading ? (\n            <div className=\"d-flex justify-content-center\">\n              <CSpinner color=\"primary\" variant=\"grow\" />\n            </div>\n          ) : (\n            <DepartmentTable data={departments} />\n          )}\n        </CCardBody>\n        <CCardFooter>\n          <AppPagination\n            currentPage={currentPage}\n            lastPage={lastPage}\n            setCurrentPage={setCurrentPage}\n          />\n        </CCardFooter>\n      </CCard>\n      <DepartmentModalForm visible={visible} onClose={() => setVisible(false)} />\n    </>\n  )\n}\n\nexport default Departments\n"],"names":["formatNumber","value","toFixed","toString","replace","formatTimezoneToDate","date","DateTime","fromISO","toLocaleString","DATE_SHORT","formatTimezoneToDateTime","DATETIME_SHORT","movementTypes","advance","settlement","payment","statusPurchaseRequest","pending","approved","paid","rejected","statusPurchaseRequestColors","permissions","index","create","edit","delete","reject","pay","authorize","modules","useHasPermission","submodule","permission","userPermissions","useSelector","state","auth","hasSubmodule","find","m","p","getDepartments","page","filter","async","res","axios","get","concat","config","instance","baseURL","headers","Authorization","localStorage","getItem","dispatch","type","GET_DEPARTMENTS","payload","data","err","DEPARTMENT_ERROR","msg","response","statusText","status","_ref","visible","onClose","departmentData","activeKey","setActiveKey","useState","departmentID","setDepartmentID","department","setDepartment","useDispatch","cleanInputs","loading","useCallback","useEffect","id","name","_jsxs","CModal","size","children","_jsx","CModalHeader","CModalTitle","CModalBody","CNav","variant","role","className","CNavItem","CNavLink","active","component","onClick","CTabContent","CTabPane","CForm","CFormLabel","htmlFor","CFormInput","placeholder","onChange","e","target","CModalFooter","CButton","color","preventDefault","alert","updateDepartment","cb","put","UPDATE_DEPARTMENT","success","message","dataRes","setToast","AppToast","title","addDepartment","post","ADD_DEPARTMENT","setVisible","setDepartmentData","hasDeletePermission","hasEditPermission","onDelete","Swal","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","deleteDepartment","DELETE_DEPARTMENT","_Fragment","CTable","striped","responsive","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","map","CTableDataCell","CDropdown","CDropdownToggle","href","CIcon","cilOptions","CDropdownMenu","CDropdownItem","style","cursor","DepartmentModalForm","Departments","caseFilter","setCaseFilter","filterValue","setFilterValue","departments","currentPage","setCurrentPage","currentPageState","current_page","lastPage","last_page","total","CCard","CCardHeader","cilPlus","CCardBody","CFormSelect","options","label","CSpinner","DepartmentTable","CCardFooter","AppPagination"],"sourceRoot":""}