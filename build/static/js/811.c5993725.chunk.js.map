{"version":3,"file":"static/js/811.c5993725.chunk.js","mappings":"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","sources":["utils/functions.js","actions/user.js","../node_modules/@coreui/icons/src/free/cil-x.ts","components/users/users/UserModalForm.js","components/users/users/UserModulesModalForm.js","components/users/users/UserPermissionsModalForm.js","actions/permission.js","components/users/users/UserTable.js","views/users/users/Users.js","../node_modules/@coreui/icons/src/free/cil-check-alt.ts"],"sourcesContent":["import { DateTime } from 'luxon'\nimport { useSelector } from 'react-redux'\n\nexport const formatNumber = (value) => {\n  let val = (value / 1).toFixed(2)\n  return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n}\n\nexport const formatTimezoneToDate = (date) => {\n  return DateTime.fromISO(date).toLocaleString(DateTime.DATE_SHORT)\n}\n\nexport const formatTimezoneToDateTime = (date) => {\n  return DateTime.fromISO(date).toLocaleString(DateTime.DATETIME_SHORT)\n}\n\nexport const movementTypes = {\n  advance: 'Anticipo',\n  settlement: 'Liquidación',\n  payment: 'Abono a cuenta',\n}\n\nexport const statusPurchaseRequest = {\n  pending: 'Cotización completa',\n  approved: 'Cotización aprobada',\n  paid: 'Cotización pagada',\n  rejected: 'Cotización rechazada',\n}\n\nexport const statusPurchaseRequestColors = {\n  pending: 'warning',\n  approved: 'success',\n  paid: 'info',\n  rejected: 'danger',\n}\n\nexport const permissions = {\n  index: 'Lectura',\n  create: 'Crear',\n  edit: 'Editar',\n  delete: 'Eliminar',\n  reject: 'Rechazar',\n  pay: 'Pagar',\n  authorize: 'Autorizar',\n  modules: 'Asignar modulos',\n  permissions: 'Asignar permisos',\n}\n\nexport const useHasPermission = (submodule, permission) => {\n  const userPermissions = useSelector((state) => state.auth.permissions)\n  const userModules = useSelector((state) => state.auth.modules)\n\n  const hasSubmodule = userModules.find((m) => m.submodule === submodule)\n\n  if (hasSubmodule) {\n    return userPermissions.find(\n      (p) => p.submodule === hasSubmodule.submodule && p.permission === permission,\n    )\n      ? true\n      : false\n  }\n\n  return false\n}\n","import axios from 'axios'\nimport {\n  GET_USERS,\n  ADD_USER,\n  UPDATE_USER,\n  DELETE_USER,\n  ASSIGN_MODULE_USER,\n  ASSIGN_PERMISSION_USER,\n  USER_ERROR,\n} from './types'\nimport config from 'src/server.config'\n\nexport const getUsers = (page, filter, value) => async (dispatch) => {\n  try {\n    const res = await axios.get(\n      `${config.instance.baseURL}/api/user?${filter}=${value}&page=${page}`,\n      {\n        headers: {\n          ...config.instance.headers,\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      },\n    )\n    dispatch({\n      type: GET_USERS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: USER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n\nexport const addUser = (data, cb) => async (dispatch) => {\n  try {\n    const res = await axios.post(`${config.instance.baseURL}/api/user`, data, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: ADD_USER,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: USER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const updateUser = (data, id, cb) => async (dispatch) => {\n  try {\n    const res = await axios.put(`${config.instance.baseURL}/api/user/${id}`, data, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: UPDATE_USER,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: USER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const deleteUser = (id, cb) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`${config.instance.baseURL}/api/user/${id}`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: DELETE_USER,\n      payload: id,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: USER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const assignModules = (data, cb) => async (dispatch) => {\n  try {\n    const res = await axios.post(`${config.instance.baseURL}/api/assign/module`, data, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: UPDATE_USER,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: USER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const assignPermissions = (data, cb) => async (dispatch) => {\n  try {\n    const res = await axios.post(`${config.instance.baseURL}/api/assign/permission`, data, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: UPDATE_USER,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: USER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n","export var cilX = [\"512 512\", \"<polygon fill='var(--ci-primary-color, currentColor)' points='427.314 107.313 404.686 84.687 256 233.373 107.314 84.687 84.686 107.313 233.373 256 84.686 404.687 107.314 427.313 256 278.627 404.686 427.313 427.314 404.687 278.627 256 427.314 107.313' class='ci-primary'/>\"];\n","import React, { useState, useEffect, useCallback } from 'react'\nimport {\n  CModal,\n  CModalHeader,\n  CModalBody,\n  CModalTitle,\n  CModalFooter,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CButton,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CTabContent,\n  CTabPane,\n  CFormSelect,\n} from '@coreui/react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setToast } from 'src/actions/toast'\nimport { AppToast } from 'src/components/app'\nimport { addUser, updateUser } from 'src/actions/user'\nimport CIcon from '@coreui/icons-react'\nimport { cilX, cilCheckAlt } from '@coreui/icons'\n\nconst UserModalForm = ({ visible, onClose, userData }) => {\n  const [activeKey, setActiveKey] = useState(1),\n    [userID, setUserID] = useState(),\n    [user, setUser] = useState(''),\n    [email, setEmail] = useState(''),\n    [departmentID, setDepartmentID] = useState(''),\n    [role, setRole] = useState(''),\n    [password, setPassword] = useState(''),\n    [confirmPassword, setConfirmPassword] = useState(''),\n    [nss, setNss] = useState(''),\n    [payrollNumber, setPayrollNumber] = useState(''),\n    [passwordPolicy, setPasswordPolicy] = useState({\n      numCharacters: false,\n      uppercaseLetter: false,\n      lowercaseLetter: false,\n      number: false,\n      symbol: false,\n    }),\n    dispatch = useDispatch(),\n    loading = useSelector((state) => state.user.loading)\n\n  const onSave = (e) => {\n    e.preventDefault()\n    if (!user) {\n      alert('Ingrese un nombre')\n      return\n    }\n    if (!email) {\n      alert('Ingrese un correo electrónico')\n      return\n    }\n\n    var arrayPasswordPolicies = Object.values(passwordPolicy)\n\n    if (arrayPasswordPolicies.every((policy) => !policy)) {\n      alert('Verifique las políticas de contraseña segura')\n      return\n    }\n\n    if (!confirmPassword) {\n      alert('Confirme la contraseña')\n      return\n    }\n\n    let data = {\n      name: user,\n      email,\n      password,\n      nss,\n      role,\n      payrollNumber,\n    }\n    dispatch(\n      userData\n        ? updateUser(data, userID, (dataRes) => {\n            if (dataRes.success) {\n              dispatch(\n                setToast(\n                  AppToast({\n                    msg: 'Usuario actualizado correctamente.',\n                    title: 'Usuarios',\n                    type: 'success',\n                  }),\n                ),\n              )\n            } else {\n              dispatch(\n                setToast(\n                  AppToast({ msg: 'Ha ocurrido un error.', title: 'Usuarios', type: 'error' }),\n                ),\n              )\n            }\n            cleanInputs()\n            onClose()\n          })\n        : addUser(data, (dataRes) => {\n            if (dataRes.success) {\n              dispatch(\n                setToast(\n                  AppToast({\n                    msg: 'Usuario agregado correctamente.',\n                    title: 'Usuarios',\n                    type: 'success',\n                  }),\n                ),\n              )\n            } else {\n              dispatch(\n                setToast(\n                  AppToast({ msg: 'Ha ocurrido un error.', title: 'Usuarios', type: 'error' }),\n                ),\n              )\n            }\n            cleanInputs()\n            onClose()\n          }),\n    )\n  }\n\n  const cleanInputs = useCallback(() => {\n    setUser('')\n    setEmail('')\n    setPassword('')\n    setConfirmPassword('')\n    setRole('')\n    setNss('')\n    setPayrollNumber('')\n    setDepartmentID('')\n    setUserID('')\n    setActiveKey(1)\n  }, [])\n\n  useEffect(() => {\n    if (!userData) {\n      return\n    }\n    setUserID(userData.id)\n    setUser(userData.name)\n    setEmail(userData.email)\n    setRole(userData.role)\n    setPayrollNumber(userData.payrollNumber)\n    setNss(userData.nss)\n  }, [userData])\n\n  useEffect(() => {\n    if (!password) {\n      setPasswordPolicy({\n        numCharacters: false,\n        uppercaseLetter: false,\n        lowercaseLetter: false,\n        number: false,\n        symbol: false,\n      })\n      return\n    }\n\n    const passData = {\n      numCharacters: password.length > 8,\n      lowercaseLetter: !!/[a-z]/.test(password),\n      uppercaseLetter: !!/[A-Z]/.test(password),\n      number: !!/\\d/.test(password),\n      // eslint-disable-next-line no-useless-escape\n      symbol: !!/[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/.test(password),\n    }\n\n    setPasswordPolicy(passData)\n  }, [password])\n\n  return (\n    <CModal visible={visible} onClose={onClose} aria-labelledby=\"LiveDemoExampleLabel\">\n      <CModalHeader onClose={onClose}>\n        <CModalTitle id=\"LiveDemoExampleLabel\">\n          {userData ? `Editar ${userData.name}` : 'Agregar nuevo'}\n        </CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <CNav variant=\"tabs\" role=\"tablist\" className=\"mt-1\">\n          <CNavItem role=\"presentation\">\n            <CNavLink\n              active={activeKey === 1}\n              component=\"button\"\n              role=\"tab\"\n              aria-controls=\"data-tab-pane\"\n              aria-selected={activeKey === 1}\n              onClick={() => setActiveKey(1)}\n            >\n              Datos\n            </CNavLink>\n          </CNavItem>\n          <CNavItem role=\"presentation\">\n            <CNavLink\n              active={activeKey === 2}\n              component=\"button\"\n              role=\"tab\"\n              aria-controls=\"data-tab-pane\"\n              aria-selected={activeKey === 2}\n              onClick={() => setActiveKey(2)}\n            >\n              Contraseña\n            </CNavLink>\n          </CNavItem>\n        </CNav>\n        <CTabContent>\n          {/* user data */}\n          <CTabPane role=\"tabpanel\" aria-labelledby=\"data-tab-pane\" visible={activeKey === 1}>\n            <CForm className=\"mt-3\">\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"name\">Nombre completo</CFormLabel>\n                <CFormInput\n                  type=\"text\"\n                  id=\"name\"\n                  placeholder=\"Nombre\"\n                  onChange={(e) => setUser(e.target.value)}\n                  value={user}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"email\">Correo electrónico</CFormLabel>\n                <CFormInput\n                  type=\"text\"\n                  id=\"email\"\n                  placeholder=\"Correo electrónico\"\n                  onChange={(e) => setEmail(e.target.value)}\n                  value={email}\n                />\n              </div>\n              <div className=\"mb-3 d-flex\">\n                <div className=\"flex-fill me-2\">\n                  <CFormLabel htmlFor=\"nss\">Número de seguro social (NSS)</CFormLabel>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"nss\"\n                    placeholder=\"NSS\"\n                    onChange={(e) => setNss(e.target.value)}\n                    value={nss}\n                  />\n                </div>\n                <div className=\"flex-fill me-2\">\n                  <CFormLabel htmlFor=\"payrollNumber\">Número de nómina</CFormLabel>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"payrollNumber\"\n                    placeholder=\"No. Nómina\"\n                    onChange={(e) => setPayrollNumber(e.target.value)}\n                    value={payrollNumber}\n                  />\n                </div>\n              </div>\n              <div className=\"mb-3 d-flex\">\n                <div className=\"flex-fill me-2\">\n                  <CFormLabel>Departamento</CFormLabel>\n                  <CFormSelect\n                    aria-label=\"charge\"\n                    options={[\n                      { label: 'Seleccione...', value: '' },\n                      { label: 'Direccion', value: 'Direccion' },\n                      {\n                        label: 'Sistemas',\n                        value: 'Sistemas',\n                      },\n                    ]}\n                    onChange={(e) => setDepartmentID(e.target.value)}\n                    value={departmentID}\n                  />\n                </div>\n                <div className=\"flex-fill me-2\">\n                  <CFormLabel>Rol</CFormLabel>\n                  <CFormSelect\n                    aria-label=\"role\"\n                    options={[\n                      { label: 'Seleccione...', value: '' },\n                      {\n                        label: 'Director',\n                        value: 'Director',\n                      },\n                      { label: 'Jefe Dpto', value: 'Jefe Dpto' },\n                      { label: 'Colaborador', value: 'Colaborador' },\n                    ]}\n                    onChange={(e) => setRole(e.target.value)}\n                    value={role}\n                  />\n                </div>\n              </div>\n            </CForm>\n          </CTabPane>\n          {/* password data */}\n          <CTabPane role=\"tabpanel\" aria-labelledby=\"data-tab-pane\" visible={activeKey === 2}>\n            <CForm className=\"mt-3\">\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"name\">Contraseña</CFormLabel>\n                <CFormInput\n                  type=\"password\"\n                  id=\"password\"\n                  placeholder=\"Contraseña\"\n                  onChange={(e) => setPassword(e.target.value)}\n                  value={password}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"confirmPassword\">Confirmar contraseña</CFormLabel>\n                <CFormInput\n                  type=\"password\"\n                  id=\"confirmPassword\"\n                  placeholder=\"Confirmar contraseña\"\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                  value={confirmPassword}\n                />\n                {confirmPassword && password !== confirmPassword && (\n                  <p className=\"text-danger\">*La contraseña no coincide</p>\n                )}\n              </div>\n              <div className=\"mb-3\">\n                <h6 className=\"fw-bolder\">La contraseña debe contener: </h6>\n                <div className=\"d-flex align-items-center\">\n                  {passwordPolicy.numCharacters ? (\n                    <CIcon icon={cilCheckAlt} className=\"text-success\" />\n                  ) : (\n                    <CIcon icon={cilX} className=\"text-danger\" />\n                  )}\n                  8 o mas digitos\n                </div>\n                <div className=\"d-flex align-items-center\">\n                  {passwordPolicy.uppercaseLetter ? (\n                    <CIcon icon={cilCheckAlt} className=\"text-success\" />\n                  ) : (\n                    <CIcon icon={cilX} className=\"text-danger\" />\n                  )}\n                  Una letra mayuscula\n                </div>\n                <div className=\"d-flex align-items-center\">\n                  {passwordPolicy.lowercaseLetter ? (\n                    <CIcon icon={cilCheckAlt} className=\"text-success\" />\n                  ) : (\n                    <CIcon icon={cilX} className=\"text-danger\" />\n                  )}\n                  Una letra minuscula\n                </div>\n                <div className=\"d-flex align-items-center\">\n                  {passwordPolicy.number ? (\n                    <CIcon icon={cilCheckAlt} className=\"text-success\" />\n                  ) : (\n                    <CIcon icon={cilX} className=\"text-danger\" />\n                  )}\n                  Un numero\n                </div>\n                <div className=\"d-flex align-items-center\">\n                  {passwordPolicy.symbol ? (\n                    <CIcon icon={cilCheckAlt} className=\"text-success\" />\n                  ) : (\n                    <CIcon icon={cilX} className=\"text-danger\" />\n                  )}\n                  Un simbolo\n                </div>\n              </div>\n            </CForm>\n          </CTabPane>\n        </CTabContent>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"secondary\" onClick={onClose}>\n          Cerrar\n        </CButton>\n        <CButton color=\"primary\" className=\"text-light fw-semibold\" onClick={onSave}>\n          Guardar\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default UserModalForm\n","import React, { useState, useEffect, useCallback } from 'react'\nimport {\n  CModal,\n  CModalHeader,\n  CModalBody,\n  CModalTitle,\n  CModalFooter,\n  CForm,\n  CButton,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CTabContent,\n  CTabPane,\n  CFormCheck,\n} from '@coreui/react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setToast } from 'src/actions/toast'\nimport { AppToast } from 'src/components/app'\nimport { assignModules } from 'src/actions/user'\n\nconst UserModulesModalForm = ({ visible, onClose, userData }) => {\n  const [activeKey, setActiveKey] = useState(1),\n    [userID, setUserID] = useState(),\n    [banks, setBanks] = useState(false),\n    [providers, setProviders] = useState(false),\n    [purchaseRequest, setPurchaseRequest] = useState(false),\n    [pendingPayments, setPendingPayments] = useState(false),\n    [departments, setDepartments] = useState(false),\n    [users, setUsers] = useState(false),\n    [modules, setModules] = useState([]),\n    dispatch = useDispatch(),\n    loading = useSelector((state) => state.user.loading)\n\n  const onSave = (e) => {\n    e.preventDefault()\n    let data = {\n      user_id: userID,\n      modules,\n    }\n    dispatch(\n      assignModules(data, (assignRes) => {\n        if (assignRes.success) {\n          dispatch(setToast(AppToast({ msg: assignRes.message, type: 'success' })))\n        }\n      }),\n    )\n    onClose()\n  }\n\n  const onAddModules = (checked, module, fromDB = false) => {\n    if (!fromDB) {\n      if (checked) {\n        setModules([...modules, module])\n      } else {\n        setModules(modules.filter((m) => m !== module))\n      }\n    }\n\n    if (module === 'banks') {\n      setBanks(checked)\n    }\n    if (module === 'providers') {\n      setProviders(checked)\n    }\n    if (module === 'purchaseRequest') {\n      setPurchaseRequest(checked)\n    }\n    if (module === 'pendingPayments') {\n      setPendingPayments(checked)\n    }\n    if (module === 'departments') {\n      setDepartments(checked)\n    }\n    if (module === 'users') {\n      setUsers(checked)\n    }\n  }\n\n  useEffect(() => {\n    if (!userData) {\n      return\n    }\n    setUserID(userData.id)\n    let modulesDB = []\n    if (userData.modules) {\n      userData.modules.forEach((m) => {\n        onAddModules(true, m.module.submodule, true)\n        modulesDB.push(m.module.submodule)\n      })\n      setModules(modulesDB)\n    }\n  }, [userData])\n\n  console.log(modules)\n\n  return (\n    <CModal visible={visible} onClose={onClose} aria-labelledby=\"UserModulesModal\" size=\"lg\">\n      <CModalHeader onClose={onClose}>\n        <CModalTitle id=\"UserModulesModal\">{`Asignar modulos a ${userData.name}`}</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <CNav variant=\"tabs\" role=\"tablist\" className=\"mt-1\">\n          <CNavItem role=\"presentation\">\n            <CNavLink\n              active={activeKey === 1}\n              component=\"button\"\n              role=\"tab\"\n              aria-controls=\"data-tab-pane\"\n              aria-selected={activeKey === 1}\n              onClick={() => setActiveKey(1)}\n            >\n              Modulos\n            </CNavLink>\n          </CNavItem>\n        </CNav>\n        <CTabContent>\n          {/* Modules Available */}\n          <CTabPane role=\"tabpanel\" aria-labelledby=\"data-tab-pane\" visible={activeKey === 1}>\n            <CForm className=\"mt-3\">\n              {/* Administration modules */}\n              <div className=\"mb-3\">\n                <h5>Administración</h5>\n                <div className=\"row row-cols-3\">\n                  <div className=\"col\">\n                    <CFormCheck\n                      id={'banks'}\n                      label={'Bancos'}\n                      checked={banks}\n                      onChange={(e) => onAddModules(e.target.checked, 'banks')}\n                    />\n                  </div>\n                  <div className=\"col\">\n                    <CFormCheck\n                      id={'providers'}\n                      label={'Proveedores'}\n                      checked={providers}\n                      onChange={(e) => onAddModules(e.target.checked, 'providers')}\n                    />\n                  </div>\n                </div>\n              </div>\n              {/* Payment modules */}\n              <div className=\"mb-3\">\n                <h5>Pagos</h5>\n                <div className=\"row row-cols-3\">\n                  <div className=\"col\">\n                    <CFormCheck\n                      id={'purchaseRequest'}\n                      label={'Solicitud de compra'}\n                      checked={purchaseRequest}\n                      onChange={(e) => onAddModules(e.target.checked, 'purchaseRequest')}\n                    />\n                  </div>\n                  <div className=\"col\">\n                    <CFormCheck\n                      id={'pendingPayments'}\n                      label={'Pagos pendientes'}\n                      checked={pendingPayments}\n                      onChange={(e) => onAddModules(e.target.checked, 'pendingPayments')}\n                    />\n                  </div>\n                </div>\n              </div>\n              {/* User modules */}\n              <div className=\"mb-3\">\n                <h5>Usuarios</h5>\n                <div className=\"row row-cols-3\">\n                  <div className=\"col\">\n                    <CFormCheck\n                      id={'departments'}\n                      label={'Departamentos'}\n                      checked={departments}\n                      onChange={(e) => onAddModules(e.target.checked, 'departments')}\n                    />\n                  </div>\n                  <div className=\"col\">\n                    <CFormCheck\n                      id={'users'}\n                      label={'Usuarios'}\n                      checked={users}\n                      onChange={(e) => onAddModules(e.target.checked, 'users')}\n                    />\n                  </div>\n                </div>\n              </div>\n            </CForm>\n          </CTabPane>\n        </CTabContent>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"secondary\" onClick={onClose}>\n          Cerrar\n        </CButton>\n        <CButton color=\"primary\" className=\"text-light fw-semibold\" onClick={onSave}>\n          Guardar\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default UserModulesModalForm\n","import React, { useState, useEffect } from 'react'\nimport {\n  CModal,\n  CModalHeader,\n  CModalBody,\n  CModalTitle,\n  CModalFooter,\n  CForm,\n  CButton,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CTabContent,\n  CTabPane,\n  CFormCheck,\n  CSpinner,\n} from '@coreui/react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setToast } from 'src/actions/toast'\nimport { AppToast } from 'src/components/app'\nimport { getPermissions } from 'src/actions/permission'\nimport { permissions as permissionsLabel } from 'src/utils/functions'\nimport { assignPermissions } from 'src/actions/user'\n\nconst UserPermissionsModalForm = ({ visible, onClose, userData }) => {\n  const [activeKey, setActiveKey] = useState(1),\n    [userID, setUserID] = useState(),\n    [selectedPermissions, setSelectedPermissions] = useState([]),\n    dispatch = useDispatch(),\n    loading = useSelector((state) => state.permission.loading),\n    permissions = useSelector((state) => state.permission.permissions)\n\n  const onSave = (e) => {\n    e.preventDefault()\n    let data = {\n      user_id: userID,\n      permissions: selectedPermissions,\n    }\n    dispatch(\n      assignPermissions(data, (assignPermissionRes) => {\n        if (assignPermissionRes.success) {\n          dispatch(setToast(AppToast({ msg: assignPermissionRes.message, type: 'success' })))\n        } else {\n          dispatch(setToast(AppToast({ msg: assignPermissionRes.message, type: 'error' })))\n        }\n      }),\n    )\n    onClose()\n  }\n\n  useEffect(() => {\n    if (!userData) {\n      return\n    }\n\n    setUserID(userData.id)\n    let permissionsDB = []\n    if (userData.permissions) {\n      userData.permissions.forEach((p) => {\n        onAddPermissions(true, p.permission.id, true)\n        permissionsDB.push(p.permission.id)\n      })\n      setSelectedPermissions(permissionsDB)\n    }\n  }, [userData])\n\n  useEffect(() => {\n    dispatch(getPermissions())\n  }, [dispatch])\n\n  const onAddPermissions = (checked, permissionID, fromDB = false) => {\n    if (!fromDB) {\n      if (checked) {\n        setSelectedPermissions([...selectedPermissions, permissionID])\n      } else {\n        setSelectedPermissions(selectedPermissions.filter((m) => m !== permissionID))\n      }\n    }\n  }\n\n  return (\n    <CModal visible={visible} onClose={onClose} aria-labelledby=\"UserPermissionsModal\" size=\"lg\">\n      <CModalHeader onClose={onClose}>\n        <CModalTitle id=\"UserPermissionsModal\">{`Editar permisos a ${userData.name}`}</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <CNav variant=\"tabs\" role=\"tablist\" className=\"mt-1\">\n          <CNavItem role=\"presentation\">\n            <CNavLink\n              active={activeKey === 1}\n              component=\"button\"\n              role=\"tab\"\n              aria-controls=\"data-tab-pane\"\n              aria-selected={activeKey === 1}\n              onClick={() => setActiveKey(1)}\n            >\n              Permisos\n            </CNavLink>\n          </CNavItem>\n        </CNav>\n        <CTabContent>\n          {/* Permissions per submodule */}\n          {loading ? (\n            <CSpinner color=\"primary\" variant=\"grow\" />\n          ) : (\n            <CTabPane role=\"tabpanel\" aria-labelledby=\"data-tab-pane\" visible={activeKey === 1}>\n              <CForm className=\"mt-3\">\n                {/* Administration Submodules */}\n                <div className=\"row row-cols-3 mb-3\">\n                  {/* banks permissions */}\n                  {userData.modules.find((m) => m.module.submodule === 'banks') && (\n                    <div className=\"col\">\n                      <h5>Bancos</h5>\n                      {permissions?.map((permission) => {\n                        if (permission.module.submodule === 'banks') {\n                          return (\n                            <div key={permission.id}>\n                              <CFormCheck\n                                id={permission.name}\n                                label={permissionsLabel[permission.name]}\n                                checked={selectedPermissions.find((p) => p === permission.id)}\n                                onChange={(e) => onAddPermissions(e.target.checked, permission.id)}\n                              />\n                            </div>\n                          )\n                        }\n                        return <></>\n                      })}\n                    </div>\n                  )}\n                  {/* providers permissions */}\n                  {userData.modules.find((m) => m.module.submodule === 'providers') && (\n                    <div className=\"col\">\n                      <h5>Proveedores</h5>\n                      {permissions.map((permission) => {\n                        if (permission.module.submodule === 'providers') {\n                          return (\n                            <div key={permission.id}>\n                              <CFormCheck\n                                id={permission.name}\n                                label={permissionsLabel[permission.name]}\n                                checked={selectedPermissions.find((p) => p === permission.id)}\n                                onChange={(e) => onAddPermissions(e.target.checked, permission.id)}\n                              />\n                            </div>\n                          )\n                        }\n                        return <></>\n                      })}\n                    </div>\n                  )}\n                  {/* purchaseRequest permissions */}\n                  {userData.modules.find((m) => m.module.submodule === 'purchaseRequest') && (\n                    <div className=\"col\">\n                      <h5>Solicitudes de pago</h5>\n                      {permissions.map((permission) => {\n                        if (permission.module.submodule === 'purchaseRequest') {\n                          return (\n                            <div key={permission.id}>\n                              <CFormCheck\n                                id={permission.name}\n                                label={permissionsLabel[permission.name]}\n                                checked={selectedPermissions.find((p) => p === permission.id)}\n                                onChange={(e) => onAddPermissions(e.target.checked, permission.id)}\n                              />\n                            </div>\n                          )\n                        }\n                        return <></>\n                      })}\n                    </div>\n                  )}\n                  {/* pendingPayments permissions */}\n                  {userData.modules.find((m) => m.module.submodule === 'pendingPayments') && (\n                    <div className=\"col\">\n                      <h5>Pagos pendientes</h5>\n                      {permissions.map((permission) => {\n                        if (permission.module.submodule === 'pendingPayments') {\n                          return (\n                            <div key={permission.id}>\n                              <CFormCheck\n                                id={permission.name}\n                                label={permissionsLabel[permission.name]}\n                                checked={selectedPermissions.find((p) => p === permission.id)}\n                                onChange={(e) => onAddPermissions(e.target.checked, permission.id)}\n                              />\n                            </div>\n                          )\n                        }\n                        return <></>\n                      })}\n                    </div>\n                  )}\n                  {/* departments permissions */}\n                  {userData.modules.find((m) => m.module.submodule === 'departments') && (\n                    <div className=\"col\">\n                      <h5>Departamentos</h5>\n                      {permissions.map((permission) => {\n                        if (permission.module.submodule === 'departments') {\n                          return (\n                            <div key={permission.id}>\n                              <CFormCheck\n                                id={permission.name}\n                                label={permissionsLabel[permission.name]}\n                                checked={selectedPermissions.find((p) => p === permission.id)}\n                                onChange={(e) => onAddPermissions(e.target.checked, permission.id)}\n                              />\n                            </div>\n                          )\n                        }\n                        return <></>\n                      })}\n                    </div>\n                  )}\n                  {/* Users permissions */}\n                  {userData.modules.find((m) => m.module.submodule === 'users') && (\n                    <div className=\"col\">\n                      <h5>Usuarios</h5>\n                      {permissions.map((permission) => {\n                        if (permission.module.submodule === 'users') {\n                          return (\n                            <div key={permission.id}>\n                              <CFormCheck\n                                id={permission.name}\n                                label={permissionsLabel[permission.name]}\n                                checked={selectedPermissions.find((p) => p === permission.id)}\n                                onChange={(e) => onAddPermissions(e.target.checked, permission.id)}\n                              />\n                            </div>\n                          )\n                        }\n                        return <></>\n                      })}\n                    </div>\n                  )}\n                </div>\n              </CForm>\n            </CTabPane>\n          )}\n        </CTabContent>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"secondary\" onClick={onClose}>\n          Cerrar\n        </CButton>\n        <CButton color=\"primary\" className=\"text-light fw-semibold\" onClick={onSave}>\n          Guardar\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default UserPermissionsModalForm\n","import { GET_PERMISSIONS, PERMISSION_ERROR } from './types'\nimport axios from 'axios'\nimport config from 'src/server.config'\n\nexport const getPermissions = () => async (dispatch) => {\n  try {\n    const res = await axios.get(`${config.instance.baseURL}/api/permission`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: GET_PERMISSIONS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: PERMISSION_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n","import React, { useState } from 'react'\nimport {\n  CTable,\n  CTableBody,\n  CTableHead,\n  CTableRow,\n  CTableHeaderCell,\n  CTableDataCell,\n  CDropdown,\n  CDropdownToggle,\n  CDropdownMenu,\n  CDropdownItem,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilOptions } from '@coreui/icons'\nimport { useDispatch } from 'react-redux'\nimport Swal from 'sweetalert2'\nimport { setToast } from 'src/actions/toast'\nimport { AppToast } from 'src/components/app'\nimport { deleteUser } from 'src/actions/user'\nimport UserModalForm from './UserModalForm'\nimport UserModulesModalForm from './UserModulesModalForm'\nimport UserPermissionsModalForm from './UserPermissionsModalForm'\nimport { useHasPermission } from 'src/utils/functions'\n\nconst UserTable = ({ data }) => {\n  const [visible, setVisible] = useState(false),\n    [visibleModules, setVisibleModules] = useState(false),\n    [visiblePermissions, setVisiblePermissions] = useState(false),\n    [userData, setUserData] = useState(null),\n    dispatch = useDispatch(),\n    hasDeletePermission = useHasPermission('users', 'delete'),\n    hasEditPermission = useHasPermission('users', 'edit'),\n    hasModulesPermission = useHasPermission('users', 'modules'),\n    hasPermissionsPermission = useHasPermission('users', 'permissions')\n\n  const onDelete = (id) => {\n    Swal.fire({\n      title: '¿Está seguro?',\n      text: 'No podrás revertir esto.',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, eliminar.',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(\n          deleteUser(id, (dataRes) => {\n            if (dataRes.success) {\n              dispatch(\n                setToast(\n                  AppToast({\n                    msg: 'Usuario eliminado correctamente.',\n                    title: 'Usuarios',\n                    type: 'success',\n                  }),\n                ),\n              )\n              Swal.fire({\n                title: 'Eliminado!',\n                text: 'El Usuario ha sido eliminado.',\n                icon: 'success',\n              })\n            } else {\n              dispatch(\n                setToast(\n                  AppToast({\n                    msg: 'Ocurrio un error.',\n                    title: 'Usuarios',\n                    type: 'error',\n                  }),\n                ),\n              )\n            }\n          }),\n        )\n      }\n    })\n  }\n\n  return (\n    <>\n      <CTable striped responsive>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">#</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Nombre</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Correo electrónico</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Departamento</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\" className=\"text-center\">\n              Opciones\n            </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          {data?.map((user) => (\n            <CTableRow key={user.id}>\n              <CTableHeaderCell scope=\"row\">{user.id}</CTableHeaderCell>\n              <CTableDataCell>{user.name}</CTableDataCell>\n              <CTableDataCell>{user.email}</CTableDataCell>\n              <CTableDataCell>\n                {user?.department?.name || (\n                  <span className=\"text-primary fw-bolder\">Sin departamento asignado</span>\n                )}\n              </CTableDataCell>\n              <CTableDataCell className=\"text-center overflow-visible\">\n                <CDropdown variant=\"dropdown\">\n                  <CDropdownToggle href=\"#\" color=\"light\">\n                    <CIcon icon={cilOptions} title=\"Opciones\" size=\"lg\" />\n                  </CDropdownToggle>\n                  <CDropdownMenu className=\"position-fixed\">\n                    {hasModulesPermission && (\n                      <CDropdownItem\n                        style={{ cursor: 'pointer' }}\n                        onClick={() => {\n                          setVisibleModules(!visibleModules)\n                          setUserData(user)\n                        }}\n                      >\n                        Asignar modulos\n                      </CDropdownItem>\n                    )}\n                    {hasPermissionsPermission && (\n                      <CDropdownItem\n                        style={{ cursor: 'pointer' }}\n                        onClick={() => {\n                          setVisiblePermissions(!visiblePermissions)\n                          setUserData(user)\n                        }}\n                      >\n                        Permisos\n                      </CDropdownItem>\n                    )}\n                    {hasEditPermission && (\n                      <CDropdownItem\n                        style={{ cursor: 'pointer' }}\n                        onClick={() => {\n                          setVisible(!visible)\n                          setUserData(user)\n                        }}\n                      >\n                        Editar\n                      </CDropdownItem>\n                    )}\n                    {hasDeletePermission && (\n                      <CDropdownItem\n                        style={{ cursor: 'pointer' }}\n                        onClick={() => onDelete(user.id)}\n                      >\n                        Eliminar\n                      </CDropdownItem>\n                    )}\n                  </CDropdownMenu>\n                </CDropdown>\n              </CTableDataCell>\n            </CTableRow>\n          ))}\n        </CTableBody>\n      </CTable>\n      {visible && (\n        <UserModalForm visible={visible} onClose={() => setVisible(false)} userData={userData} />\n      )}\n      {visibleModules && (\n        <UserModulesModalForm\n          visible={visibleModules}\n          onClose={() => setVisibleModules(false)}\n          userData={userData}\n        />\n      )}\n      {visiblePermissions && (\n        <UserPermissionsModalForm\n          visible={visiblePermissions}\n          onClose={() => setVisiblePermissions(false)}\n          userData={userData}\n        />\n      )}\n    </>\n  )\n}\n\nexport default UserTable\n","import React, { useEffect, useState } from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardFooter,\n  CButton,\n  CForm,\n  CFormLabel,\n  CFormSelect,\n  CFormInput,\n  CSpinner,\n} from '@coreui/react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport CIcon from '@coreui/icons-react'\nimport { cilPlus } from '@coreui/icons'\nimport { AppPagination } from 'src/components/app'\nimport { getUsers } from 'src/actions/user'\nimport UserTable from 'src/components/users/users/UserTable'\nimport UserModalForm from 'src/components/users/users/UserModalForm'\nimport { useHasPermission } from 'src/utils/functions'\n\nconst Users = () => {\n  const [visible, setVisible] = useState(false),\n    dispatch = useDispatch(),\n    [caseFilter, setCaseFilter] = useState('name'),\n    [filterValue, setFilterValue] = useState(''),\n    users = useSelector((state) => state.user.users.data),\n    [currentPage, setCurrentPage] = useState(1),\n    currentPageState = useSelector((state) => state.user.users.current_page),\n    lastPage = useSelector((state) => state.user.users.last_page),\n    total = useSelector((state) => state.user.users.total),\n    loading = useSelector((state) => state.user.loading)\n\n  useEffect(() => {\n    dispatch(getUsers(currentPage, caseFilter, filterValue))\n  }, [dispatch, currentPage])\n\n  useEffect(() => {\n    if (!currentPageState) {\n      return\n    }\n    setCurrentPage(currentPageState)\n  }, [currentPageState])\n\n  return (\n    <>\n      <CCard>\n        <CCardHeader className=\"d-flex justify-content-between align-items-center\">\n          <h4>Listado de usuarios</h4>\n          <div className=\"d-flex gap-2\">\n            {useHasPermission('users', 'create') && (\n              <CButton\n                color=\"primary\"\n                className=\"text-light fw-semibold align-content-center d-flex\"\n                onClick={() => setVisible(!visible)}\n              >\n                <CIcon icon={cilPlus} size=\"xl\" className=\"me-1\" />\n                Nuevo\n              </CButton>\n            )}\n          </div>\n        </CCardHeader>\n        <CCardBody>\n          <CForm>\n            <CFormLabel>Filtros de busqueda</CFormLabel>\n            <div className=\"mb-3 d-flex\">\n              <div className=\"flex-fill me-2\">\n                <CFormSelect\n                  value={caseFilter}\n                  onChange={(e) => setCaseFilter(e.target.value)}\n                  aria-label=\"caseFilter\"\n                  options={[{ label: 'Nombre', value: 'name' }]}\n                />\n              </div>\n              <div className=\"flex-fill me-2\">\n                <CFormInput\n                  value={filterValue}\n                  onChange={(e) => setFilterValue(e.target.value)}\n                  type=\"text\"\n                  placeholder=\"Ingresar texto\"\n                />\n              </div>\n            </div>\n            <CButton\n              type=\"button\"\n              className=\"text-light fw-semibold\"\n              onClick={() => dispatch(getUsers(currentPage, caseFilter, filterValue))}\n            >\n              Buscar\n            </CButton>\n          </CForm>\n          {loading ? (\n            <div className=\"d-flex justify-content-center\">\n              <CSpinner color=\"primary\" variant=\"grow\" />\n            </div>\n          ) : (\n            <UserTable data={users} />\n          )}\n        </CCardBody>\n        <CCardFooter>\n          <AppPagination\n            currentPage={currentPage}\n            lastPage={lastPage}\n            setCurrentPage={setCurrentPage}\n          />\n        </CCardFooter>\n      </CCard>\n      <UserModalForm visible={visible} onClose={() => setVisible(false)} />\n    </>\n  )\n}\n\nexport default Users\n","export var cilCheckAlt = [\"512 512\", \"<polygon fill='var(--ci-primary-color, currentColor)' points='200.359 382.269 61.057 251.673 82.943 228.327 199.641 337.731 428.686 108.687 451.314 131.313 200.359 382.269' class='ci-primary'/>\"];\n"],"names":["formatNumber","value","toFixed","toString","replace","formatTimezoneToDate","date","DateTime","fromISO","toLocaleString","DATE_SHORT","formatTimezoneToDateTime","DATETIME_SHORT","movementTypes","advance","settlement","payment","statusPurchaseRequest","pending","approved","paid","rejected","statusPurchaseRequestColors","permissions","index","create","edit","delete","reject","pay","authorize","modules","useHasPermission","submodule","permission","userPermissions","useSelector","state","auth","hasSubmodule","find","m","p","getUsers","page","filter","async","res","axios","get","concat","config","instance","baseURL","headers","Authorization","localStorage","getItem","dispatch","type","GET_USERS","payload","data","err","USER_ERROR","msg","response","statusText","status","cilX","_ref","visible","onClose","userData","activeKey","setActiveKey","useState","userID","setUserID","user","setUser","email","setEmail","departmentID","setDepartmentID","role","setRole","password","setPassword","confirmPassword","setConfirmPassword","nss","setNss","payrollNumber","setPayrollNumber","passwordPolicy","setPasswordPolicy","numCharacters","uppercaseLetter","lowercaseLetter","number","symbol","useDispatch","cleanInputs","loading","useCallback","useEffect","id","name","passData","length","test","_jsxs","CModal","children","_jsx","CModalHeader","CModalTitle","CModalBody","CNav","variant","className","CNavItem","CNavLink","active","component","onClick","CTabContent","CTabPane","CForm","CFormLabel","htmlFor","CFormInput","placeholder","onChange","e","target","CFormSelect","options","label","CIcon","icon","cilCheckAlt","CModalFooter","CButton","color","preventDefault","alert","Object","values","every","policy","updateUser","cb","put","UPDATE_USER","success","message","dataRes","setToast","AppToast","title","addUser","post","ADD_USER","banks","setBanks","providers","setProviders","purchaseRequest","setPurchaseRequest","pendingPayments","setPendingPayments","departments","setDepartments","users","setUsers","setModules","onAddModules","checked","module","arguments","undefined","modulesDB","forEach","push","console","log","size","CFormCheck","assignModules","user_id","assignRes","selectedPermissions","setSelectedPermissions","permissionsDB","onAddPermissions","GET_PERMISSIONS","PERMISSION_ERROR","permissionID","CSpinner","map","permissionsLabel","_Fragment","assignPermissions","assignPermissionRes","setVisible","visibleModules","setVisibleModules","visiblePermissions","setVisiblePermissions","setUserData","hasDeletePermission","hasEditPermission","hasModulesPermission","hasPermissionsPermission","onDelete","Swal","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","deleteUser","DELETE_USER","CTable","striped","responsive","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","_user$department","CTableDataCell","department","CDropdown","CDropdownToggle","href","cilOptions","CDropdownMenu","CDropdownItem","style","cursor","UserModalForm","UserModulesModalForm","UserPermissionsModalForm","Users","caseFilter","setCaseFilter","filterValue","setFilterValue","currentPage","setCurrentPage","currentPageState","current_page","lastPage","last_page","total","CCard","CCardHeader","cilPlus","CCardBody","UserTable","CCardFooter","AppPagination"],"sourceRoot":""}