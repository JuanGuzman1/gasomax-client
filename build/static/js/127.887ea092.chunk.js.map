{"version":3,"file":"static/js/127.887ea092.chunk.js","mappings":"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","sources":["layout/DefaultLayout.js","actions/dropbox.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader, AppToast } from '../components/app/index'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getUser } from 'src/actions/auth'\nimport { getConfigurationSystem, setDropboxAccessToken } from 'src/actions/dropbox'\nimport { useSearchParams } from 'react-router-dom'\nimport { setToast } from 'src/actions/toast'\nimport { getUrlImage } from 'src/actions/file'\nimport { PROFILE_PICTURE } from 'src/actions/types'\n\nconst DefaultLayout = () => {\n  const dispatch = useDispatch()\n  const user = useSelector((state) => state.auth.user)\n  const permissions = useSelector((state) => state.auth.permissions)\n  const [params] = useSearchParams(),\n    codeURI = params.get('code'),\n    { token_dropbox } = useSelector((state) => state.dropbox.token)\n\n  useEffect(() => {\n    dispatch(getUser())\n  }, [dispatch])\n\n  useEffect(() => {\n    if (!user.data.user && user.data.user.files.length <= 0) {\n      return\n    }\n    let image = user.data.user.files.find((file) => file.tag === 'img')\n    dispatch(\n      getUrlImage(image.id, image.extension, (url) => {\n        dispatch({\n          type: PROFILE_PICTURE,\n          payload: url,\n        })\n      }),\n    )\n  }, [user, dispatch])\n\n  useEffect(() => {\n    dispatch(\n      getConfigurationSystem((configRes) => {\n        if (!configRes.data) {\n          dispatch(setToast(AppToast({ msg: 'Sin token para dropbox', type: 'error' })))\n        }\n      }),\n    )\n  }, [dispatch])\n\n  useEffect(() => {\n    if (!codeURI) {\n      return\n    }\n\n    dispatch(setDropboxAccessToken(codeURI))\n  }, [dispatch, codeURI, token_dropbox])\n\n  return (\n    <div>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n          <AppContent />\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default DefaultLayout\n","import axios from 'axios'\nimport config from 'src/server.config'\nimport { GET_AUTHORIZATION_CODE, DROPBOX_ERROR } from './types'\n\nexport const getConfigurationSystem = (cb) => async (dispatch) => {\n  try {\n    const res = await axios.get(`${config.instance.baseURL}/api/configuration`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n\n    let data = {\n      token_dropbox: res.data?.data?.token_dropbox,\n      token_dropbox_expires_in: res.data?.data?.token_dropbox_expires_in,\n      token_dropbox_refresh: res.data?.data?.token_dropbox_refresh,\n    }\n    dispatch({\n      type: GET_AUTHORIZATION_CODE,\n      payload: data,\n    })\n    cb(res.data)\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport const setDropboxAccessToken = (code) => async (dispatch) => {\n  try {\n    const res = await axios.post(\n      `${config.instance.baseURL}/api/token/dropbox`,\n      {\n        code,\n        redirect_uri: config.instance.return_uri,\n      },\n      {\n        headers: {\n          ...config.instance.headers,\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      },\n    )\n  } catch (err) {\n    dispatch({\n      type: DROPBOX_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n"],"names":["DefaultLayout","dispatch","useDispatch","user","useSelector","state","auth","params","permissions","useSearchParams","codeURI","get","token_dropbox","dropbox","token","useEffect","getUser","data","files","length","image","find","file","tag","getUrlImage","id","extension","url","type","PROFILE_PICTURE","payload","cb","configRes","setToast","AppToast","msg","async","_res$data","_res$data$data","_res$data2","_res$data2$data","_res$data3","_res$data3$data","res","axios","concat","config","instance","baseURL","headers","Authorization","localStorage","getItem","token_dropbox_expires_in","token_dropbox_refresh","GET_AUTHORIZATION_CODE","error","console","log","code","post","redirect_uri","return_uri","err","DROPBOX_ERROR","response","statusText","status","_jsxs","children","_jsx","AppSidebar","className","AppHeader","AppContent","AppFooter"],"sourceRoot":""}