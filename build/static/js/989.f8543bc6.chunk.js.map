{"version":3,"file":"static/js/989.f8543bc6.chunk.js","mappings":"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","sources":["actions/department.js","actions/provider.js","utils/functions.js","utils/modelTypes.js","components/payments/quotes/QuoteModalObs.js","components/payments/quotes/QuoteModalForm.js","actions/unit.js","actions/quoteConcept.js","components/payments/quotes/QuoteTable.js","views/payments/quotes/Quotes.js"],"sourcesContent":["import axios from 'axios'\nimport {\n  GET_DEPARTMENTS,\n  ADD_DEPARTMENT,\n  UPDATE_DEPARTMENT,\n  DELETE_DEPARTMENT,\n  SELECT_DEPARTMENTS,\n  DEPARTMENT_ERROR,\n} from './types'\nimport config from 'src/server.config'\n\nexport const getDepartments = (page, filter, value) => async (dispatch) => {\n  try {\n    const res = await axios.get(\n      `${config.instance.baseURL}/api/department?${filter}=${value}&page=${page}`,\n      {\n        headers: {\n          ...config.instance.headers,\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      },\n    )\n    dispatch({\n      type: GET_DEPARTMENTS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: DEPARTMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n\nexport const addDepartment = (data, cb) => async (dispatch) => {\n  try {\n    const res = await axios.post(`${config.instance.baseURL}/api/department`, data, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: ADD_DEPARTMENT,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: DEPARTMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const updateDepartment = (data, id, cb) => async (dispatch) => {\n  try {\n    const res = await axios.put(`${config.instance.baseURL}/api/department/${id}`, data, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: UPDATE_DEPARTMENT,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: DEPARTMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const deleteDepartment = (id, cb) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`${config.instance.baseURL}/api/department/${id}`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: DELETE_DEPARTMENT,\n      payload: id,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: DEPARTMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const selectDepartments = () => async (dispatch) => {\n  try {\n    const res = await axios.get(`${config.instance.baseURL}/api/select/department`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: SELECT_DEPARTMENTS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: DEPARTMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n","import axios from 'axios'\nimport {\n  ADD_PROVIDER,\n  GET_PROVIDERS,\n  PROVIDER_ERROR,\n  DELETE_PROVIDER,\n  UPDATE_PROVIDER,\n  EXPORT_PROVIDER_EXCEL,\n  SELECT_PROVIDERS,\n  SELECT_ACCOUNT_PROVIDERS,\n} from './types'\nimport config from '../server.config'\n\nexport const getProviders = (page, filter, value) => async (dispatch) => {\n  try {\n    const res = await axios.get(\n      `${config.instance.baseURL}/api/provider?${filter}=${value}&page=${page}`,\n      {\n        headers: {\n          ...config.instance.headers,\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      },\n    )\n    dispatch({\n      type: GET_PROVIDERS,\n      payload: { ...res.data, filters: { filter, value } },\n    })\n  } catch (err) {\n    dispatch({\n      type: PROVIDER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n\nexport const addProvider = (data, cb) => async (dispatch) => {\n  try {\n    const res = await axios.post(`${config.instance.baseURL}/api/provider`, data, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: ADD_PROVIDER,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: PROVIDER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const updateProvider = (data, id, cb) => async (dispatch) => {\n  try {\n    const res = await axios.put(`${config.instance.baseURL}/api/provider/${id}`, data, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: UPDATE_PROVIDER,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: PROVIDER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const deleteProvider = (id, cb) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`${config.instance.baseURL}/api/provider/${id}`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: DELETE_PROVIDER,\n      payload: id,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: PROVIDER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const exportProviderExcel = (filter, value) => async (dispatch) => {\n  try {\n    const res = await axios.get(\n      `${config.instance.baseURL}/api/excel/provider/export?${filter}=${value}`,\n      {\n        headers: {\n          ...config.instance.headers,\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n        responseType: 'blob',\n      },\n    )\n    const url = window.URL.createObjectURL(new Blob([res.data]))\n    const link = document.createElement('a')\n    link.href = url\n\n    link.setAttribute('download', 'Proveedores.xlsx')\n    document.body.appendChild(link)\n    link.click()\n\n    // Limpia el enlace y el objeto URL después de la descarga\n    document.body.removeChild(link)\n    window.URL.revokeObjectURL(url)\n\n    dispatch({\n      type: EXPORT_PROVIDER_EXCEL,\n    })\n  } catch (err) {\n    dispatch({\n      type: PROVIDER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n\nexport const selectProviders = () => async (dispatch) => {\n  try {\n    const res = await axios.get(`${config.instance.baseURL}/api/select/provider`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: SELECT_PROVIDERS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: PROVIDER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n\nexport const selectAccountsByProvider = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`${config.instance.baseURL}/api/select/account/provider/${id}`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: SELECT_ACCOUNT_PROVIDERS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: PROVIDER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n","import { DateTime } from 'luxon'\nimport { useSelector } from 'react-redux'\n\nexport const formatNumber = (value) => {\n  let val = (value / 1).toFixed(2)\n  return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n}\n\nexport const formatTimezoneToDate = (date) => {\n  return DateTime.fromISO(date).toLocaleString(DateTime.DATE_SHORT)\n}\n\nexport const formatTimezoneToDateTime = (date) => {\n  return DateTime.fromISO(date).toLocaleString(DateTime.DATETIME_SHORT)\n}\n\nexport const getBase64 = (file) =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.readAsDataURL(file)\n    reader.onload = (e) => resolve(e.target.result.toString())\n    reader.onerror = reject\n  })\n\nexport const movementTypes = {\n  advance: 'Anticipo',\n  settlement: 'Liquidación',\n  payment: 'Abono a cuenta',\n}\n//////////////////////////// status QUOTE ////////////////////\nexport const statusQuote = (status, uploadQuotePermission = false, petitioner_id) => {\n  let statusQuoteLetter = {\n    inprogress: uploadQuotePermission ? 'Cotizaciónes enviadas' : 'Cotizaciónes disponibles',\n    approved: 'Cotización aprobada',\n    authorized: 'Cotización autorizada',\n    ok: 'Cotización VoBo',\n    sent: uploadQuotePermission ? 'Solicitud nueva' : 'Solicitud enviada',\n    sentPay: 'Enviada a pago',\n    paid: 'Pagado',\n    rejected: 'Cotizaciónes rechazadas',\n  }\n  return statusQuoteLetter[status]\n}\n\nexport const statusQuoteColors = {\n  inprogress: '#00FFFF',\n  approved: '#00FF00',\n  authorized: '#0000FF',\n  ok: '#008000',\n  sent: '#FFA500',\n  sentPay: '#30AFD4',\n  paid: '#800080',\n  rejected: '#FF0000',\n}\n////////////////////// status purchaseRequest (Update payments) //////////////\nexport const statusPurchaseRequest = {\n  pending: 'Pendiente de aprobación',\n  approved: 'Solicitud aprobada',\n  paid: 'Pagado',\n  rejected: 'Solicitud rechazada',\n}\n\nexport const statusPurchaseRequestColors = {\n  pending: '#FFA500',\n  approved: '#00FF00',\n  paid: '#800080',\n  rejected: '#FF0000',\n}\n\nexport const permissions = {\n  index: 'Listar',\n  show: 'Ver',\n  create: 'Crear',\n  edit: 'Editar',\n  delete: 'Eliminar',\n  reject: 'Rechazar',\n  pay: 'Pagar',\n  approve: 'Aprobar',\n  authorize: 'Autorizar',\n  'authorize.minor.1000': 'Autorizar < $1,000',\n  'authorize.mayor.1000': 'Autorizar > $1,000',\n  'authorize.minor.5000': 'Autorizar < $5,000',\n  'authorize.mayor.5000': 'Autorizar > $5,000',\n  modules: 'Asignar modulos',\n  permissions: 'Asignar permisos',\n  'upload.quote': 'Subir cotizaciónes',\n}\n\nexport const useHasPermission = (submodule, permission) => {\n  const userPermissions = useSelector((state) => state.auth.permissions)\n  const userModules = useSelector((state) => state.auth.modules)\n\n  const hasSubmodule = userModules.find((m) => m.submodule === submodule)\n\n  if (hasSubmodule) {\n    return userPermissions.find(\n      (p) => p.submodule === hasSubmodule.submodule && p.permission === permission,\n    )\n      ? true\n      : false\n  }\n\n  return false\n}\n","export const modelTypes = {\n  provider: 'provider',\n  purchaseRequest: 'purchaseRequest',\n  quote: 'quote',\n  user: 'user',\n}\n","import React, { useEffect, useState } from 'react'\nimport {\n  CModal,\n  CModalHeader,\n  CModalBody,\n  CModalTitle,\n  CModalFooter,\n  CForm,\n  CButton,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableRow,\n  CTableHeaderCell,\n  CTableBody,\n  CTableDataCell,\n  CSpinner,\n} from '@coreui/react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setToast } from 'src/actions/toast'\nimport { AppToast } from 'src/components/app'\nimport { formatTimezoneToDateTime } from 'src/utils/functions'\nimport { addQuoteObservation, getQuoteObservations } from 'src/actions/quote'\n\nconst QuoteModalObs = ({ visible, onClose, quoteID }) => {\n  const dispatch = useDispatch(),\n    [message, setMessage] = useState(''),\n    { observations, loadingObservations } = useSelector((state) => state.quote),\n    user = useSelector((state) => state.auth.user)?.data?.user\n\n  useEffect(() => {\n    dispatch(getQuoteObservations(quoteID))\n  }, [dispatch, quoteID])\n\n  const onSave = (e) => {\n    e.preventDefault()\n    try {\n      if (!message || message === '') {\n        dispatch(setToast(AppToast({ msg: 'Escribe un mensaje', title: 'Error', type: 'error' })))\n        return\n      }\n      let data = {\n        message,\n        user_id: user.id,\n        quote_id: quoteID,\n      }\n      dispatch(\n        addQuoteObservation(data, (quoteObservationRes) => {\n          if (quoteObservationRes.success) {\n            dispatch(\n              setToast(\n                AppToast({\n                  msg: 'Mensaje guardado con exito',\n                  title: 'Observacion',\n                  type: 'success',\n                }),\n              ),\n            )\n          } else {\n            dispatch(\n              setToast(\n                AppToast({ msg: 'Ha ocurrido un error', title: 'Observacion', type: 'error' }),\n              ),\n            )\n          }\n        }),\n      )\n    } catch (error) {\n      console.log(error)\n    }\n    setMessage('')\n  }\n\n  return (\n    <CModal\n      visible={visible}\n      onClose={onClose}\n      aria-labelledby=\"ModalObsForm\"\n      keyboard={false}\n      backdrop=\"static\"\n    >\n      <CModalHeader onClose={onClose}>\n        <CModalTitle id=\"ModalObsForm\">Observaciones</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        {loadingObservations ? (\n          <div className=\"d-flex justify-content-center\">\n            <CSpinner color=\"primary\" variant=\"grow\" />\n          </div>\n        ) : (\n          <>\n            <CTable striped responsive>\n              <CTableHead>\n                <CTableRow>\n                  <CTableHeaderCell scope=\"col\">Usuario</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Observación</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Fecha</CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {observations?.map((observation) => (\n                  <CTableRow key={observation.id}>\n                    <CTableDataCell>{observation.user.name}</CTableDataCell>\n                    <CTableDataCell>{observation.message}</CTableDataCell>\n                    <CTableDataCell>\n                      {formatTimezoneToDateTime(observation.created_at)}\n                    </CTableDataCell>\n                  </CTableRow>\n                ))}\n              </CTableBody>\n            </CTable>\n            <CForm className=\"mt-3\">\n              <div className=\"mb-3\">\n                <CFormTextarea\n                  id=\"obs\"\n                  label=\"Observación\"\n                  rows={2}\n                  value={message}\n                  onChange={(e) => setMessage(e.target.value)}\n                ></CFormTextarea>\n              </div>\n            </CForm>\n          </>\n        )}\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"secondary\" onClick={onClose}>\n          Cerrar\n        </CButton>\n        <CButton color=\"primary\" className=\"text-light fw-semibold\" onClick={onSave}>\n          Guardar\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default QuoteModalObs\n","import React, { useState, useEffect, useCallback, useRef } from 'react'\nimport {\n  CModal,\n  CModalHeader,\n  CModalBody,\n  CModalTitle,\n  CModalFooter,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CButton,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CTabContent,\n  CTabPane,\n  CFormCheck,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableRow,\n  CTableHeaderCell,\n  CTableBody,\n  CTableDataCell,\n  CFormSelect,\n  CProgress,\n} from '@coreui/react'\nimport { cilPlus } from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fileTags } from 'src/utils/fileTags'\nimport { FileCard, AppToast } from '../../app'\nimport Swal from 'sweetalert2'\nimport { formatNumber, useHasPermission } from 'src/utils/functions'\nimport { selectAccountsByProvider, selectProviders } from 'src/actions/provider'\nimport { setToast } from 'src/actions/toast'\nimport { uploadFile } from 'src/actions/file'\nimport { modelTypes } from 'src/utils/modelTypes'\nimport { getCharges, getConceptsByCharge } from 'src/actions/quoteConcept'\nimport { addQuote, getQuotes, sendPay, updateQuote, uploadQuoteFile } from 'src/actions/quote'\nimport { getLines, getUnitsByLine } from 'src/actions/unit'\nimport QuoteModalObs from './QuoteModalObs'\nimport { selectDepartments } from 'src/actions/department'\n\nconst QuoteModalForm = ({ visible, onClose, quoteData, view }) => {\n  const [activeKey, setActiveKey] = useState(1),\n    [quoteID, setQuoteID] = useState(''),\n    [title, setTitle] = useState(''),\n    [charge, setCharge] = useState(''),\n    [departments, setDepartments] = useState([]),\n    [departmentID, setDepartmentID] = useState(''),\n    [quoteConceptID, setQuoteConceptID] = useState(''),\n    [description, setDescription] = useState(''),\n    [imgFiles, setImgFiles] = useState([]),\n    [quoteFiles, setQuoteFiles] = useState([]),\n    [invoiceFile, setInvoiceFile] = useState(null),\n    [descriptionQuote, setDescriptionQuote] = useState(''),\n    [numProviders, setNumProviders] = useState(0),\n    [recommendedProviders, setRecommendedProviders] = useState([]),\n    [recommendedProvidersInput, setRecommendedProvidersInput] = useState([]),\n    [suggestedProvider, setSuggestedProvider] = useState(''),\n    [line, setLine] = useState(''),\n    [unit, setUnit] = useState(''),\n    [selectedQuoteID, setSelectedQuoteID] = useState(''),\n    [rejectQuotes, setRejectQuotes] = useState(false),\n    [approvedAmount, setApprovedAmount] = useState(0),\n    [providerID, setProviderID] = useState(''),\n    [providerAccountID, setProviderAccountID] = useState(''),\n    [quoteProvider, setQuoteProvider] = useState(''),\n    [quoteAmount, setQuoteAmount] = useState(0),\n    [deliveryDate, setDeliveryDate] = useState(''),\n    [paymentWithoutInvoice, setPaymentWithoutInvoice] = useState(false),\n    [onePayment, setOnePayment] = useState(false),\n    [multiplePayments, setMultiplePayments] = useState(false),\n    [observation, setObservation] = useState(''),\n    dispatch = useDispatch(),\n    { progress } = useSelector((state) => state.file),\n    { providers, accounts } = useSelector((state) => state.provider),\n    hasPayPermission = useHasPermission('quotes', 'pay'),\n    hasRejectPermission = useHasPermission('quotes', 'reject'),\n    hasApprovePermission = useHasPermission('quotes', 'approve'),\n    hasAuthorizeMinor5000Permission = useHasPermission('quotes', 'authorize.minor.5000'),\n    hasAuthorizeMayor5000Permission = useHasPermission('quotes', 'authorize.mayor.5000'),\n    hasUploadQuotePermission = useHasPermission('quotes', 'upload.quote'),\n    inputImgFile = useRef(),\n    inputQuoteFile = useRef(),\n    inputInvoiceFile = useRef(),\n    user = useSelector((state) => state.auth.user)?.data?.user,\n    charges = useSelector((state) => state.quoteConcept.charges),\n    concepts = useSelector((state) => state.quoteConcept.concepts),\n    departmentsDB = useSelector((state) => state.department.departments),\n    lines = useSelector((state) => state.unit.lines),\n    units = useSelector((state) => state.unit.units),\n    { quotes, filters, progress: progressQuoteFile } = useSelector((state) => state.quote),\n    [visibleObs, setVisibleObs] = useState(false)\n\n  useEffect(() => {\n    dispatch(selectProviders())\n  }, [dispatch])\n\n  useEffect(() => {\n    dispatch(getLines())\n    dispatch(selectDepartments())\n  }, [dispatch])\n\n  useEffect(() => {\n    if (!departmentsDB) {\n      return\n    }\n    let blacklist = ['NOMINA', 'TESORERIA', 'CONTRALORIA', 'CARWASH', 'RESTAURANTE', 'MAXSTORE']\n    let data = departmentsDB.data.filter((dep) => !blacklist.includes(dep.name))\n    setDepartments(data)\n  }, [departmentsDB])\n\n  useEffect(() => {\n    if (!line) {\n      return\n    }\n    dispatch(getUnitsByLine(line))\n  }, [dispatch, line])\n\n  useEffect(() => {\n    if (!departmentID) {\n      return\n    }\n    dispatch(getCharges(departmentID))\n  }, [dispatch, departmentID])\n\n  useEffect(() => {\n    if (!charge) {\n      return\n    }\n    dispatch(getConceptsByCharge(charge))\n  }, [dispatch, charge])\n\n  useEffect(() => {\n    if (!providerID) {\n      return\n    }\n    dispatch(selectAccountsByProvider(providerID))\n  }, [dispatch, providerID])\n\n  useEffect(() => {\n    let array = []\n    for (let i = 0; i < numProviders; i++) {\n      array.push(i)\n    }\n    setRecommendedProvidersInput(array)\n  }, [numProviders])\n\n  useEffect(() => {\n    if (onePayment) {\n      setMultiplePayments(false)\n    }\n  }, [onePayment])\n\n  useEffect(() => {\n    if (multiplePayments) {\n      setOnePayment(false)\n    }\n  }, [multiplePayments])\n\n  useEffect(() => {\n    if (!quoteData) {\n      return\n    }\n    setQuoteID(quoteData.id)\n    setTitle(quoteData.title)\n    setDescription(quoteData.description)\n    setDepartmentID(quoteData.quote_concept.department_id)\n    setCharge(quoteData.quote_concept.charge)\n    setQuoteConceptID(quoteData.quote_concept.id)\n    setLine(quoteData.line)\n    setUnit(quoteData.unit)\n    setNumProviders(quoteData.numProviders)\n    setRecommendedProviders(JSON.parse(quoteData.recommendedProviders))\n    setImgFiles(quoteData.images)\n    setQuoteFiles(quoteData.files)\n    setSelectedQuoteID(quoteData.files.find((file) => file.selectedQuoteFile)?.id)\n    setRejectQuotes(quoteData.rejectQuotes)\n    setApprovedAmount(quoteData.approvedAmount)\n    setOnePayment(quoteData.onePayment)\n    setMultiplePayments(quoteData.multiplePayments)\n    setSuggestedProvider(quoteData.suggestedProvider)\n    setProviderID(quoteData.provider_id)\n    setProviderAccountID(quoteData.provider_account_id)\n    setPaymentWithoutInvoice(quoteData.paymentWithoutInvoice)\n    if (!quoteData.paymentWithoutInvoice) {\n      let filesPR = quoteData?.payments?.find(\n        (p) => !p.purchase_request_pending_id && p.fromQuote,\n      )?.files\n      let file = filesPR?.find((f) => f.tag === fileTags.invoice)\n      setInvoiceFile(file)\n    }\n  }, [quoteData])\n\n  const onSelectRecommendedProvider = (e, i) => {\n    if (e.target.value === '') {\n      setRecommendedProviders(recommendedProviders.filter((v, index) => index !== i))\n      return\n    }\n    let newArr = [...recommendedProviders]\n    newArr[i] = e.target.value ? e.target.value : ''\n\n    setRecommendedProviders(newArr)\n  }\n\n  const onPay = () => {\n    try {\n      if (!providerID) {\n        alert('Selecciona un proveedor')\n        return\n      }\n      if (!providerAccountID) {\n        alert('Selecciona una cuenta de proveedor')\n        return\n      }\n      if (!paymentWithoutInvoice) {\n        if (!invoiceFile) {\n          alert('Sube la factura de pago o selecciona pago sin factura')\n          return\n        }\n      }\n      let data = {\n        provider_id: providerID,\n        provider_account_id: providerAccountID,\n        paymentWithoutInvoice,\n        status: 'sentPay',\n      }\n      Swal.fire({\n        title: '¿Esta seguro de enviar a pago?',\n        showCancelButton: true,\n        confirmButtonText: 'Enviar',\n      }).then((result) => {\n        if (result.isConfirmed) {\n          dispatch(\n            sendPay(data, quoteID, (sendPayRes) => {\n              if (sendPayRes.success) {\n                dispatch(\n                  setToast(\n                    AppToast({\n                      msg: 'Solicitud enviada a pago',\n                      title: 'Solicitudes de compra',\n                      type: 'success',\n                    }),\n                  ),\n                )\n                onUploadInvoiceFile(sendPayRes.data.purchaseRequest)\n                onClose()\n                clearGeneralInputs()\n                Swal.fire('Solicitud de pago enviada!', '', 'success')\n              } else {\n                dispatch(\n                  setToast(\n                    AppToast({\n                      msg: sendPayRes.message,\n                      title: 'Solicitudes de compra',\n                      type: 'error',\n                    }),\n                  ),\n                )\n              }\n            }),\n          )\n        }\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const onAddFiles = (e) => {\n    if (!e.target.files[0]) {\n      return\n    }\n    let data = {\n      localName: e.target.files[0].name,\n      file: e.target.files[0],\n    }\n    if (inputImgFile.current.value) {\n      setImgFiles([...imgFiles, { ...data, tag: fileTags.img }])\n      inputImgFile.current.value = ''\n    }\n  }\n\n  const onAddQuoteFiles = () => {\n    if (!inputQuoteFile.current.value) {\n      alert('Carga una cotización')\n      return\n    }\n    if (!quoteProvider) {\n      alert('Escribe un proveedor')\n      return\n    }\n    if (!quoteAmount) {\n      alert('Escribe un monto')\n      return\n    }\n    if (!deliveryDate) {\n      alert('Selecciona fecha de entrega')\n      return\n    }\n\n    if (inputQuoteFile.current.value) {\n      setQuoteFiles([\n        ...quoteFiles,\n        {\n          localName: inputQuoteFile.current.files[0].name,\n          file: inputQuoteFile.current.files[0],\n          tag: fileTags.quotation,\n          description: descriptionQuote,\n          provider: quoteProvider,\n          amount: quoteAmount,\n          deliveryDate,\n        },\n      ])\n      inputQuoteFile.current.value = ''\n      setDescriptionQuote('')\n      setQuoteProvider('')\n      setQuoteAmount(0)\n      setDeliveryDate('')\n    }\n  }\n\n  const clearGeneralInputs = useCallback(() => {\n    setImgFiles([])\n  }, [])\n\n  const onSave = (e) => {\n    e.preventDefault()\n    try {\n      if (!title || title === '') {\n        dispatch(\n          setToast(\n            AppToast({\n              msg: 'Falta agregar un titulo',\n              type: 'error',\n            }),\n          ),\n        )\n        return\n      }\n\n      if (!departmentID || departmentID === '') {\n        dispatch(\n          setToast(\n            AppToast({\n              msg: 'Falta seleccionar departamento',\n              type: 'error',\n            }),\n          ),\n        )\n        return\n      }\n\n      if (!charge || charge === '') {\n        dispatch(\n          setToast(\n            AppToast({\n              msg: 'Falta seleccionar Cargo y Concepto',\n              type: 'error',\n            }),\n          ),\n        )\n        return\n      }\n\n      if (!description || description === '') {\n        dispatch(\n          setToast(\n            AppToast({\n              msg: 'Falta agregar descripcion',\n              type: 'error',\n            }),\n          ),\n        )\n        return\n      }\n\n      if (!line || line === '') {\n        dispatch(\n          setToast(\n            AppToast({\n              msg: 'Falta seleccionar Giro y Unidad',\n              type: 'error',\n            }),\n          ),\n        )\n        return\n      }\n\n      let status\n      if (rejectQuotes) {\n        status = 'rejected'\n      } else if (approvedAmount > 0) {\n        status = 'approved'\n      }\n\n      let data = {\n        title,\n        provider_id: providerID,\n        quote_concept_id: quoteConceptID,\n        description,\n        numProviders,\n        recommendedProviders: JSON.stringify(recommendedProviders),\n        line,\n        unit,\n        rejectQuotes,\n        approvedAmount,\n        observation,\n        onePayment,\n        multiplePayments,\n        suggestedProvider,\n        status,\n        selectedQuoteID,\n      }\n      dispatch(\n        quoteData\n          ? updateQuote(data, quoteID, (quoteRes) => {\n              if (quoteRes.success) {\n                dispatch(\n                  setToast(\n                    AppToast({\n                      msg: 'Solicitud actualizada correctamente.',\n                      title: 'Solicitudes de compra',\n                      type: 'success',\n                    }),\n                  ),\n                )\n                onUploadImgFile(quoteRes.data)\n              } else {\n                dispatch(\n                  setToast(\n                    AppToast({\n                      msg: 'Ha ocurrido un error.',\n                      title: 'Solicitudes de compra',\n                      type: 'error',\n                    }),\n                  ),\n                )\n              }\n            })\n          : addQuote({ ...data, petitioner_id: user.id }, (quoteRes) => {\n              if (quoteRes.success) {\n                dispatch(\n                  setToast(\n                    AppToast({\n                      msg: 'Solicitud realizada correctamente.',\n                      title: 'Solicitudes de compra',\n                      type: 'success',\n                    }),\n                  ),\n                )\n                onUploadImgFile(quoteRes.data)\n              } else {\n                dispatch(\n                  setToast(\n                    AppToast({\n                      msg: 'Ha ocurrido un error.',\n                      title: 'Solicitudes de compra',\n                      type: 'error',\n                    }),\n                  ),\n                )\n              }\n            }),\n      )\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const onUploadImgFile = (quoteRes) => {\n    if (imgFiles.length > 0) {\n      Promise.all(\n        imgFiles.map((file) => {\n          if (!file.id) {\n            return dispatch(\n              uploadFile(file.file, file.tag, null, quoteRes.id, modelTypes.quote, () => {}),\n            )\n          } else {\n            onClose()\n            clearGeneralInputs()\n          }\n        }),\n      ).finally(() => {\n        dispatch(getQuotes(quotes.current_page, filters.filter, filters.value))\n      })\n    } else {\n      onClose()\n      clearGeneralInputs()\n    }\n  }\n\n  const onUploadQuoteFile = (e) => {\n    e.preventDefault()\n    try {\n      if (quoteFiles.length <= 0) {\n        alert('Agrega cotizaciónes a la solicitud')\n        return\n      }\n      dispatch(\n        updateQuote(\n          { status: 'inprogress', rejectQuotes: false, approvedAmount: 0 },\n          quoteID,\n          (quoteRes) => {\n            if (quoteRes.success) {\n              dispatch(\n                setToast(\n                  AppToast({\n                    msg: 'Solicitud actualizada correctamente.',\n                    title: 'Solicitudes de compra',\n                    type: 'success',\n                  }),\n                ),\n              )\n              if (quoteFiles.length > 0) {\n                Promise.all(\n                  quoteFiles.map((file) => {\n                    if (!file.id) {\n                      let data = {\n                        file: file.file,\n                        tag: file.tag,\n                        description: file.description,\n                        provider: file.provider,\n                        amount: file.amount,\n                        deliveryDate: file.deliveryDate,\n                        quote_id: quoteID,\n                      }\n                      return dispatch(uploadQuoteFile(data, () => {}))\n                    } else {\n                      onClose()\n                      clearGeneralInputs()\n                    }\n                  }),\n                ).finally(() => {\n                  dispatch(getQuotes(quotes.current_page, filters.filter, filters.value))\n                })\n              } else {\n                onClose()\n                clearGeneralInputs()\n              }\n            } else {\n              dispatch(\n                setToast(\n                  AppToast({\n                    msg: 'Ha ocurrido un error.',\n                    title: 'Solicitudes de compra',\n                    type: 'error',\n                  }),\n                ),\n              )\n            }\n          },\n        ),\n      )\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const onUploadInvoiceFile = (purchaseRequestRes) => {\n    try {\n      dispatch(\n        uploadFile(\n          invoiceFile.file,\n          invoiceFile.tag,\n          null,\n          purchaseRequestRes.id,\n          modelTypes.purchaseRequest,\n          () => {\n            dispatch(getQuotes(quotes.current_page, filters.filter, filters.value))\n          },\n        ),\n      )\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const onAuthorize = (e) => {\n    e.preventDefault()\n    try {\n      Swal.fire({\n        title: '¿Esta seguro de autorizar?',\n        showCancelButton: true,\n        confirmButtonText: 'Autorizar',\n      }).then((result) => {\n        if (result.isConfirmed) {\n          dispatch(\n            updateQuote({ status: 'authorized' }, quoteID, (quoteRes) => {\n              if (quoteRes.success) {\n                dispatch(\n                  setToast(\n                    AppToast({\n                      msg: 'Solicitud actualizada correctamente.',\n                      title: 'Solicitudes de compra',\n                      type: 'success',\n                    }),\n                  ),\n                )\n\n                onClose()\n                clearGeneralInputs()\n                Swal.fire('Autorizado!', '', 'success')\n              } else {\n                dispatch(\n                  setToast(\n                    AppToast({\n                      msg: 'Ha ocurrido un error.',\n                      title: 'Solicitudes de compra',\n                      type: 'error',\n                    }),\n                  ),\n                )\n              }\n            }),\n          )\n        }\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const onVOBO = (e) => {\n    e.preventDefault()\n    try {\n      Swal.fire({\n        title: '¿Dar el visto bueno?',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n      }).then((result) => {\n        if (result.isConfirmed) {\n          dispatch(\n            updateQuote({ status: 'ok' }, quoteID, (quoteRes) => {\n              if (quoteRes.success) {\n                dispatch(\n                  setToast(\n                    AppToast({\n                      msg: 'Solicitud actualizada correctamente.',\n                      title: 'Solicitudes de compra',\n                      type: 'success',\n                    }),\n                  ),\n                )\n\n                onClose()\n                clearGeneralInputs()\n                Swal.fire('Autorizado!', '', 'success')\n              } else {\n                dispatch(\n                  setToast(\n                    AppToast({\n                      msg: 'Ha ocurrido un error.',\n                      title: 'Solicitudes de compra',\n                      type: 'error',\n                    }),\n                  ),\n                )\n              }\n            }),\n          )\n        }\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const onReject = (e) => {\n    e.preventDefault()\n\n    Swal.fire({\n      title: 'Escribe un motivo del rechazo',\n      input: 'textarea',\n      inputAttributes: {\n        autocapitalize: 'off',\n      },\n      showCancelButton: true,\n      confirmButtonText: 'Enviar',\n      confirmButtonColor: '#E94834',\n      showLoaderOnConfirm: true,\n      preConfirm: async (observation) => {\n        try {\n          if (!observation) {\n            Swal.showValidationMessage(`\n              Escribe una observacion\n            `)\n            return\n          }\n          dispatch(\n            updateQuote(\n              {\n                status: 'rejected',\n                observation,\n                selectedQuoteID,\n                approvedAmount: 0,\n              },\n              quoteID,\n              (quoteRes) => {\n                if (quoteRes.success) {\n                  dispatch(\n                    setToast(\n                      AppToast({\n                        msg: 'Solicitud actualizada correctamente.',\n                        title: 'Solicitudes de compra',\n                        type: 'success',\n                      }),\n                    ),\n                  )\n\n                  onClose()\n                  clearGeneralInputs()\n                  Swal.fire('Rechazado!', '', 'success')\n                } else {\n                  dispatch(\n                    setToast(\n                      AppToast({\n                        msg: 'Ha ocurrido un error.',\n                        title: 'Solicitudes de compra',\n                        type: 'error',\n                      }),\n                    ),\n                  )\n                }\n              },\n            ),\n          )\n        } catch (error) {\n          Swal.showValidationMessage(`\n              Request failed: ${error}\n            `)\n        }\n      },\n      allowOutsideClick: () => !Swal.isLoading(),\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire({\n          title: `Solicitud rechazada correctamente`,\n        })\n      }\n    })\n  }\n\n  useEffect(() => {\n    if (progress === 100) {\n      setTimeout(() => {\n        onClose()\n        clearGeneralInputs()\n      }, 3000)\n    }\n  }, [progress, onClose, clearGeneralInputs])\n\n  useEffect(() => {\n    if (progressQuoteFile === 100) {\n      setTimeout(() => {\n        onClose()\n        clearGeneralInputs()\n      }, 3000)\n    }\n  }, [progressQuoteFile, onClose, clearGeneralInputs])\n\n  useEffect(() => {\n    if (rejectQuotes) {\n      setApprovedAmount(0)\n      setSelectedQuoteID('')\n    }\n  }, [rejectQuotes])\n\n  useEffect(() => {\n    if (!selectedQuoteID) {\n      setApprovedAmount(0)\n      return\n    }\n    let quote = quoteData?.files?.find((f) => f.id === selectedQuoteID)\n    if (quote) {\n      setApprovedAmount(quote.amount)\n      setRejectQuotes(false)\n    }\n  }, [selectedQuoteID, quoteData])\n\n  useEffect(() => {\n    if (view && ['sentPay', 'paid'].includes(quoteData.status)) {\n      return\n    }\n\n    if (paymentWithoutInvoice) {\n      setInvoiceFile(null)\n      inputInvoiceFile.current.value = ''\n    }\n  }, [paymentWithoutInvoice, quoteData, view])\n\n  return (\n    <>\n      <CModal\n        visible={visible}\n        onClose={onClose}\n        aria-labelledby=\"ModalForm\"\n        size=\"xl\"\n        scrollable\n        backdrop=\"static\"\n      >\n        <CModalHeader onClose={onClose}>\n          <CModalTitle id=\"ModalForm\">\n            {quoteData ? `${view ? '' : 'Editar'} Solicitud ${quoteData.title}` : 'Nueva Solicitud'}\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          {imgFiles.length > 0 && imgFiles.some((file) => !file.id) && (\n            <CProgress value={progress} className=\"mb-2\">\n              {progress}%\n            </CProgress>\n          )}\n          {quoteFiles.length > 0 && quoteFiles.some((file) => !file.id) && (\n            <CProgress value={progressQuoteFile} className=\"mb-2\">\n              {progressQuoteFile}%\n            </CProgress>\n          )}\n          {invoiceFile && !invoiceFile?.id && (\n            <CProgress value={progress} className=\"mb-2\">\n              {progress}%\n            </CProgress>\n          )}\n          <CNav variant=\"tabs\" role=\"tablist\" className=\"mt-1\">\n            <CNavItem role=\"presentation\">\n              <CNavLink\n                active={activeKey === 1}\n                component=\"button\"\n                role=\"tab\"\n                aria-controls=\"data-tab-pane\"\n                aria-selected={activeKey === 1}\n                onClick={() => setActiveKey(1)}\n              >\n                General\n              </CNavLink>\n            </CNavItem>\n            {view && (\n              <CNavItem role=\"presentation\">\n                <CNavLink\n                  active={activeKey === 2}\n                  component=\"button\"\n                  role=\"tab\"\n                  aria-controls=\"account-tab-pane\"\n                  aria-selected={activeKey === 2}\n                  onClick={() => setActiveKey(2)}\n                >\n                  Cotizaciónes\n                </CNavLink>\n              </CNavItem>\n            )}\n            {((view && quoteData.status === 'authorized' && hasPayPermission) ||\n              (view && quoteData.status === 'sentPay') ||\n              (view && quoteData.status === 'paid')) && (\n              <CNavItem role=\"presentation\">\n                <CNavLink\n                  active={activeKey === 3}\n                  component=\"button\"\n                  role=\"tab\"\n                  aria-controls=\"account-tab-pane\"\n                  aria-selected={activeKey === 3}\n                  onClick={() => setActiveKey(3)}\n                >\n                  Selección de cuenta y proveedor\n                </CNavLink>\n              </CNavItem>\n            )}\n          </CNav>\n          <CTabContent>\n            {/* Quote data */}\n            <CTabPane role=\"tabpanel\" aria-labelledby=\"data-tab-pane\" visible={activeKey === 1}>\n              <CForm className=\"mt-3\">\n                <div className=\"mb-3\">\n                  <CFormLabel>Título(*)</CFormLabel>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"title\"\n                    placeholder=\"Título de la solicitud\"\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                    disabled={view}\n                  />\n                </div>\n                <div className=\"mb-3 d-flex\">\n                  <div className=\"flex-md-fill me-2\">\n                    <CFormLabel>Departamento(*)</CFormLabel>\n                    <CFormSelect\n                      aria-label=\"department\"\n                      onChange={(e) => setDepartmentID(e.target.value)}\n                      value={departmentID}\n                      disabled={view}\n                    >\n                      <option value={''}>Selecciona...</option>\n                      {departments.map(({ id, name }) => (\n                        <option key={name} value={id}>\n                          {name}\n                        </option>\n                      ))}\n                    </CFormSelect>\n                  </div>\n                  <div className=\"flex-md-fill me-2\">\n                    <CFormLabel>Cargo(*)</CFormLabel>\n                    <CFormSelect\n                      aria-label=\"charge\"\n                      onChange={(e) => setCharge(e.target.value)}\n                      value={charge}\n                      disabled={view}\n                    >\n                      <option value={''}>Selecciona...</option>\n                      {charges.map(({ charge }) => (\n                        <option key={charge} value={charge}>\n                          {charge}\n                        </option>\n                      ))}\n                    </CFormSelect>\n                  </div>\n                  <div className=\"flex-md-fill me-2\">\n                    <CFormLabel>Concepto(*)</CFormLabel>\n                    <CFormSelect\n                      aria-label=\"concept\"\n                      onChange={(e) => setQuoteConceptID(e.target.value)}\n                      value={quoteConceptID}\n                      disabled={view}\n                    >\n                      <option value={''}>Selecciona...</option>\n                      {concepts.data.map(({ id, concept }) => (\n                        <option key={id} value={id}>\n                          {concept}\n                        </option>\n                      ))}\n                    </CFormSelect>\n                  </div>\n                </div>\n                <div className=\"mb-3\">\n                  <CFormTextarea\n                    id=\"desc\"\n                    label=\"Descripción(*)\"\n                    rows={2}\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                    disabled={view}\n                  ></CFormTextarea>\n                </div>\n                {!view && (\n                  <div className=\"mb-3\">\n                    <CFormLabel>\n                      Sube <b>imágenes</b> para la solicitud (opcional)\n                    </CFormLabel>\n                    <CFormInput\n                      ref={inputImgFile}\n                      type=\"file\"\n                      id=\"imgFile\"\n                      onChange={onAddFiles}\n                      accept=\"image/*\"\n                      text=\"Archivos permitidos jpg, png, jpeg (10 MB)\"\n                    />\n                  </div>\n                )}\n                <div className=\"mb-3 d-flex\">\n                  {imgFiles.map((file, index) => {\n                    return (\n                      <FileCard\n                        file={file}\n                        key={file.tag}\n                        onDelete={(id) => {\n                          return file.id\n                            ? setImgFiles(imgFiles.filter((f) => f.id !== id))\n                            : setImgFiles(imgFiles.filter((f, i) => index !== i))\n                        }}\n                        viewMode={view}\n                      />\n                    )\n                  })}\n                </div>\n                <div className=\"mb-3\">\n                  <CFormCheck\n                    id=\"onePayment\"\n                    label=\"Pago en una sola exhibición\"\n                    checked={onePayment}\n                    onChange={(e) => setOnePayment(e.target.checked)}\n                    disabled={view}\n                  />\n                </div>\n                <div className=\"mb-3\">\n                  <CFormCheck\n                    id=\"multiplePayments\"\n                    label=\"Múltiples pagos\"\n                    checked={multiplePayments}\n                    onChange={(e) => setMultiplePayments(e.target.checked)}\n                    disabled={view}\n                  />\n                </div>\n                <div className=\"mb-3 d-flex\">\n                  <div className=\"flex-fill\">\n                    <CFormLabel>Giro(*)</CFormLabel>\n                    <CFormSelect\n                      aria-label=\"line\"\n                      onChange={(e) => setLine(e.target.value)}\n                      value={line}\n                      disabled={view}\n                    >\n                      <option value={''}>Selecciona...</option>\n                      {lines.map((l) => (\n                        <option value={l.line} key={l.line}>\n                          {l.line}\n                        </option>\n                      ))}\n                    </CFormSelect>\n                  </div>\n                  <div className=\"flex-fill mx-2\">\n                    <CFormLabel>Unidad(*)</CFormLabel>\n                    <CFormSelect\n                      aria-label=\"unit\"\n                      onChange={(e) => setUnit(e.target.value)}\n                      value={unit}\n                      disabled={view}\n                    >\n                      <option value={''}>Selecciona...</option>\n                      {units.data.map(({ id, unit }) => (\n                        <option key={id} value={unit}>\n                          {unit}\n                        </option>\n                      ))}\n                    </CFormSelect>\n                  </div>\n                  <div className=\"flex-fill\">\n                    <CFormLabel htmlFor=\"recommendedProviders\">Cotizaciónes requeridas</CFormLabel>\n                    <CFormInput\n                      type=\"number\"\n                      id=\"recommendedProviders\"\n                      placeholder=\"No Cotizaciónes\"\n                      onChange={(e) => setNumProviders(e.target.value)}\n                      value={numProviders}\n                      max={5}\n                      min={0}\n                      disabled={view}\n                    />\n                  </div>\n                </div>\n                {recommendedProvidersInput.map((x, i) => (\n                  <div className=\"mb-3\" key={x}>\n                    <CFormLabel>Proveedor recomendado {x + 1} (opcional)</CFormLabel>\n                    <CFormSelect\n                      aria-label=\"charge\"\n                      onChange={(e) => onSelectRecommendedProvider(e, i)}\n                      value={recommendedProviders[i]}\n                      disabled={view}\n                    >\n                      <option value={''}>Selecciona...</option>\n                      {providers.data.map(({ id, name }) => (\n                        <option key={id} value={name}>\n                          {name}\n                        </option>\n                      ))}\n                    </CFormSelect>\n                  </div>\n                ))}\n                {numProviders > 0 && (\n                  <div className=\"mb-3\">\n                    <CFormLabel>Proveedor sugerido (No registrado) (opcional)</CFormLabel>\n                    <CFormInput\n                      type=\"text\"\n                      id=\"suggestedProvider\"\n                      placeholder=\"Proveedor sugerido\"\n                      value={suggestedProvider}\n                      onChange={(e) => setSuggestedProvider(e.target.value)}\n                      disabled={view}\n                    />\n                  </div>\n                )}\n              </CForm>\n            </CTabPane>\n            {/* Quote files */}\n            <CTabPane role=\"tabpanel\" aria-labelledby=\"data-tab-pane\" visible={activeKey === 2}>\n              <CForm className=\"mt-3\">\n                {((hasApprovePermission &&\n                  hasUploadQuotePermission &&\n                  quoteData?.status === 'sent') ||\n                  (hasUploadQuotePermission &&\n                    !hasApprovePermission &&\n                    quoteData?.status !== 'authorized' &&\n                    quoteData?.status !== 'approved' &&\n                    quoteData?.status !== 'sentPay' &&\n                    quoteData?.status !== 'paid')) && (\n                  <>\n                    <CFormLabel className=\"fs-5\">\n                      Añade las <b>Cotizaciónes</b> para la solicitud\n                    </CFormLabel>\n                    <div className=\"mb-3\">\n                      <CFormInput\n                        ref={inputQuoteFile}\n                        type=\"file\"\n                        id=\"quoteFile\"\n                        text=\"Archivos permitidos jpg, pdf, png, xlxs (10 MB)\"\n                      />\n                    </div>\n                    <div className=\"d-flex mb-3\">\n                      <div className=\"flex-fill\">\n                        <CFormLabel>Proveedor(*)</CFormLabel>\n                        <CFormInput\n                          type=\"text\"\n                          id=\"quoteProvider\"\n                          placeholder=\"Proveedor\"\n                          value={quoteProvider}\n                          onChange={(e) => setQuoteProvider(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"flex-fill mx-2\">\n                        <CFormLabel>Monto(*)</CFormLabel>\n                        <CFormInput\n                          type=\"number\"\n                          id=\"amount\"\n                          placeholder=\"0\"\n                          value={quoteAmount}\n                          onChange={(e) => setQuoteAmount(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"flex-fill\">\n                        <CFormLabel>Tiempo de entrega(*)</CFormLabel>\n                        <CFormInput\n                          type=\"date\"\n                          id=\"deliveryDate\"\n                          value={deliveryDate}\n                          onChange={(e) => setDeliveryDate(e.target.value)}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"mb-3\">\n                      <CFormTextarea\n                        id=\"desc\"\n                        label=\"Descripción\"\n                        rows={2}\n                        value={descriptionQuote}\n                        onChange={(e) => setDescriptionQuote(e.target.value)}\n                      ></CFormTextarea>\n                    </div>\n                    <CButton\n                      color=\"primary\"\n                      className=\"text-light fw-semibold me-2\"\n                      onClick={onAddQuoteFiles}\n                    >\n                      <CIcon icon={cilPlus} className=\"me-1\" />\n                      Añadir a la solicitud\n                    </CButton>\n                  </>\n                )}\n                {quoteFiles.length > 0 ? (\n                  <>\n                    <CTable striped responsive>\n                      <CTableHead>\n                        <CTableRow>\n                          <CTableHeaderCell scope=\"col\">Datos</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">Descripción</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">Archivo Cotización</CTableHeaderCell>\n                          {(hasApprovePermission ||\n                            (hasApprovePermission &&\n                              hasUploadQuotePermission &&\n                              quoteData?.status === 'sent') ||\n                            hasAuthorizeMinor5000Permission ||\n                            hasAuthorizeMayor5000Permission ||\n                            (hasPayPermission && quoteData?.status === 'approved') ||\n                            (hasPayPermission && quoteData?.status === 'authorized') ||\n                            (hasPayPermission && quoteData?.status === 'sentPay') ||\n                            (view && quoteData?.status === 'paid')) && (\n                            <CTableHeaderCell scope=\"col\" className=\"text-center\">\n                              Aprobada\n                            </CTableHeaderCell>\n                          )}\n                        </CTableRow>\n                      </CTableHead>\n                      <CTableBody>\n                        {quoteFiles.map((file, index) => (\n                          <CTableRow key={file.name}>\n                            <CTableDataCell>\n                              <p>\n                                <b>Monto: </b>${formatNumber(file.amount)}\n                              </p>\n                              <p>\n                                <b>Proveedor: </b> {file.provider}\n                              </p>\n                              <p>\n                                <b>Tiempo de entrega: </b> {file.deliveryDate}\n                              </p>\n                            </CTableDataCell>\n                            <CTableDataCell>{file.description}</CTableDataCell>\n                            <CTableDataCell>\n                              <FileCard\n                                file={file}\n                                key={file.name}\n                                quoteFile={true}\n                                onDelete={(id) => {\n                                  return file.id\n                                    ? setQuoteFiles(quoteFiles.filter((f) => f.id !== id))\n                                    : setQuoteFiles(quoteFiles.filter((f, i) => index !== i))\n                                }}\n                                viewMode={\n                                  (view &&\n                                    hasUploadQuotePermission &&\n                                    quoteData.status === 'inprogress') ||\n                                  (view && !hasUploadQuotePermission) ||\n                                  (view && quoteData.status === 'approved') ||\n                                  (view && quoteData.status === 'authorized') ||\n                                  (view && quoteData.status === 'sentPay') ||\n                                  (view && quoteData.status === 'paid')\n                                }\n                              />\n                            </CTableDataCell>\n                            {(hasApprovePermission ||\n                              (hasApprovePermission &&\n                                hasUploadQuotePermission &&\n                                quoteData?.status === 'sent') ||\n                              hasAuthorizeMinor5000Permission ||\n                              hasAuthorizeMayor5000Permission ||\n                              (hasPayPermission && quoteData?.status === 'approved') ||\n                              (hasPayPermission && quoteData?.status === 'authorized') ||\n                              (hasPayPermission && quoteData?.status === 'sentPay') ||\n                              (view && quoteData?.status === 'paid')) && (\n                              <CTableDataCell className=\"text-center\">\n                                <CFormCheck\n                                  id=\"selectedQuoteID\"\n                                  checked={file.id === selectedQuoteID}\n                                  onChange={(e) => {\n                                    if (e.target.checked) {\n                                      setSelectedQuoteID(file.id)\n                                    } else {\n                                      setSelectedQuoteID('')\n                                    }\n                                  }}\n                                  disabled={\n                                    (quoteData?.status === 'rejected' && quoteData.rejectQuotes) ||\n                                    quoteData?.status === 'approved' ||\n                                    quoteData?.status === 'ok' ||\n                                    quoteData?.status === 'authorized' ||\n                                    quoteData?.status === 'sentPay' ||\n                                    quoteData?.status === 'paid'\n                                  }\n                                />\n                              </CTableDataCell>\n                            )}\n                          </CTableRow>\n                        ))}\n                      </CTableBody>\n                    </CTable>\n                    {view &&\n                      (hasApprovePermission ||\n                        (hasApprovePermission &&\n                          hasUploadQuotePermission &&\n                          quoteData?.status === 'sent') ||\n                        quoteData?.status === 'approved' ||\n                        quoteData?.status === 'ok' ||\n                        quoteData?.status === 'authorized' ||\n                        quoteData?.status === 'sentPay' ||\n                        quoteData?.status === 'paid') && (\n                        <>\n                          <div className=\"mb-3\">\n                            <CFormCheck\n                              id=\"rejectQuotes\"\n                              label=\"Se descartan todas las cotizaciónes\"\n                              checked={rejectQuotes}\n                              onChange={(e) => setRejectQuotes(e.target.checked)}\n                              disabled={\n                                (quoteData?.status === 'rejected' && quoteData.rejectQuotes) ||\n                                quoteData?.status === 'approved' ||\n                                quoteData?.status === 'ok' ||\n                                quoteData?.status === 'authorized' ||\n                                quoteData?.status === 'sentPay' ||\n                                quoteData?.status === 'paid'\n                              }\n                            />\n                          </div>\n                          <div className=\"mb-3\">\n                            <CFormLabel htmlFor=\"approvedAmount\">\n                              Monto de cotización aprobada ($)\n                            </CFormLabel>\n                            <CFormInput\n                              type=\"number\"\n                              id=\"approvedAmount\"\n                              placeholder=\"Importe\"\n                              onChange={(e) => setApprovedAmount(e.target.value)}\n                              value={approvedAmount}\n                              disabled={\n                                rejectQuotes ||\n                                quoteData?.status === 'approved' ||\n                                quoteData?.status === 'ok' ||\n                                quoteData?.status === 'authorized' ||\n                                quoteData?.status === 'sentPay' ||\n                                quoteData?.status === 'paid'\n                              }\n                            />\n                          </div>\n                          {quoteData?.status === 'rejected' ||\n                          quoteData?.status === 'approved' ||\n                          quoteData?.status === 'ok' ||\n                          quoteData?.status === 'authorized' ||\n                          quoteData?.status === 'sentPay' ||\n                          quoteData?.status === 'paid' ? (\n                            <CButton\n                              color=\"primary\"\n                              className=\"text-white\"\n                              onClick={() => setVisibleObs(true)}\n                            >\n                              Ver observaciones\n                            </CButton>\n                          ) : (\n                            <div className=\"mb-3\">\n                              <CFormTextarea\n                                id=\"obs\"\n                                label=\"Observación\"\n                                rows={2}\n                                value={observation}\n                                onChange={(e) => setObservation(e.target.value)}\n                              ></CFormTextarea>\n                            </div>\n                          )}\n                        </>\n                      )}\n                  </>\n                ) : (\n                  !hasUploadQuotePermission && (\n                    <h3 className=\"text-center text-primary font-monospace\">\n                      No hay cotizaciónes disponibles\n                    </h3>\n                  )\n                )}\n              </CForm>\n            </CTabPane>\n            {/* Provider selection */}\n            <CTabPane role=\"tabpanel\" aria-labelledby=\"data-tab-pane\" visible={activeKey === 3}>\n              <CForm className=\"mt-3\">\n                <div className=\"mb-3 d-flex\">\n                  <div className=\"flex-md-fill me-2\">\n                    <CFormLabel>Proveedor(*)</CFormLabel>\n                    <CFormSelect\n                      aria-label=\"provider\"\n                      onChange={(e) => setProviderID(e.target.value)}\n                      value={providerID}\n                      disabled={quoteData?.status === 'sentPay' || quoteData?.status === 'paid'}\n                    >\n                      <option value={''}>Selecciona...</option>\n                      {providers.data.map(({ id, name }) => (\n                        <option key={id} value={id}>\n                          {name}\n                        </option>\n                      ))}\n                    </CFormSelect>\n                  </div>\n                  <div className=\"flex-md-fill me-2\">\n                    <CFormLabel>Cuenta(*)</CFormLabel>\n                    <CFormSelect\n                      aria-label=\"providerAccount\"\n                      onChange={(e) => setProviderAccountID(e.target.value)}\n                      value={providerAccountID}\n                      disabled={quoteData?.status === 'sentPay' || quoteData?.status === 'paid'}\n                    >\n                      <option value={''}>Selecciona...</option>\n                      {accounts?.data?.map(({ id, clabe, bank }) => (\n                        <option key={id} value={id}>\n                          {bank.name} - {clabe}\n                        </option>\n                      ))}\n                    </CFormSelect>\n                  </div>\n                </div>\n                {view && quoteData.status === 'authorized' && hasPayPermission && (\n                  <div className=\"mb-3\">\n                    <CFormLabel>\n                      Sube la <b>factura</b> para la solicitud de pago\n                    </CFormLabel>\n                    <CFormInput\n                      ref={inputInvoiceFile}\n                      type=\"file\"\n                      id=\"invoiceFile\"\n                      onChange={(e) =>\n                        setInvoiceFile({\n                          tag: fileTags.invoice,\n                          file: e.target.files[0],\n                          localName: e.target.files[0].name,\n                        })\n                      }\n                      text=\"Archivos permitidos jpg, pdf, jpeg (10 MB)\"\n                      disabled={paymentWithoutInvoice}\n                    />\n                  </div>\n                )}\n                {invoiceFile && (\n                  <div className=\"mb-3 d-flex\">\n                    <FileCard\n                      file={invoiceFile}\n                      onDelete={(id) => {\n                        setInvoiceFile(null)\n                        inputInvoiceFile.current.value = ''\n                      }}\n                      viewMode={invoiceFile?.id}\n                    />\n                  </div>\n                )}\n                <div className=\"mb-3\">\n                  <CFormCheck\n                    id=\"paymentWithoutInvoice\"\n                    label=\"Tramitar pago sin factura\"\n                    checked={paymentWithoutInvoice}\n                    onChange={(e) => setPaymentWithoutInvoice(e.target.checked)}\n                    disabled={quoteData?.status === 'sentPay' || quoteData?.status === 'paid'}\n                  />\n                </div>\n              </CForm>\n            </CTabPane>\n          </CTabContent>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={onClose}>\n            Cerrar\n          </CButton>\n          {view && quoteData.status === 'authorized' && hasPayPermission && (\n            <CButton color=\"info\" className=\"text-light fw-semibold\" onClick={onPay}>\n              Enviar a pago\n            </CButton>\n          )}\n\n          {view &&\n            quoteData.status !== 'approved' &&\n            quoteData.status !== 'authorized' &&\n            quoteData.status !== 'sentPay' &&\n            quoteData.status !== 'paid' && (\n              <CButton\n                color=\"primary\"\n                className=\"text-light fw-semibold\"\n                onClick={(e) => {\n                  if (hasUploadQuotePermission) {\n                    if (hasApprovePermission && quoteData.status === 'sent') {\n                      onUploadQuoteFile(e)\n                    }\n                    if (hasApprovePermission && quoteData.status === 'inprogress') {\n                      onSave(e)\n                    }\n                    if (!hasApprovePermission) {\n                      onUploadQuoteFile(e)\n                    }\n                  } else {\n                    onSave(e) //for approve\n                  }\n                }}\n              >\n                Guardar\n              </CButton>\n            )}\n\n          {!view && (\n            <CButton\n              color=\"primary\"\n              className=\"text-light fw-semibold\"\n              onClick={(e) => {\n                onSave(e)\n              }}\n            >\n              Guardar\n            </CButton>\n          )}\n\n          {hasAuthorizeMinor5000Permission &&\n            view &&\n            quoteData.status === 'approved' &&\n            quoteData.approvedAmount < 5000 && (\n              <CButton color=\"info\" className=\"text-light fw-semibold\" onClick={onAuthorize}>\n                Autorizar\n              </CButton>\n            )}\n          {hasAuthorizeMayor5000Permission &&\n            view &&\n            quoteData.status === 'ok' &&\n            quoteData.approvedAmount > 5000 && (\n              <CButton color=\"info\" className=\"text-light fw-semibold\" onClick={onAuthorize}>\n                Autorizar\n              </CButton>\n            )}\n          {hasAuthorizeMinor5000Permission &&\n            view &&\n            quoteData.status === 'approved' &&\n            quoteData.approvedAmount > 5000 && (\n              <CButton color=\"info\" className=\"text-light fw-semibold\" onClick={onVOBO}>\n                VoBo\n              </CButton>\n            )}\n          {hasAuthorizeMinor5000Permission && view && quoteData.status === 'approved' && (\n            <CButton color=\"danger\" className=\"text-light fw-semibold\" onClick={onReject}>\n              Rechazar\n            </CButton>\n          )}\n        </CModalFooter>\n      </CModal>\n      {visibleObs && (\n        <QuoteModalObs\n          quoteID={quoteData?.id}\n          visible={visibleObs}\n          onClose={() => setVisibleObs(false)}\n        />\n      )}\n    </>\n  )\n}\n\nexport default QuoteModalForm\n","import axios from 'axios'\nimport { GET_UNIT_LINES, GET_UNITS, UNIT_ERROR } from './types'\nimport config from '../server.config'\n\nexport const getLines = () => async (dispatch) => {\n  try {\n    const res = await axios.get(`${config.instance.baseURL}/api/select/line`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: GET_UNIT_LINES,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: UNIT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n\nexport const getUnitsByLine = (line) => async (dispatch) => {\n  try {\n    const res = await axios.get(`${config.instance.baseURL}/api/select/unit/line?line=${line}`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: GET_UNITS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: UNIT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n","import axios from 'axios'\nimport { GET_QUOTE_CONCEPTS, QUOTE_CONCEPT_ERROR, GET_QUOTE_CHARGES } from './types'\nimport config from '../server.config'\n\nexport const getCharges = (departmentID) => async (dispatch) => {\n  try {\n    const res = await axios.get(\n      `${config.instance.baseURL}/api/select/charge?department_id=${departmentID}`,\n      {\n        headers: {\n          ...config.instance.headers,\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      },\n    )\n    dispatch({\n      type: GET_QUOTE_CHARGES,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: QUOTE_CONCEPT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n\nexport const getConceptsByCharge = (charge) => async (dispatch) => {\n  try {\n    const res = await axios.get(\n      `${config.instance.baseURL}/api/select/concept/charge?charge=${charge}`,\n      {\n        headers: {\n          ...config.instance.headers,\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      },\n    )\n    dispatch({\n      type: GET_QUOTE_CONCEPTS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: QUOTE_CONCEPT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n","import React, { useState } from 'react'\nimport {\n  CTable,\n  CTableBody,\n  CTableHead,\n  CTableRow,\n  CTableHeaderCell,\n  CTableDataCell,\n  CDropdown,\n  CDropdownToggle,\n  CDropdownMenu,\n  CDropdownItem,\n  CBadge,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilOptions } from '@coreui/icons'\nimport { useDispatch } from 'react-redux'\nimport Swal from 'sweetalert2'\nimport {\n  formatTimezoneToDate,\n  statusQuote,\n  statusQuoteColors,\n  useHasPermission,\n} from 'src/utils/functions'\nimport { setToast } from 'src/actions/toast'\nimport { AppToast } from 'src/components/app'\nimport QuoteModalForm from './QuoteModalForm'\nimport QuoteModalObs from './QuoteModalObs'\nimport { deleteFilesByQuote, deleteQuote } from 'src/actions/quote'\n\nconst QuoteTable = ({ data }) => {\n  const [visible, setVisible] = useState(false),\n    [visibleObs, setVisibleObs] = useState(false),\n    [quoteData, setQuoteData] = useState(null),\n    [viewModalMode, setViewModalMode] = useState(false),\n    dispatch = useDispatch(),\n    hasDeletePermission = useHasPermission('quotes', 'delete'),\n    hasEditPermission = useHasPermission('quotes', 'edit'),\n    hasShowPermission = useHasPermission('quotes', 'show'),\n    hasUploadQuotePermission = useHasPermission('quotes', 'upload.quote')\n\n  const onDelete = (id) => {\n    Swal.fire({\n      title: '¿Está seguro?',\n      text: 'No podrás revertir esto.',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, eliminar.',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(\n          deleteQuote(id, (dataRes) => {\n            if (dataRes.success) {\n              dispatch(\n                setToast(\n                  AppToast({\n                    msg: 'Solicitud eliminada correctamente.',\n                    title: 'Solicitudes de compra',\n                    type: 'success',\n                  }),\n                ),\n              )\n              dispatch(deleteFilesByQuote(id))\n            } else {\n              dispatch(\n                setToast(\n                  AppToast({\n                    msg: 'Ha ocurrido un error.',\n                    title: 'Solicitudes de compra',\n                    type: 'error',\n                  }),\n                ),\n              )\n            }\n          }),\n        )\n        Swal.fire({\n          title: 'Eliminado!',\n          text: 'La solicitud ha sido eliminada.',\n          icon: 'success',\n        })\n      }\n    })\n  }\n\n  return (\n    <>\n      <CTable striped responsive>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Folio</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Solicitante</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Titulo</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Fecha de solicitud</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Giro</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Unidad</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Status</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\" className=\"text-center\">\n              Opciones\n            </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          {data?.map((quote) => (\n            <CTableRow key={quote.id}>\n              <CTableHeaderCell scope=\"row\">{quote.id}</CTableHeaderCell>\n              <CTableDataCell>{quote.petitioner.name}</CTableDataCell>\n              <CTableDataCell>{quote.title}</CTableDataCell>\n              <CTableDataCell>{formatTimezoneToDate(quote.created_at)}</CTableDataCell>\n              <CTableDataCell>{quote.line}</CTableDataCell>\n              <CTableDataCell>{quote.unit}</CTableDataCell>\n              <CTableDataCell>\n                <CBadge style={{ backgroundColor: statusQuoteColors[quote.status] }}>\n                  {statusQuote(quote.status, hasUploadQuotePermission)}\n                </CBadge>\n              </CTableDataCell>\n              <CTableDataCell className=\"text-center overflow-visible\">\n                <CDropdown variant=\"dropdown\">\n                  <CDropdownToggle href=\"#\" color=\"light\">\n                    <CIcon icon={cilOptions} title=\"Opciones\" size=\"lg\" />\n                  </CDropdownToggle>\n                  <CDropdownMenu className=\"position-fixed\">\n                    {hasShowPermission && (\n                      <CDropdownItem\n                        style={{ cursor: 'pointer' }}\n                        onClick={() => {\n                          setQuoteData(quote)\n                          setViewModalMode(true)\n                          setVisible(!visible)\n                        }}\n                      >\n                        Ver solicitud\n                      </CDropdownItem>\n                    )}\n                    {hasEditPermission &&\n                      quote.status !== 'approved' &&\n                      quote.status !== 'inprogress' &&\n                      quote.status !== 'ok' &&\n                      quote.status !== 'authorized' &&\n                      quote.status !== 'sentPay' &&\n                      quote.status !== 'paid' && (\n                        <CDropdownItem\n                          style={{ cursor: 'pointer' }}\n                          onClick={() => {\n                            setQuoteData(quote)\n                            setVisible(!visible)\n                          }}\n                        >\n                          Editar\n                        </CDropdownItem>\n                      )}\n                    {hasDeletePermission &&\n                      quote.status !== 'approved' &&\n                      quote.status !== 'inprogress' &&\n                      quote.status !== 'ok' &&\n                      quote.status !== 'authorized' &&\n                      quote.status !== 'sentPay' &&\n                      quote.status !== 'paid' && (\n                        <CDropdownItem\n                          style={{ cursor: 'pointer' }}\n                          onClick={() => onDelete(quote.id)}\n                        >\n                          Eliminar\n                        </CDropdownItem>\n                      )}\n                    <CDropdownItem\n                      style={{ cursor: 'pointer' }}\n                      onClick={() => {\n                        setQuoteData(quote)\n                        setVisibleObs(!visibleObs)\n                      }}\n                    >\n                      Ver observaciones\n                    </CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n              </CTableDataCell>\n            </CTableRow>\n          ))}\n        </CTableBody>\n      </CTable>\n      {visible && (\n        <QuoteModalForm\n          visible={visible}\n          onClose={() => {\n            setVisible(false)\n            setViewModalMode(false)\n          }}\n          quoteData={quoteData}\n          view={viewModalMode}\n        />\n      )}\n      {visibleObs && (\n        <QuoteModalObs\n          quoteID={quoteData?.id}\n          visible={visibleObs}\n          onClose={() => setVisibleObs(false)}\n        />\n      )}\n    </>\n  )\n}\n\nexport default QuoteTable\n","/* eslint-disable react/no-unescaped-entities */\nimport React, { useEffect, useState } from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardFooter,\n  CButton,\n  CForm,\n  CFormLabel,\n  CFormSelect,\n  CFormInput,\n  CSpinner,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilPlus, cilCloudDownload } from '@coreui/icons'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AppPagination } from 'src/components/app'\nimport { useHasPermission } from 'src/utils/functions'\nimport QuoteModalForm from 'src/components/payments/quotes/QuoteModalForm'\nimport QuoteTable from 'src/components/payments/quotes/QuoteTable'\nimport { getQuotes } from 'src/actions/quote'\n\nconst Quotes = () => {\n  const [visible, setVisible] = useState(false),\n    [caseFilter, setCaseFilter] = useState('provider'),\n    [filterValue, setFilterValue] = useState(''),\n    [currentPage, setCurrentPage] = useState(1),\n    dispatch = useDispatch(),\n    {\n      currentPage: currentPageState,\n      last_page,\n      data: quotes,\n    } = useSelector((state) => state.quote.quotes),\n    loading = useSelector((state) => state.quote.loading)\n\n  useEffect(() => {\n    dispatch(getQuotes(currentPage, caseFilter, filterValue))\n  }, [currentPage, dispatch])\n\n  useEffect(() => {\n    if (!currentPageState) {\n      return\n    }\n    setCurrentPage(currentPageState)\n  }, [currentPageState])\n\n  return (\n    <>\n      <CCard>\n        <CCardHeader className=\"d-flex justify-content-between align-items-center\">\n          <h4>Solicitudes de compra</h4>\n          <div className=\"d-flex gap-2\">\n            {useHasPermission('quotes', 'create') && (\n              <CButton\n                color=\"primary\"\n                className=\"text-light fw-semibold align-content-center d-flex\"\n                onClick={() => setVisible(!visible)}\n              >\n                <CIcon icon={cilPlus} size=\"xl\" className=\"me-1\" />\n                Nuevo\n              </CButton>\n            )}\n            <CButton color=\"info\" className=\"text-light align-content-center d-flex\">\n              <CIcon icon={cilCloudDownload} size=\"xl\" />\n            </CButton>\n          </div>\n        </CCardHeader>\n        <CCardBody>\n          <CForm>\n            <CFormLabel>Filtros de busqueda</CFormLabel>\n            <div className=\"mb-3 d-flex\">\n              <div className=\"flex-fill me-2\">\n                <CFormSelect\n                  value={caseFilter}\n                  onChange={(e) => setCaseFilter(e.target.value)}\n                  aria-label=\"caseFilter\"\n                  options={[\n                    { label: 'Proveedor', value: 'provider' },\n                    { label: 'Solicitante', value: 'petitioner' },\n                    { label: 'Status', value: 'status' },\n                  ]}\n                />\n              </div>\n              <div className=\"flex-fill me-2\">\n                {caseFilter !== 'status' ? (\n                  <CFormInput\n                    value={filterValue}\n                    onChange={(e) => setFilterValue(e.target.value)}\n                    type=\"text\"\n                    id=\"provider\"\n                    placeholder=\"Ingresar texto\"\n                  />\n                ) : (\n                  <CFormSelect\n                    value={filterValue}\n                    onChange={(e) => setFilterValue(e.target.value)}\n                    aria-label=\"caseFilter\"\n                    options={[\n                      { label: 'Pendientes', value: 'pending' },\n                      { label: 'Revisadas', value: 'review' },\n                      { label: 'Aprobadas', value: 'approved' },\n                      { label: 'Rechazadas', value: 'rejects' },\n                    ]}\n                  />\n                )}\n              </div>\n            </div>\n            <CButton\n              type=\"button\"\n              className=\"text-light fw-semibold\"\n              onClick={() => dispatch(getQuotes(currentPage, caseFilter, filterValue))}\n            >\n              Buscar\n            </CButton>\n          </CForm>\n          {loading ? (\n            <div className=\"d-flex justify-content-center\">\n              <CSpinner color=\"primary\" variant=\"grow\" />\n            </div>\n          ) : (\n            <QuoteTable data={quotes} />\n          )}\n        </CCardBody>\n        <CCardFooter>\n          <AppPagination\n            currentPage={currentPage}\n            lastPage={last_page}\n            setCurrentPage={setCurrentPage}\n          />\n        </CCardFooter>\n      </CCard>\n      {visible && <QuoteModalForm visible={visible} onClose={() => setVisible(false)} />}\n    </>\n  )\n}\n\nexport default Quotes\n"],"names":["getDepartments","page","filter","value","async","res","axios","get","concat","config","instance","baseURL","headers","Authorization","localStorage","getItem","dispatch","type","GET_DEPARTMENTS","payload","data","err","DEPARTMENT_ERROR","msg","response","statusText","status","addDepartment","cb","post","ADD_DEPARTMENT","success","message","updateDepartment","id","put","UPDATE_DEPARTMENT","deleteDepartment","delete","DELETE_DEPARTMENT","selectDepartments","SELECT_DEPARTMENTS","getProviders","GET_PROVIDERS","filters","PROVIDER_ERROR","addProvider","ADD_PROVIDER","updateProvider","UPDATE_PROVIDER","deleteProvider","DELETE_PROVIDER","exportProviderExcel","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","EXPORT_PROVIDER_EXCEL","selectProviders","SELECT_PROVIDERS","selectAccountsByProvider","SELECT_ACCOUNT_PROVIDERS","formatNumber","toFixed","toString","replace","formatTimezoneToDate","date","DateTime","fromISO","toLocaleString","DATE_SHORT","formatTimezoneToDateTime","DATETIME_SHORT","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","e","target","result","onerror","statusQuote","uploadQuotePermission","arguments","length","undefined","inprogress","approved","authorized","ok","sent","sentPay","paid","rejected","statusQuoteColors","statusPurchaseRequest","pending","statusPurchaseRequestColors","permissions","index","show","create","edit","pay","approve","authorize","modules","useHasPermission","submodule","permission","userPermissions","useSelector","state","auth","hasSubmodule","find","m","p","modelTypes","provider","purchaseRequest","quote","user","_ref","_useSelector","_useSelector$data","visible","onClose","quoteID","useDispatch","setMessage","useState","observations","loadingObservations","useEffect","getQuoteObservations","_jsxs","CModal","keyboard","backdrop","children","_jsx","CModalHeader","CModalTitle","CModalBody","className","CSpinner","color","variant","_Fragment","CTable","striped","responsive","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","map","observation","CTableDataCell","name","created_at","CForm","CFormTextarea","label","rows","onChange","CModalFooter","CButton","onClick","preventDefault","setToast","AppToast","title","user_id","quote_id","addQuoteObservation","quoteObservationRes","error","console","log","_accounts$data","quoteData","view","activeKey","setActiveKey","setQuoteID","setTitle","charge","setCharge","departments","setDepartments","departmentID","setDepartmentID","quoteConceptID","setQuoteConceptID","description","setDescription","imgFiles","setImgFiles","quoteFiles","setQuoteFiles","invoiceFile","setInvoiceFile","descriptionQuote","setDescriptionQuote","numProviders","setNumProviders","recommendedProviders","setRecommendedProviders","recommendedProvidersInput","setRecommendedProvidersInput","suggestedProvider","setSuggestedProvider","line","setLine","unit","setUnit","selectedQuoteID","setSelectedQuoteID","rejectQuotes","setRejectQuotes","approvedAmount","setApprovedAmount","providerID","setProviderID","providerAccountID","setProviderAccountID","quoteProvider","setQuoteProvider","quoteAmount","setQuoteAmount","deliveryDate","setDeliveryDate","paymentWithoutInvoice","setPaymentWithoutInvoice","onePayment","setOnePayment","multiplePayments","setMultiplePayments","setObservation","progress","providers","accounts","hasPayPermission","hasApprovePermission","hasAuthorizeMinor5000Permission","hasAuthorizeMayor5000Permission","hasUploadQuotePermission","inputImgFile","useRef","inputQuoteFile","inputInvoiceFile","charges","quoteConcept","concepts","departmentsDB","department","lines","units","quotes","progressQuoteFile","visibleObs","setVisibleObs","GET_UNIT_LINES","UNIT_ERROR","blacklist","dep","includes","GET_UNITS","getUnitsByLine","GET_QUOTE_CHARGES","QUOTE_CONCEPT_ERROR","getCharges","GET_QUOTE_CONCEPTS","getConceptsByCharge","array","i","push","_quoteData$files$find","quote_concept","department_id","JSON","parse","images","files","selectedQuoteFile","provider_id","provider_account_id","_quoteData$payments","_quoteData$payments$f","filesPR","payments","purchase_request_pending_id","fromQuote","f","tag","fileTags","invoice","clearGeneralInputs","useCallback","onSave","quote_concept_id","stringify","updateQuote","quoteRes","onUploadImgFile","addQuote","petitioner_id","all","uploadFile","finally","getQuotes","current_page","onUploadQuoteFile","alert","amount","uploadQuoteFile","onUploadInvoiceFile","purchaseRequestRes","onAuthorize","Swal","showCancelButton","confirmButtonText","then","isConfirmed","setTimeout","_quoteData$files","current","size","scrollable","some","CProgress","CNav","role","CNavItem","CNavLink","active","component","CTabContent","CTabPane","CFormLabel","CFormInput","placeholder","disabled","CFormSelect","_ref2","_ref3","_ref4","concept","ref","localName","img","accept","text","FileCard","onDelete","viewMode","CFormCheck","checked","l","_ref5","htmlFor","max","min","x","onSelectRecommendedProvider","v","newArr","_ref6","onAddQuoteFiles","quotation","CIcon","icon","cilPlus","quoteFile","_ref7","_ref8","clabe","bank","onPay","sendPay","sendPayRes","input","inputAttributes","autocapitalize","confirmButtonColor","showLoaderOnConfirm","preConfirm","allowOutsideClick","QuoteModalObs","setVisible","setQuoteData","viewModalMode","setViewModalMode","hasDeletePermission","hasEditPermission","hasShowPermission","cancelButtonColor","deleteQuote","dataRes","deleteFilesByQuote","petitioner","CBadge","style","backgroundColor","CDropdown","CDropdownToggle","cilOptions","CDropdownMenu","CDropdownItem","cursor","QuoteModalForm","Quotes","caseFilter","setCaseFilter","filterValue","setFilterValue","currentPage","setCurrentPage","currentPageState","last_page","loading","CCard","CCardHeader","cilCloudDownload","CCardBody","options","QuoteTable","CCardFooter","AppPagination","lastPage"],"sourceRoot":""}