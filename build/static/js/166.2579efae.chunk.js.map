{"version":3,"file":"static/js/166.2579efae.chunk.js","mappings":"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","sources":["actions/bank.js","actions/provider.js","utils/fileTags.js","utils/functions.js","utils/modelTypes.js","components/administration/provider/ProviderModalForm.js","components/administration/provider/ProviderTable.js","views/administration/providers/Providers.js","../node_modules/@coreui/icons/src/free/cil-check-alt.ts","../node_modules/@coreui/icons/src/free/cil-cloud-download.ts"],"sourcesContent":["import axios from 'axios'\nimport { ADD_BANK, GET_BANKS, BANK_ERROR, DELETE_BANK, UPDATE_BANK, SELECT_BANKS } from './types'\nimport config from '../server.config'\n\nexport const getBanks = (page, filter, value) => async (dispatch) => {\n  try {\n    const res = await axios.get(\n      `${config.instance.baseURL}/api/bank?${filter}=${value}&page=${page}`,\n      {\n        headers: {\n          ...config.instance.headers,\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      },\n    )\n    dispatch({\n      type: GET_BANKS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: BANK_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n\nexport const addBank = (data, cb) => async (dispatch) => {\n  try {\n    const res = await axios.post(`${config.instance.baseURL}/api/bank`, data, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: ADD_BANK,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: BANK_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const updateBank = (data, id, cb) => async (dispatch) => {\n  try {\n    const res = await axios.put(`${config.instance.baseURL}/api/bank/${id}`, data, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: UPDATE_BANK,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: BANK_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const deleteBank = (id, cb) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`${config.instance.baseURL}/api/bank/${id}`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: DELETE_BANK,\n      payload: id,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: BANK_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const selectBanks = () => async (dispatch) => {\n  try {\n    const res = await axios.get(`${config.instance.baseURL}/api/select/bank`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: SELECT_BANKS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: BANK_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n","import axios from 'axios'\nimport {\n  ADD_PROVIDER,\n  GET_PROVIDERS,\n  PROVIDER_ERROR,\n  DELETE_PROVIDER,\n  UPDATE_PROVIDER,\n  EXPORT_PROVIDER_EXCEL,\n  SELECT_PROVIDERS,\n} from './types'\nimport config from '../server.config'\n\nexport const getProviders = (page, filter, value) => async (dispatch) => {\n  try {\n    const res = await axios.get(\n      `${config.instance.baseURL}/api/provider?${filter}=${value}&page=${page}`,\n      {\n        headers: {\n          ...config.instance.headers,\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      },\n    )\n    dispatch({\n      type: GET_PROVIDERS,\n      payload: { ...res.data, filters: { filter, value } },\n    })\n  } catch (err) {\n    dispatch({\n      type: PROVIDER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n\nexport const addProvider = (data, cb) => async (dispatch) => {\n  try {\n    const res = await axios.post(`${config.instance.baseURL}/api/provider`, data, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: ADD_PROVIDER,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: PROVIDER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const updateProvider = (data, id, cb) => async (dispatch) => {\n  try {\n    const res = await axios.put(`${config.instance.baseURL}/api/provider/${id}`, data, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: UPDATE_PROVIDER,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: PROVIDER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const deleteProvider = (id, cb) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`${config.instance.baseURL}/api/provider/${id}`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: DELETE_PROVIDER,\n      payload: id,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: PROVIDER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const exportProviderExcel = (filter, value) => async (dispatch) => {\n  try {\n    const res = await axios.get(\n      `${config.instance.baseURL}/api/excel/provider/export?${filter}=${value}`,\n      {\n        headers: {\n          ...config.instance.headers,\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n        responseType: 'blob',\n      },\n    )\n    const url = window.URL.createObjectURL(new Blob([res.data]))\n    const link = document.createElement('a')\n    link.href = url\n\n    link.setAttribute('download', 'Proveedores.xlsx')\n    document.body.appendChild(link)\n    link.click()\n\n    // Limpia el enlace y el objeto URL después de la descarga\n    document.body.removeChild(link)\n    window.URL.revokeObjectURL(url)\n\n    dispatch({\n      type: EXPORT_PROVIDER_EXCEL,\n    })\n  } catch (err) {\n    dispatch({\n      type: PROVIDER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n\nexport const selectProviders = () => async (dispatch) => {\n  try {\n    const res = await axios.get(`${config.instance.baseURL}/api/select/provider`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: SELECT_PROVIDERS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: PROVIDER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n","export const fileTags = {\n  csf: 'CSF', // constancia de situacion fiscal\n}\n","import { DateTime } from 'luxon'\nimport { useSelector } from 'react-redux'\n\nexport const formatNumber = (value) => {\n  let val = (value / 1).toFixed(2)\n  return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n}\n\nexport const formatTimezoneToDate = (date) => {\n  return DateTime.fromISO(date).toLocaleString(DateTime.DATE_SHORT)\n}\n\nexport const formatTimezoneToDateTime = (date) => {\n  return DateTime.fromISO(date).toLocaleString(DateTime.DATETIME_SHORT)\n}\n\nexport const movementTypes = {\n  advance: 'Anticipo',\n  settlement: 'Liquidación',\n  payment: 'Abono a cuenta',\n}\n\nexport const statusPurchaseRequest = {\n  pending: 'Cotización completa',\n  approved: 'Cotización aprobada',\n  paid: 'Cotización pagada',\n  rejected: 'Cotización rechazada',\n}\n\nexport const statusPurchaseRequestColors = {\n  pending: 'warning',\n  approved: 'success',\n  paid: 'info',\n  rejected: 'danger',\n}\n\nexport const permissions = {\n  index: 'Lectura',\n  create: 'Crear',\n  edit: 'Editar',\n  delete: 'Eliminar',\n  reject: 'Rechazar',\n  pay: 'Pagar',\n  authorize: 'Autorizar',\n  modules: 'Asignar modulos',\n  permissions: 'Asignar permisos',\n}\n\nexport const useHasPermission = (submodule, permission) => {\n  const userPermissions = useSelector((state) => state.auth.permissions)\n  const userModules = useSelector((state) => state.auth.modules)\n\n  const hasSubmodule = userModules.find((m) => m.submodule === submodule)\n\n  if (hasSubmodule) {\n    return userPermissions.find(\n      (p) => p.submodule === hasSubmodule.submodule && p.permission === permission,\n    )\n      ? true\n      : false\n  }\n\n  return false\n}\n","export const modelTypes = {\n  provider: 'provider',\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport {\n  CModal,\n  CModalHeader,\n  CModalBody,\n  CModalTitle,\n  CModalFooter,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CButton,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CTabContent,\n  CTabPane,\n  CTable,\n  CTableHead,\n  CTableRow,\n  CTableHeaderCell,\n  CTableBody,\n  CTableDataCell,\n  CFormSelect,\n  CProgress,\n} from '@coreui/react'\nimport { cilPlus, cilTrash, cilCheckAlt } from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addProvider, getProviders, updateProvider } from 'src/actions/provider'\nimport { uploadFile } from 'src/actions/file'\nimport { fileTags } from 'src/utils/fileTags'\nimport { modelTypes } from 'src/utils/modelTypes'\nimport { FileCard, AppToast } from '../../app'\nimport { selectBanks } from 'src/actions/bank'\nimport { setToast } from 'src/actions/toast'\n\nconst ProviderModalForm = ({ visible, onClose, providerData }) => {\n  const [activeKey, setActiveKey] = useState(1),\n    [showInputsAccount, setShowInputsAccount] = useState(false),\n    [providerID, setProviderID] = useState(''),\n    [provider, setProvider] = useState(''),\n    [type, setType] = useState('ext'),\n    [contact, setContact] = useState(''),\n    [rfc, setRfc] = useState(''),\n    [address, setAddress] = useState(''),\n    [phone, setPhone] = useState(''),\n    [email, setEmail] = useState(''),\n    [accountingAccount, setAccountingAccount] = useState(''),\n    [bankAccount, setBankAccount] = useState(''),\n    [bank, setBank] = useState('1'),\n    [clabe, setClabe] = useState(''),\n    [bankAccounts, setBankAccounts] = useState([]),\n    [csfFile, setCsfFile] = useState(null),\n    [files, setFiles] = useState([]),\n    dispatch = useDispatch(),\n    { progress } = useSelector((state) => state.file),\n    { loading, providers, filters } = useSelector((state) => state.provider),\n    { banks } = useSelector((state) => state.bank)\n\n  const onSave = (e) => {\n    e.preventDefault()\n    if (!provider) {\n      alert('Ingrese un nombre')\n      return\n    }\n    if (loading) {\n      return\n    }\n    let data = {\n      name: provider,\n      type,\n      contact,\n      rfc,\n      address,\n      phone,\n      email,\n      accountingAccount,\n      bankAccounts,\n    }\n    dispatch(\n      providerData\n        ? updateProvider(data, providerID, (providerRes) => {\n            if (providerRes.success) {\n              dispatch(\n                setToast(\n                  AppToast({\n                    msg: 'Proveedor actualizado correctamente.',\n                    title: 'Proveedores',\n                    type: 'success',\n                  }),\n                ),\n              )\n              onUploadFile(providerRes.data)\n            } else {\n              dispatch(\n                setToast(\n                  AppToast({ msg: 'Ha ocurrido un error.', title: 'Proveedores', type: 'error' }),\n                ),\n              )\n            }\n          })\n        : addProvider(data, (providerRes) => {\n            if (providerRes.success) {\n              dispatch(\n                setToast(\n                  AppToast({\n                    msg: 'Proveedor agregado correctamente.',\n                    title: 'Proveedores',\n                    type: 'success',\n                  }),\n                ),\n              )\n              onUploadFile(providerRes.data)\n            } else {\n              dispatch(\n                setToast(\n                  AppToast({ msg: 'Ha ocurrido un error.', title: 'Proveedores', type: 'error' }),\n                ),\n              )\n            }\n          }),\n    )\n  }\n\n  const onUploadFile = (providerRes) => {\n    if (csfFile) {\n      dispatch(\n        uploadFile(csfFile, fileTags.csf, providerRes.id, modelTypes.provider, () => {\n          dispatch(getProviders(providers.current_page, filters.filter, filters.value))\n        }),\n      )\n    } else {\n      onClose()\n      cleanInputs()\n    }\n  }\n\n  const onAddAccount = () => {\n    setBankAccounts(\n      bankAccounts.concat({\n        bankAccount,\n        bank_id: parseInt(bank),\n        clabe,\n      }),\n    )\n    setShowInputsAccount(false)\n    setBankAccount('')\n    setClabe('')\n  }\n\n  const onRemoveAccount = (index) => {\n    setBankAccounts(bankAccounts.filter((v, i) => i !== index))\n  }\n\n  const onSetPrimaryAccount = (index) => {\n    setBankAccounts(\n      bankAccounts.map((b, i) => {\n        if (i === index) {\n          b.primary = true\n        } else {\n          b.primary = false\n        }\n        return b\n      }),\n    )\n  }\n\n  const cleanInputs = useCallback(() => {\n    setProviderID('')\n    setProvider('')\n    setType('ext')\n    setContact('')\n    setRfc('')\n    setAddress('')\n    setPhone('')\n    setEmail('')\n    setAccountingAccount('')\n    setCsfFile(null)\n    setActiveKey(1)\n  }, [])\n\n  useEffect(() => {\n    if (!providerData) {\n      return\n    }\n    setProviderID(providerData.id)\n    setProvider(providerData.name)\n    setType(providerData.type)\n    setContact(providerData.contact ?? '')\n    setRfc(providerData.rfc ?? '')\n    setAddress(providerData.address ?? '')\n    setPhone(providerData.phone ?? '')\n    setEmail(providerData.email ?? '')\n    setAccountingAccount(providerData.accountingAccount ?? '')\n    setFiles(providerData.files)\n    setBankAccounts(providerData.accounts)\n  }, [providerData])\n\n  useEffect(() => {\n    if (progress === 100) {\n      setTimeout(() => {\n        onClose()\n        cleanInputs()\n      }, 3000)\n    }\n  }, [progress, onClose, cleanInputs])\n\n  useEffect(() => {\n    dispatch(selectBanks())\n  }, [dispatch])\n\n  return (\n    <CModal visible={visible} onClose={onClose} aria-labelledby=\"ModalForm\" size=\"lg\">\n      <CModalHeader onClose={onClose}>\n        <CModalTitle id=\"ModalForm\">\n          {providerData ? `Editar ${providerData.name}` : 'Agregar nuevo'}\n        </CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        {csfFile && (\n          <CProgress value={progress} className=\"mb-2\">\n            {progress}%\n          </CProgress>\n        )}\n        <CNav variant=\"tabs\" role=\"tablist\" className=\"mt-1\">\n          <CNavItem role=\"presentation\">\n            <CNavLink\n              active={activeKey === 1}\n              component=\"button\"\n              role=\"tab\"\n              aria-controls=\"data-tab-pane\"\n              aria-selected={activeKey === 1}\n              onClick={() => setActiveKey(1)}\n            >\n              Datos\n            </CNavLink>\n          </CNavItem>\n          <CNavItem role=\"presentation\">\n            <CNavLink\n              active={activeKey === 2}\n              component=\"button\"\n              role=\"tab\"\n              aria-controls=\"account-tab-pane\"\n              aria-selected={activeKey === 2}\n              onClick={() => setActiveKey(2)}\n            >\n              Cuentas\n            </CNavLink>\n          </CNavItem>\n          <CNavItem role=\"presentation\">\n            <CNavLink\n              active={activeKey === 3}\n              component=\"button\"\n              role=\"tab\"\n              aria-controls=\"account-tab-pane\"\n              aria-selected={activeKey === 3}\n              onClick={() => setActiveKey(3)}\n            >\n              Archivos\n            </CNavLink>\n          </CNavItem>\n        </CNav>\n        <CTabContent>\n          {/* provider data */}\n          <CTabPane role=\"tabpanel\" aria-labelledby=\"data-tab-pane\" visible={activeKey === 1}>\n            <CForm className=\"mt-3\">\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"provider\">Proveedor</CFormLabel>\n                <CFormInput\n                  type=\"text\"\n                  id=\"provider\"\n                  placeholder=\"nombre\"\n                  onChange={(e) => setProvider(e.target.value)}\n                  value={provider}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <CFormLabel>Tipo</CFormLabel>\n                <CFormSelect\n                  aria-label=\"type\"\n                  options={[\n                    { label: 'Interno', value: 'int' },\n                    { label: 'Externo', value: 'ext' },\n                  ]}\n                  onChange={(e) => setType(e.target.value)}\n                  value={type}\n                />\n              </div>\n              <div className=\"mb-3 d-flex\">\n                <div className=\"flex-fill me-2\">\n                  <CFormLabel htmlFor=\"contact\">Contacto</CFormLabel>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contact\"\n                    placeholder=\"contacto\"\n                    onChange={(e) => setContact(e.target.value)}\n                    value={contact}\n                  />\n                </div>\n                <div className=\"flex-fill\">\n                  <CFormLabel htmlFor=\"rfc\">RFC</CFormLabel>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"rfc\"\n                    placeholder=\"RFC\"\n                    onChange={(e) => setRfc(e.target.value)}\n                    value={rfc}\n                  />\n                </div>\n              </div>\n\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"address\">Dirección</CFormLabel>\n                <CFormInput\n                  type=\"text\"\n                  id=\"address\"\n                  placeholder=\"dirección\"\n                  onChange={(e) => setAddress(e.target.value)}\n                  value={address}\n                />\n              </div>\n\n              <div className=\"mb-3 d-flex\">\n                <div className=\"flex-fill me-2\">\n                  <CFormLabel htmlFor=\"phone\">Teléfono</CFormLabel>\n                  <CFormInput\n                    type=\"number\"\n                    id=\"phone\"\n                    placeholder=\"teléfono\"\n                    onChange={(e) => setPhone(e.target.value)}\n                    value={phone}\n                  />\n                </div>\n                <div className=\"flex-fill\">\n                  <CFormLabel htmlFor=\"email\">Correo electrónico</CFormLabel>\n                  <CFormInput\n                    type=\"email\"\n                    id=\"email\"\n                    placeholder=\"correo electrónico\"\n                    onChange={(e) => setEmail(e.target.value)}\n                    value={email}\n                  />\n                </div>\n              </div>\n            </CForm>\n          </CTabPane>\n          {/* bank accounts provider */}\n          <CTabPane role=\"tabpanel\" aria-labelledby=\"account-tab-pane\" visible={activeKey === 2}>\n            <CForm className=\"mt-3\">\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"accountingAccount\">Cuenta contable</CFormLabel>\n                <CFormInput\n                  type=\"text\"\n                  id=\"accountingAccount\"\n                  placeholder=\"cuenta contable\"\n                  onChange={(e) => setAccountingAccount(e.target.value)}\n                  value={accountingAccount}\n                />\n              </div>\n              <div className=\"d-flex gap-2 align-items-center\">\n                <h5>Cuentas bancarias</h5>\n                {!showInputsAccount && (\n                  <CButton\n                    type=\"button\"\n                    size=\"sm\"\n                    shape=\"rounded-3\"\n                    className=\"text-light fw-semibold\"\n                    title=\"Agregar\"\n                    onClick={() => setShowInputsAccount(true)}\n                  >\n                    <CIcon icon={cilPlus} size=\"custom\" />\n                  </CButton>\n                )}\n              </div>\n              <hr />\n              {showInputsAccount && (\n                <div className=\"mb-3 d-flex\">\n                  <div className=\"flex-fill \">\n                    <CFormInput\n                      type=\"text\"\n                      placeholder=\"Cuenta bancaria\"\n                      value={bankAccount}\n                      onChange={(e) => setBankAccount(e.target.value)}\n                    />\n                  </div>\n                  <div className=\"flex-fill ms-2 me-2\">\n                    <CFormSelect\n                      aria-label=\"caseFilter\"\n                      value={bank}\n                      onChange={(e) => setBank(e.target.value)}\n                    >\n                      {banks.data.map((b) => (\n                        <option key={b.id} value={b.id}>\n                          {b.name}\n                        </option>\n                      ))}\n                    </CFormSelect>\n                  </div>\n                  <div className=\"flex-fill\">\n                    <CFormInput\n                      type=\"text\"\n                      placeholder=\"CLABE\"\n                      value={clabe}\n                      onChange={(e) => setClabe(e.target.value)}\n                    />\n                  </div>\n                  <CButton\n                    className=\"ms-2 text-light\"\n                    shape=\"rounded-3\"\n                    type=\"button\"\n                    size=\"sm\"\n                    title=\"Añadir\"\n                    onClick={onAddAccount}\n                  >\n                    <CIcon icon={cilCheckAlt} size=\"custom\" />\n                  </CButton>\n                </div>\n              )}\n              <CTable striped responsive>\n                <CTableHead>\n                  <CTableRow>\n                    <CTableHeaderCell scope=\"col\">Cuenta bancaria</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Banco</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\" className=\"text-center\">\n                      CLABE Interbancaria\n                    </CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\" className=\"text-center\">\n                      Principal\n                    </CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Opciones</CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {bankAccounts.map((account, index) => (\n                    <CTableRow key={account.clabe}>\n                      <CTableDataCell>{account.bankAccount}</CTableDataCell>\n                      <CTableDataCell>\n                        {banks.data.find((b) => b.id === account.bank_id).name}\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-center\">{account.clabe}</CTableDataCell>\n                      <CTableDataCell>\n                        {account.primary ? <CIcon icon={cilCheckAlt} size=\"custom\" /> : null}\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <CButton\n                          color=\"success\"\n                          variant=\"outline\"\n                          title=\"Asignar principal\"\n                          className=\"me-2\"\n                          onClick={() => onSetPrimaryAccount(index)}\n                        >\n                          <CIcon icon={cilCheckAlt} size=\"sm\" />\n                        </CButton>\n                        <CButton\n                          color=\"danger\"\n                          variant=\"outline\"\n                          title=\"Eliminar\"\n                          onClick={() => onRemoveAccount(index)}\n                        >\n                          <CIcon icon={cilTrash} size=\"sm\" />\n                        </CButton>\n                      </CTableDataCell>\n                    </CTableRow>\n                  ))}\n                </CTableBody>\n              </CTable>\n            </CForm>\n          </CTabPane>\n          {/* files provider */}\n          <CTabPane role=\"tabpanel\" aria-labelledby=\"data-tab-pane\" visible={activeKey === 3}>\n            <CForm className=\"mt-3\">\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"csfFile\">Constancia de situación fiscal</CFormLabel>\n                {files.length <= 0 ? (\n                  <CFormInput\n                    type=\"file\"\n                    id=\"csfFile\"\n                    placeholder=\"nombre\"\n                    onChange={(e) => setCsfFile(e.target.files[0])}\n                  />\n                ) : (\n                  <>\n                    {files.map((file) => {\n                      if (file.tag !== fileTags.csf) return null\n                      return (\n                        <FileCard\n                          file={file}\n                          key={file.tag}\n                          onDelete={(id) => setFiles(files.filter((f) => f.id !== id))}\n                        />\n                      )\n                    })}\n                  </>\n                )}\n              </div>\n            </CForm>\n          </CTabPane>\n        </CTabContent>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"secondary\" onClick={onClose}>\n          Cerrar\n        </CButton>\n        <CButton color=\"primary\" className=\"text-light fw-semibold\" onClick={onSave}>\n          Guardar\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default ProviderModalForm\n","import React, { useState } from 'react'\nimport {\n  CTable,\n  CTableBody,\n  CTableHead,\n  CTableRow,\n  CTableHeaderCell,\n  CTableDataCell,\n  CDropdown,\n  CDropdownToggle,\n  CDropdownMenu,\n  CDropdownItem,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilOptions } from '@coreui/icons'\nimport { useDispatch } from 'react-redux'\nimport Swal from 'sweetalert2'\nimport { deleteProvider } from 'src/actions/provider'\nimport ProviderModalForm from './ProviderModalForm'\nimport { fileTags } from 'src/utils/fileTags'\nimport { deleteFilesByModel, downloadFile } from 'src/actions/file'\nimport { modelTypes } from 'src/utils/modelTypes'\nimport { setToast } from 'src/actions/toast'\nimport { AppToast } from 'src/components/app'\nimport { useHasPermission } from 'src/utils/functions'\n\nconst ProviderTable = ({ data }) => {\n  const [visible, setVisible] = useState(false),\n    [providerData, setProviderData] = useState(null),\n    dispatch = useDispatch(),\n    hasDeletePermission = useHasPermission('providers', 'delete'),\n    hasEditPermission = useHasPermission('providers', 'edit')\n\n  const onDelete = (id) => {\n    Swal.fire({\n      title: '¿Está seguro?',\n      text: 'No podrás revertir esto.',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, eliminar.',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(\n          deleteProvider(id, (dataRes) => {\n            if (dataRes.success) {\n              dispatch(\n                setToast(\n                  AppToast({\n                    msg: 'Proveedor eliminado correctamente.',\n                    title: 'Proveedores',\n                    type: 'success',\n                  }),\n                ),\n              )\n              dispatch(deleteFilesByModel(id, modelTypes.provider))\n            } else {\n              dispatch(\n                setToast(\n                  AppToast({ msg: 'Ha ocurrido un error.', title: 'Proveedores', type: 'error' }),\n                ),\n              )\n            }\n          }),\n        )\n        Swal.fire({\n          title: 'Eliminado!',\n          text: 'El proveedor ha sido eliminado.',\n          icon: 'success',\n        })\n      }\n    })\n  }\n\n  const onDownload = (files) => {\n    if (!files || files.length <= 0) {\n      Swal.fire({\n        title: 'CSF',\n        text: 'No existe cedula cargada a este proveedor',\n        icon: 'info',\n      })\n      return\n    }\n    const idCsfFile = files.find((file) => file.tag === fileTags.csf).id\n    dispatch(downloadFile(idCsfFile))\n  }\n\n  return (\n    <>\n      <CTable striped responsive>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">#</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Proveedor</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Contacto</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">RFC</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Dirección</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Teléfono</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Correo electrónico</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\" className=\"text-center\">\n              Opciones\n            </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          {data?.map((provider) => (\n            <CTableRow key={provider.id}>\n              <CTableHeaderCell scope=\"row\">{provider.id}</CTableHeaderCell>\n              <CTableDataCell>{provider.name}</CTableDataCell>\n              <CTableDataCell>{provider.contact}</CTableDataCell>\n              <CTableDataCell>{provider.rfc}</CTableDataCell>\n              <CTableDataCell>{provider.address}</CTableDataCell>\n              <CTableDataCell>{provider.phone}</CTableDataCell>\n              <CTableDataCell>{provider.email}</CTableDataCell>\n              <CTableDataCell className=\"text-center overflow-visible\">\n                <CDropdown variant=\"dropdown\">\n                  <CDropdownToggle href=\"#\" color=\"light\">\n                    <CIcon icon={cilOptions} title=\"Opciones\" size=\"lg\" />\n                  </CDropdownToggle>\n                  <CDropdownMenu className=\"position-fixed\">\n                    {hasEditPermission && (\n                      <CDropdownItem\n                        style={{ cursor: 'pointer' }}\n                        onClick={() => {\n                          setVisible(!visible)\n                          setProviderData(provider)\n                        }}\n                      >\n                        Editar\n                      </CDropdownItem>\n                    )}\n                    {hasDeletePermission && (\n                      <CDropdownItem\n                        style={{ cursor: 'pointer' }}\n                        onClick={() => onDelete(provider.id)}\n                      >\n                        Eliminar\n                      </CDropdownItem>\n                    )}\n                    <CDropdownItem\n                      style={{ cursor: 'pointer' }}\n                      onClick={() => onDownload(provider.files)}\n                    >\n                      Descargar CSF\n                    </CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n              </CTableDataCell>\n            </CTableRow>\n          ))}\n        </CTableBody>\n      </CTable>\n      <ProviderModalForm\n        visible={visible}\n        onClose={() => setVisible(false)}\n        providerData={providerData}\n      />\n    </>\n  )\n}\n\nexport default ProviderTable\n","/* eslint-disable react/no-unescaped-entities */\nimport React, { useEffect, useState } from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardFooter,\n  CButton,\n  CForm,\n  CFormLabel,\n  CFormSelect,\n  CFormInput,\n  CSpinner,\n} from '@coreui/react'\nimport ProviderModalForm from 'src/components/administration/provider/ProviderModalForm'\nimport ProviderTable from 'src/components/administration/provider/ProviderTable'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { exportProviderExcel, getProviders } from 'src/actions/provider'\nimport CIcon from '@coreui/icons-react'\nimport { cilPlus, cilCloudDownload } from '@coreui/icons'\nimport { AppPagination } from 'src/components/app'\nimport { useHasPermission } from 'src/utils/functions'\n\nconst Providers = () => {\n  const [visible, setVisible] = useState(false),\n    dispatch = useDispatch(),\n    [caseFilter, setCaseFilter] = useState('name'),\n    [filterValue, setFilterValue] = useState(''),\n    providers = useSelector((state) => state.provider.providers.data),\n    [currentPage, setCurrentPage] = useState(1),\n    currentPageState = useSelector((state) => state.provider.providers.current_page),\n    lastPage = useSelector((state) => state.provider.providers.last_page),\n    total = useSelector((state) => state.provider.providers.total),\n    loading = useSelector((state) => state.provider.loading)\n\n  useEffect(() => {\n    dispatch(getProviders(currentPage, caseFilter, filterValue))\n  }, [dispatch, currentPage])\n\n  useEffect(() => {\n    if (!currentPageState) {\n      return\n    }\n    setCurrentPage(currentPageState)\n  }, [currentPageState])\n\n  return (\n    <>\n      <CCard>\n        <CCardHeader className=\"d-flex justify-content-between align-items-center\">\n          <h4>Listado de Proveedores</h4>\n          <div className=\"d-flex gap-2\">\n            {useHasPermission('providers', 'create') && (\n              <CButton\n                color=\"primary\"\n                className=\"text-light fw-semibold align-content-center d-flex\"\n                onClick={() => setVisible(!visible)}\n              >\n                <CIcon icon={cilPlus} size=\"xl\" className=\"me-1\" />\n                Nuevo\n              </CButton>\n            )}\n            <CButton\n              color=\"info\"\n              className=\"text-light align-content-center d-flex\"\n              onClick={() => dispatch(exportProviderExcel(caseFilter, filterValue))}\n            >\n              <CIcon icon={cilCloudDownload} size=\"xl\" />\n            </CButton>\n          </div>\n        </CCardHeader>\n        <CCardBody>\n          <CForm>\n            <CFormLabel>Filtros de busqueda</CFormLabel>\n            <div className=\"mb-3 d-flex\">\n              <div className=\"flex-fill me-2\">\n                <CFormSelect\n                  value={caseFilter}\n                  onChange={(e) => setCaseFilter(e.target.value)}\n                  aria-label=\"caseFilter\"\n                  options={[\n                    { label: 'Proveedor', value: 'name' },\n                    { label: 'Contacto', value: 'contact' },\n                    { label: 'RFC', value: 'rfc' },\n                  ]}\n                />\n              </div>\n              <div className=\"flex-fill me-2\">\n                <CFormInput\n                  value={filterValue}\n                  onChange={(e) => setFilterValue(e.target.value)}\n                  type=\"text\"\n                  id=\"provider\"\n                  placeholder=\"Ingresar texto\"\n                />\n              </div>\n            </div>\n            <CButton\n              type=\"button\"\n              className=\"text-light fw-semibold\"\n              onClick={() => dispatch(getProviders(currentPage, caseFilter, filterValue))}\n            >\n              Buscar\n            </CButton>\n          </CForm>\n          {loading ? (\n            <div className=\"d-flex justify-content-center\">\n              <CSpinner color=\"primary\" variant=\"grow\" />\n            </div>\n          ) : (\n            <ProviderTable data={providers} />\n          )}\n        </CCardBody>\n        <CCardFooter>\n          <AppPagination\n            currentPage={currentPage}\n            lastPage={lastPage}\n            setCurrentPage={setCurrentPage}\n          />\n        </CCardFooter>\n      </CCard>\n      <ProviderModalForm visible={visible} onClose={() => setVisible(false)} />\n    </>\n  )\n}\n\nexport default Providers\n","export var cilCheckAlt = [\"512 512\", \"<polygon fill='var(--ci-primary-color, currentColor)' points='200.359 382.269 61.057 251.673 82.943 228.327 199.641 337.731 428.686 108.687 451.314 131.313 200.359 382.269' class='ci-primary'/>\"];\n","export var cilCloudDownload = [\"512 512\", \"<polygon fill='var(--ci-primary-color, currentColor)' points='272 434.744 272 209.176 240 209.176 240 434.744 188.118 382.862 165.49 405.489 256 496 346.51 405.489 323.882 382.862 272 434.744' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M400,161.176c0-79.4-64.6-144-144-144s-144,64.6-144,144a96,96,0,0,0,0,192h80v-32H112a64,64,0,0,1,0-128h32v-32a112,112,0,0,1,224,0v32h32a64,64,0,0,1,0,128H320v32h80a96,96,0,0,0,0-192Z' class='ci-primary'/>\"];\n"],"names":["getBanks","page","filter","value","async","res","axios","get","concat","config","instance","baseURL","headers","Authorization","localStorage","getItem","dispatch","type","GET_BANKS","payload","data","err","BANK_ERROR","msg","response","statusText","status","addBank","cb","post","ADD_BANK","success","message","updateBank","id","put","UPDATE_BANK","deleteBank","delete","DELETE_BANK","selectBanks","SELECT_BANKS","getProviders","GET_PROVIDERS","filters","PROVIDER_ERROR","addProvider","ADD_PROVIDER","updateProvider","UPDATE_PROVIDER","deleteProvider","DELETE_PROVIDER","exportProviderExcel","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","EXPORT_PROVIDER_EXCEL","selectProviders","SELECT_PROVIDERS","fileTags","csf","formatNumber","toFixed","toString","replace","formatTimezoneToDate","date","DateTime","fromISO","toLocaleString","DATE_SHORT","formatTimezoneToDateTime","DATETIME_SHORT","movementTypes","advance","settlement","payment","statusPurchaseRequest","pending","approved","paid","rejected","statusPurchaseRequestColors","permissions","index","create","edit","reject","pay","authorize","modules","useHasPermission","submodule","permission","userPermissions","useSelector","state","auth","hasSubmodule","find","m","p","modelTypes","provider","_ref","visible","onClose","providerData","activeKey","setActiveKey","useState","showInputsAccount","setShowInputsAccount","providerID","setProviderID","setProvider","setType","contact","setContact","rfc","setRfc","address","setAddress","phone","setPhone","email","setEmail","accountingAccount","setAccountingAccount","bankAccount","setBankAccount","bank","setBank","clabe","setClabe","bankAccounts","setBankAccounts","csfFile","setCsfFile","files","setFiles","useDispatch","progress","file","loading","providers","banks","onUploadFile","providerRes","uploadFile","current_page","cleanInputs","useCallback","useEffect","_providerData$contact","_providerData$rfc","_providerData$address","_providerData$phone","_providerData$email","_providerData$account","name","accounts","setTimeout","_jsxs","CModal","size","children","_jsx","CModalHeader","CModalTitle","CModalBody","CProgress","className","CNav","variant","role","CNavItem","CNavLink","active","component","onClick","CTabContent","CTabPane","CForm","CFormLabel","htmlFor","CFormInput","placeholder","onChange","e","target","CFormSelect","options","label","CButton","shape","title","CIcon","icon","cilPlus","map","b","onAddAccount","bank_id","parseInt","cilCheckAlt","CTable","striped","responsive","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","account","CTableDataCell","primary","color","i","onSetPrimaryAccount","v","onRemoveAccount","cilTrash","length","_Fragment","tag","FileCard","onDelete","f","CModalFooter","preventDefault","alert","setToast","AppToast","setVisible","setProviderData","hasDeletePermission","hasEditPermission","CDropdown","CDropdownToggle","cilOptions","CDropdownMenu","CDropdownItem","style","cursor","Swal","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","dataRes","deleteFilesByModel","idCsfFile","downloadFile","onDownload","ProviderModalForm","Providers","caseFilter","setCaseFilter","filterValue","setFilterValue","currentPage","setCurrentPage","currentPageState","lastPage","last_page","total","CCard","CCardHeader","cilCloudDownload","CCardBody","CSpinner","ProviderTable","CCardFooter","AppPagination"],"sourceRoot":""}