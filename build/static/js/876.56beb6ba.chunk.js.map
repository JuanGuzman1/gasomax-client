{"version":3,"file":"static/js/876.56beb6ba.chunk.js","mappings":"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","sources":["utils/functions.js","actions/pendingPayments.js","components/payments/pendingPayments/PendingPaymentsModalBalance.js","components/payments/pendingPayments/PendingPaymentsTable.js","views/payments/pendingPayments/PendingPayments.js","../node_modules/@coreui/icons/src/free/cil-cloud-download.ts"],"sourcesContent":["import { DateTime } from 'luxon'\nimport { useSelector } from 'react-redux'\n\nexport const formatNumber = (value) => {\n  let val = (value / 1).toFixed(2)\n  return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n}\n\nexport const formatTimezoneToDate = (date) => {\n  return DateTime.fromISO(date).toLocaleString(DateTime.DATE_SHORT)\n}\n\nexport const formatTimezoneToDateTime = (date) => {\n  return DateTime.fromISO(date).toLocaleString(DateTime.DATETIME_SHORT)\n}\n\nexport const movementTypes = {\n  advance: 'Anticipo',\n  settlement: 'Liquidación',\n  payment: 'Abono a cuenta',\n}\n\nexport const statusPurchaseRequest = {\n  pending: 'Cotización completa',\n  approved: 'Cotización aprobada',\n  paid: 'Cotización pagada',\n  rejected: 'Cotización rechazada',\n}\n\nexport const statusPurchaseRequestColors = {\n  pending: 'warning',\n  approved: 'success',\n  paid: 'info',\n  rejected: 'danger',\n}\n\nexport const permissions = {\n  index: 'Lectura',\n  create: 'Crear',\n  edit: 'Editar',\n  delete: 'Eliminar',\n  reject: 'Rechazar',\n  pay: 'Pagar',\n  authorize: 'Autorizar',\n  modules: 'Asignar modulos',\n  permissions: 'Asignar permisos',\n}\n\nexport const useHasPermission = (submodule, permission) => {\n  const userPermissions = useSelector((state) => state.auth.permissions)\n  const userModules = useSelector((state) => state.auth.modules)\n\n  const hasSubmodule = userModules.find((m) => m.submodule === submodule)\n\n  if (hasSubmodule) {\n    return userPermissions.find(\n      (p) => p.submodule === hasSubmodule.submodule && p.permission === permission,\n    )\n      ? true\n      : false\n  }\n\n  return false\n}\n","import axios from 'axios'\nimport { GET_PENDING_PAYMENTS, GET_BALANCE_PAYMENTS, PENDING_PAYMENTS_ERROR } from './types'\nimport config from '../server.config'\n\nexport const getPendingPayments = (page, filter, value) => async (dispatch) => {\n  try {\n    const userId = 1\n    const res = await axios.get(\n      `${config.instance.baseURL}/api/pending/purchaseRequest?user_id=${userId}&${filter}=${value}&page=${page}`,\n      {\n        headers: {\n          ...config.instance.headers,\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      },\n    )\n    dispatch({\n      type: GET_PENDING_PAYMENTS,\n      payload: { ...res.data, filters: { filter, value } },\n    })\n  } catch (err) {\n    dispatch({\n      type: PENDING_PAYMENTS_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n\nexport const getBalancePayments = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(\n      `${config.instance.baseURL}/api/balance/purchaseRequestDetail/${id}`,\n      {\n        headers: {\n          ...config.instance.headers,\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      },\n    )\n    dispatch({\n      type: GET_BALANCE_PAYMENTS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: PENDING_PAYMENTS_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n","import React, { useEffect, useState } from 'react'\nimport {\n  CModal,\n  CModalHeader,\n  CModalBody,\n  CModalTitle,\n  CModalFooter,\n  CForm,\n  CButton,\n  CFormLabel,\n  CFormInput,\n  CTable,\n  CTableHead,\n  CTableRow,\n  CTableHeaderCell,\n  CTableBody,\n  CTableDataCell,\n  CSpinner,\n} from '@coreui/react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setToast } from 'src/actions/toast'\nimport { AppToast } from 'src/components/app'\nimport { formatNumber, formatTimezoneToDateTime } from 'src/utils/functions'\nimport { getBalancePayments } from 'src/actions/pendingPayments'\n\nconst PendingPaymentsModalBalance = ({ visible, onClose, purchaseRequestDetailID, provider }) => {\n  const dispatch = useDispatch(),\n    [totalAmount, setTotalAmount] = useState(0),\n    { balance, loadingBalance } = useSelector((state) => state.pendingPayments)\n\n  useEffect(() => {\n    dispatch(getBalancePayments(purchaseRequestDetailID))\n  }, [dispatch, purchaseRequestDetailID])\n\n  useEffect(() => {\n    if (!balance) {\n      return\n    }\n    setTotalAmount(balance.find((b) => !b.purchase_detail_pending_id)?.totalAmount)\n  }, [balance])\n\n  return (\n    <CModal visible={visible} onClose={onClose} aria-labelledby=\"ModalForm\" size=\"lg\">\n      <CModalHeader onClose={onClose}>\n        <CModalTitle id=\"ModalForm\">Estado de cuenta</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        {loadingBalance ? (\n          <div className=\"d-flex justify-content-center\">\n            <CSpinner color=\"primary\" variant=\"grow\" />\n          </div>\n        ) : (\n          <>\n            <CForm className=\"mt-3\">\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"provider\">Proveedor</CFormLabel>\n                <CFormInput type=\"text\" id=\"provider\" value={provider} disabled />\n              </div>\n              <div className=\"mb-3\">\n                <p>Importe total</p>\n                <h5 id=\"totalAmount\" className=\"fw-bold text-primary\">\n                  ${formatNumber(totalAmount)}\n                </h5>\n                {/* <CFormInput type=\"number\" id=\"totalAmount\" value={totalAmount} disabled /> */}\n              </div>\n            </CForm>\n            <CTable striped responsive>\n              <CTableHead>\n                <CTableRow>\n                  <CTableHeaderCell scope=\"col\">Fecha</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Concepto</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Detalle</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Pago</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Saldo</CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {balance?.map((balance) => (\n                  <CTableRow key={balance.id}>\n                    <CTableDataCell>{formatTimezoneToDateTime(balance.created_at)}</CTableDataCell>\n                    <CTableDataCell>{balance.charge}</CTableDataCell>\n                    <CTableDataCell>{balance.concept}</CTableDataCell>\n                    <CTableDataCell>{balance.observation}</CTableDataCell>\n                    <CTableDataCell>${formatNumber(balance.paymentAmount)}</CTableDataCell>\n                    <CTableDataCell>\n                      {balance.balance <= 0\n                        ? '$' + formatNumber(balance?.totalAmount - balance?.paymentAmount)\n                        : '$' + formatNumber(balance.balance)}\n                    </CTableDataCell>\n                  </CTableRow>\n                ))}\n              </CTableBody>\n            </CTable>\n          </>\n        )}\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"secondary\" onClick={onClose}>\n          Cerrar\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default PendingPaymentsModalBalance\n","import React, { useState } from 'react'\nimport {\n  CTable,\n  CTableBody,\n  CTableHead,\n  CTableRow,\n  CTableHeaderCell,\n  CTableDataCell,\n  CDropdown,\n  CDropdownToggle,\n  CDropdownMenu,\n  CDropdownItem,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilOptions } from '@coreui/icons'\nimport { useDispatch } from 'react-redux'\nimport { formatNumber, formatTimezoneToDate } from 'src/utils/functions'\nimport PendingPaymentsModalBalance from './PendingPaymentsModalBalance'\n\nconst PendingPaymentsTable = ({ data }) => {\n  const [visible, setVisible] = useState(false),\n    [purchaseRequestDetailID, setPurchaseRequestDetailID] = useState(null),\n    [provider, setProvider] = useState(''),\n    dispatch = useDispatch()\n\n  return (\n    <>\n      <CTable striped responsive>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Proveedor</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Solicitante</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Concepto</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Observación</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Fecha solic.</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Saldo</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\" className=\"text-center\">\n              Opciones\n            </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          {data?.map((pr) =>\n            pr.detailsFiltered.map((df) => (\n              <CTableRow key={pr.id}>\n                <CTableDataCell>{pr.provider.name}</CTableDataCell>\n                <CTableDataCell>{pr.petitioner.name}</CTableDataCell>\n                <CTableDataCell>{df.charge}</CTableDataCell>\n                <CTableDataCell>{df.concept}</CTableDataCell>\n                <CTableDataCell>{df.observation}</CTableDataCell>\n                <CTableDataCell>{formatTimezoneToDate(pr.created_at)}</CTableDataCell>\n                <CTableDataCell>${formatNumber(df.balance)}</CTableDataCell>\n                <CTableDataCell className=\"text-center overflow-visible\">\n                  <CDropdown variant=\"dropdown\">\n                    <CDropdownToggle href=\"#\" color=\"light\">\n                      <CIcon icon={cilOptions} title=\"Opciones\" size=\"lg\" />\n                    </CDropdownToggle>\n                    <CDropdownMenu className=\"position-fixed\">\n                      <CDropdownItem\n                        style={{ cursor: 'pointer' }}\n                        onClick={() => {\n                          setProvider(pr.provider.name)\n                          setPurchaseRequestDetailID(df.id)\n                          setVisible(!visible)\n                        }}\n                      >\n                        Ver estado de cuenta\n                      </CDropdownItem>\n                    </CDropdownMenu>\n                  </CDropdown>\n                </CTableDataCell>\n              </CTableRow>\n            )),\n          )}\n        </CTableBody>\n      </CTable>\n      {visible && (\n        <PendingPaymentsModalBalance\n          visible={visible}\n          onClose={() => {\n            setVisible(false)\n            setPurchaseRequestDetailID(null)\n            setProvider('')\n          }}\n          purchaseRequestDetailID={purchaseRequestDetailID}\n          provider={provider}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PendingPaymentsTable\n","/* eslint-disable react/no-unescaped-entities */\nimport React, { useEffect, useState } from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardFooter,\n  CButton,\n  CForm,\n  CFormLabel,\n  CFormSelect,\n  CFormInput,\n  CSpinner,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilCloudDownload } from '@coreui/icons'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getPendingPayments } from 'src/actions/pendingPayments'\nimport { AppPagination } from 'src/components/app'\nimport PendingPaymentsTable from 'src/components/payments/pendingPayments/PendingPaymentsTable'\n\nconst PendingPayments = () => {\n  const [caseFilter, setCaseFilter] = useState('provider'),\n    [filterValue, setFilterValue] = useState(''),\n    [currentPage, setCurrentPage] = useState(1),\n    dispatch = useDispatch(),\n    {\n      currentPage: currentPageState,\n      last_page,\n      data: pendingPayments,\n    } = useSelector((state) => state.pendingPayments.pendingPayments),\n    loading = useSelector((state) => state.pendingPayments.loading)\n\n  useEffect(() => {\n    dispatch(getPendingPayments(currentPage, caseFilter, filterValue))\n  }, [currentPage, dispatch])\n\n  useEffect(() => {\n    if (!currentPageState) {\n      return\n    }\n    setCurrentPage(currentPageState)\n  }, [currentPageState])\n\n  return (\n    <CCard>\n      <CCardHeader className=\"d-flex justify-content-between align-items-center\">\n        <h4>Listado de Pagos Pendientes</h4>\n        <div className=\"d-flex gap-2\">\n          <CButton color=\"info\" className=\"text-light align-content-center d-flex\">\n            <CIcon icon={cilCloudDownload} size=\"xl\" />\n          </CButton>\n        </div>\n      </CCardHeader>\n      <CCardBody>\n        <CForm>\n          <CFormLabel>Filtros de busqueda</CFormLabel>\n          <div className=\"mb-3 d-flex\">\n            <div className=\"flex-fill me-2\">\n              <CFormSelect\n                value={caseFilter}\n                onChange={(e) => setCaseFilter(e.target.value)}\n                aria-label=\"caseFilter\"\n                options={[\n                  { label: 'Proveedor', value: 'provider' },\n                  { label: 'Solicitante', value: 'petitioner' },\n                ]}\n              />\n            </div>\n            <div className=\"flex-fill me-2\">\n              {caseFilter !== 'status' ? (\n                <CFormInput\n                  value={filterValue}\n                  onChange={(e) => setFilterValue(e.target.value)}\n                  type=\"text\"\n                  id=\"provider\"\n                  placeholder=\"Ingresar texto\"\n                />\n              ) : (\n                <CFormSelect\n                  value={filterValue}\n                  onChange={(e) => setFilterValue(e.target.value)}\n                  aria-label=\"caseFilter\"\n                  options={[\n                    { label: 'Pendientes', value: 'pending' },\n                    { label: 'Revisadas', value: 'review' },\n                    { label: 'Aprobadas', value: 'approved' },\n                    { label: 'Rechazadas', value: 'rejects' },\n                  ]}\n                />\n              )}\n            </div>\n          </div>\n          <CButton\n            type=\"button\"\n            className=\"text-light fw-semibold\"\n            onClick={() => dispatch(getPendingPayments(currentPage, caseFilter, filterValue))}\n          >\n            Buscar\n          </CButton>\n        </CForm>\n        {loading ? (\n          <div className=\"d-flex justify-content-center\">\n            <CSpinner color=\"primary\" variant=\"grow\" />\n          </div>\n        ) : (\n          <PendingPaymentsTable data={pendingPayments} />\n        )}\n      </CCardBody>\n      <CCardFooter>\n        <AppPagination\n          currentPage={currentPage}\n          lastPage={last_page}\n          setCurrentPage={setCurrentPage}\n        />\n      </CCardFooter>\n    </CCard>\n  )\n}\n\nexport default PendingPayments\n","export var cilCloudDownload = [\"512 512\", \"<polygon fill='var(--ci-primary-color, currentColor)' points='272 434.744 272 209.176 240 209.176 240 434.744 188.118 382.862 165.49 405.489 256 496 346.51 405.489 323.882 382.862 272 434.744' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M400,161.176c0-79.4-64.6-144-144-144s-144,64.6-144,144a96,96,0,0,0,0,192h80v-32H112a64,64,0,0,1,0-128h32v-32a112,112,0,0,1,224,0v32h32a64,64,0,0,1,0,128H320v32h80a96,96,0,0,0,0-192Z' class='ci-primary'/>\"];\n"],"names":["formatNumber","value","toFixed","toString","replace","formatTimezoneToDate","date","DateTime","fromISO","toLocaleString","DATE_SHORT","formatTimezoneToDateTime","DATETIME_SHORT","movementTypes","advance","settlement","payment","statusPurchaseRequest","pending","approved","paid","rejected","statusPurchaseRequestColors","permissions","index","create","edit","delete","reject","pay","authorize","modules","useHasPermission","submodule","permission","userPermissions","useSelector","state","auth","hasSubmodule","find","m","p","getPendingPayments","page","filter","async","userId","res","axios","get","concat","config","instance","baseURL","headers","Authorization","localStorage","getItem","dispatch","type","GET_PENDING_PAYMENTS","payload","data","filters","err","PENDING_PAYMENTS_ERROR","msg","response","statusText","status","_ref","visible","onClose","purchaseRequestDetailID","provider","useDispatch","totalAmount","setTotalAmount","useState","balance","loadingBalance","pendingPayments","useEffect","id","GET_BALANCE_PAYMENTS","_balance$find","b","purchase_detail_pending_id","_jsxs","CModal","size","children","_jsx","CModalHeader","CModalTitle","CModalBody","className","CSpinner","color","variant","_Fragment","CForm","CFormLabel","htmlFor","CFormInput","disabled","CTable","striped","responsive","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","map","CTableDataCell","created_at","charge","concept","observation","paymentAmount","CModalFooter","CButton","onClick","setVisible","setPurchaseRequestDetailID","setProvider","pr","detailsFiltered","df","name","petitioner","CDropdown","CDropdownToggle","href","CIcon","icon","cilOptions","title","CDropdownMenu","CDropdownItem","style","cursor","PendingPaymentsModalBalance","PendingPayments","caseFilter","setCaseFilter","filterValue","setFilterValue","currentPage","setCurrentPage","currentPageState","last_page","loading","CCard","CCardHeader","cilCloudDownload","CCardBody","CFormSelect","onChange","e","target","options","label","placeholder","PendingPaymentsTable","CCardFooter","AppPagination","lastPage"],"sourceRoot":""}