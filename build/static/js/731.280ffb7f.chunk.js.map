{"version":3,"file":"static/js/731.280ffb7f.chunk.js","mappings":"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","sources":["actions/provider.js","utils/functions.js","utils/modelTypes.js","actions/purchaseRequest.js","../node_modules/@coreui/icons/src/free/cil-minus.ts","components/payments/purchaseRequest/ModalFormPendingPaymentsTable.js","components/payments/purchaseRequest/PurchaseRequestModalForm.js","components/payments/purchaseRequest/PurchaseRequestModalObs.js","components/payments/purchaseRequest/PurchaseRequestTable.js","views/payments/purchaseRequest/PurchaseRequest.js"],"sourcesContent":["import axios from 'axios'\nimport {\n  ADD_PROVIDER,\n  GET_PROVIDERS,\n  PROVIDER_ERROR,\n  DELETE_PROVIDER,\n  UPDATE_PROVIDER,\n  EXPORT_PROVIDER_EXCEL,\n  SELECT_PROVIDERS,\n  SELECT_ACCOUNT_PROVIDERS,\n} from './types'\nimport config from '../server.config'\n\nexport const getProviders = (page, filter, value) => async (dispatch) => {\n  try {\n    const res = await axios.get(\n      `${config.instance.baseURL}/api/provider?${filter}=${value}&page=${page}`,\n      {\n        headers: {\n          ...config.instance.headers,\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      },\n    )\n    dispatch({\n      type: GET_PROVIDERS,\n      payload: { ...res.data, filters: { filter, value } },\n    })\n  } catch (err) {\n    dispatch({\n      type: PROVIDER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n\nexport const addProvider = (data, cb) => async (dispatch) => {\n  try {\n    const res = await axios.post(`${config.instance.baseURL}/api/provider`, data, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: ADD_PROVIDER,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: PROVIDER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const updateProvider = (data, id, cb) => async (dispatch) => {\n  try {\n    const res = await axios.put(`${config.instance.baseURL}/api/provider/${id}`, data, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: UPDATE_PROVIDER,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: PROVIDER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const deleteProvider = (id, cb) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`${config.instance.baseURL}/api/provider/${id}`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: DELETE_PROVIDER,\n      payload: id,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: PROVIDER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const exportProviderExcel = (filter, value) => async (dispatch) => {\n  try {\n    const res = await axios.get(\n      `${config.instance.baseURL}/api/excel/provider/export?${filter}=${value}`,\n      {\n        headers: {\n          ...config.instance.headers,\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n        responseType: 'blob',\n      },\n    )\n    const url = window.URL.createObjectURL(new Blob([res.data]))\n    const link = document.createElement('a')\n    link.href = url\n\n    link.setAttribute('download', 'Proveedores.xlsx')\n    document.body.appendChild(link)\n    link.click()\n\n    // Limpia el enlace y el objeto URL después de la descarga\n    document.body.removeChild(link)\n    window.URL.revokeObjectURL(url)\n\n    dispatch({\n      type: EXPORT_PROVIDER_EXCEL,\n    })\n  } catch (err) {\n    dispatch({\n      type: PROVIDER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n\nexport const selectProviders = () => async (dispatch) => {\n  try {\n    const res = await axios.get(`${config.instance.baseURL}/api/select/provider`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: SELECT_PROVIDERS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: PROVIDER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n\nexport const selectAccountsByProvider = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`${config.instance.baseURL}/api/select/account/provider/${id}`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: SELECT_ACCOUNT_PROVIDERS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: PROVIDER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n","import { DateTime } from 'luxon'\nimport { useSelector } from 'react-redux'\n\nexport const formatNumber = (value) => {\n  let val = (value / 1).toFixed(2)\n  return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n}\n\nexport const formatTimezoneToDate = (date) => {\n  return DateTime.fromISO(date).toLocaleString(DateTime.DATE_SHORT)\n}\n\nexport const formatTimezoneToDateTime = (date) => {\n  return DateTime.fromISO(date).toLocaleString(DateTime.DATETIME_SHORT)\n}\n\nexport const movementTypes = {\n  advance: 'Anticipo',\n  settlement: 'Liquidación',\n  payment: 'Abono a cuenta',\n}\n//////////////////////////// status QUOTE ////////////////////\nexport const statusQuote = (status, uploadQuotePermission = false, petitioner_id) => {\n  let statusQuoteLetter = {\n    inprogress: uploadQuotePermission ? 'Cotizaciónes enviadas' : 'Cotizaciónes disponibles',\n    approved: 'Cotización aprobada',\n    authorized: 'Cotización autorizada',\n    ok: 'Cotización VoBo',\n    sent: uploadQuotePermission ? 'Solicitud nueva' : 'Solicitud enviada',\n    sentPay: 'Enviada a pago',\n    paid: 'Pagado',\n    rejected: 'Cotizaciónes rechazadas',\n  }\n  return statusQuoteLetter[status]\n}\n\nexport const statusQuoteColors = {\n  inprogress: '#00FFFF',\n  approved: '#00FF00',\n  authorized: '#0000FF',\n  ok: '#008000',\n  sent: '#FFA500',\n  sentPay: '#30AFD4',\n  paid: '#800080',\n  rejected: '#FF0000',\n}\n////////////////////// status purchaseRequest (Update payments) //////////////\nexport const statusPurchaseRequest = {\n  pending: 'Pendiente de aprobación',\n  approved: 'Solicitud aprobada',\n  paid: 'Pagado',\n  rejected: 'Solicitud rechazada',\n}\n\nexport const statusPurchaseRequestColors = {\n  pending: '#FFA500',\n  approved: '#00FF00',\n  paid: '#800080',\n  rejected: '#FF0000',\n}\n\nexport const permissions = {\n  index: 'Listar',\n  show: 'Ver',\n  create: 'Crear',\n  edit: 'Editar',\n  delete: 'Eliminar',\n  reject: 'Rechazar',\n  pay: 'Pagar',\n  approve: 'Aprobar',\n  authorize: 'Autorizar',\n  'authorize.minor.1000': 'Autorizar < $1,000',\n  'authorize.mayor.1000': 'Autorizar > $1,000',\n  'authorize.minor.5000': 'Autorizar < $5,000',\n  'authorize.mayor.5000': 'Autorizar > $5,000',\n  modules: 'Asignar modulos',\n  permissions: 'Asignar permisos',\n  'upload.quote': 'Subir cotizaciónes',\n}\n\nexport const useHasPermission = (submodule, permission) => {\n  const userPermissions = useSelector((state) => state.auth.permissions)\n  const userModules = useSelector((state) => state.auth.modules)\n\n  const hasSubmodule = userModules.find((m) => m.submodule === submodule)\n\n  if (hasSubmodule) {\n    return userPermissions.find(\n      (p) => p.submodule === hasSubmodule.submodule && p.permission === permission,\n    )\n      ? true\n      : false\n  }\n\n  return false\n}\n","export const modelTypes = {\n  provider: 'provider',\n  purchaseRequest: 'purchaseRequest',\n  quote: 'quote',\n  user: 'user',\n}\n","import axios from 'axios'\nimport {\n  GET_PURCHASE_REQUESTS,\n  PURCHASE_REQUEST_ERROR,\n  ADD_PURCHASE_REQUEST,\n  UPDATE_PURCHASE_REQUEST,\n  DELETE_PURCHASE_REQUEST,\n  ADD_PURCHASE_REQUEST_OBSERVATION,\n  GET_PURCHASE_REQUEST_OBSERVATIONS,\n  GET_PP_PURCHASE_REQUEST,\n} from './types'\nimport config from '../server.config'\n\nexport const getPurchaseRequests = (page, filter, value) => async (dispatch) => {\n  try {\n    const res = await axios.get(\n      `${config.instance.baseURL}/api/purchaseRequest?${filter}=${value}&page=${page}`,\n      {\n        headers: {\n          ...config.instance.headers,\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      },\n    )\n    dispatch({\n      type: GET_PURCHASE_REQUESTS,\n      payload: { ...res.data, filters: { filter, value } },\n    })\n  } catch (err) {\n    dispatch({\n      type: PURCHASE_REQUEST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n\nexport const addPurchaseRequest = (data, cb) => async (dispatch) => {\n  try {\n    const res = await axios.post(`${config.instance.baseURL}/api/purchaseRequest`, data, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: ADD_PURCHASE_REQUEST,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: PURCHASE_REQUEST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const updatePurchaseRequest = (data, id, cb) => async (dispatch) => {\n  try {\n    const res = await axios.put(`${config.instance.baseURL}/api/purchaseRequest/${id}`, data, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: UPDATE_PURCHASE_REQUEST,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: PURCHASE_REQUEST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const deletePurchaseRequest = (id, cb) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`${config.instance.baseURL}/api/purchaseRequest/${id}`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: DELETE_PURCHASE_REQUEST,\n      payload: id,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: PURCHASE_REQUEST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const getPurchaseRequestObservations = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(\n      `${config.instance.baseURL}/api/purchaseRequestObservation?purchase_request_id=${id}`,\n      {\n        headers: {\n          ...config.instance.headers,\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      },\n    )\n    dispatch({\n      type: GET_PURCHASE_REQUEST_OBSERVATIONS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: PURCHASE_REQUEST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n\nexport const addPurchaseRequestObservation = (data, cb) => async (dispatch) => {\n  try {\n    const res = await axios.post(\n      `${config.instance.baseURL}/api/purchaseRequestObservation`,\n      data,\n      {\n        headers: {\n          ...config.instance.headers,\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      },\n    )\n    dispatch({\n      type: ADD_PURCHASE_REQUEST_OBSERVATION,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: PURCHASE_REQUEST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const getPurchaseRequestPDF = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`${config.instance.baseURL}/api/pdf/purchaseRequest/export/${id}`, {\n      headers: {\n        ...config.instance.headersFormData,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n      responseType: 'blob',\n    })\n    const url = window.URL.createObjectURL(res.data)\n    window.open(url, '_blank')\n  } catch (err) {\n    dispatch({\n      type: PURCHASE_REQUEST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n\nexport const getPendingPayments = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(\n      `${config.instance.baseURL}/api/pending/details/purchaseRequest?user_id=${id}`,\n      {\n        headers: {\n          ...config.instance.headers,\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      },\n    )\n    dispatch({\n      type: GET_PP_PURCHASE_REQUEST,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: PURCHASE_REQUEST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n\nexport const rejectPurchaseRequest = (data, id, cb) => async (dispatch) => {\n  try {\n    const res = await axios.put(\n      `${config.instance.baseURL}/api/reject/purchaseRequest/${id}`,\n      data,\n      {\n        headers: {\n          ...config.instance.headers,\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      },\n    )\n    dispatch({\n      type: UPDATE_PURCHASE_REQUEST,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: PURCHASE_REQUEST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const payPurchaseRequest = (data, id, cb) => async (dispatch) => {\n  try {\n    const res = await axios.put(`${config.instance.baseURL}/api/pay/purchaseRequest/${id}`, data, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: UPDATE_PURCHASE_REQUEST,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: PURCHASE_REQUEST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n","export var cilMinus = [\"512 512\", \"<rect width='368' height='32' x='72' y='240' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/>\"];\n","import React, { useEffect, useState } from 'react'\nimport {\n  CButton,\n  CTable,\n  CTableHead,\n  CTableRow,\n  CTableHeaderCell,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilPlus, cilMinus, cilDollar } from '@coreui/icons'\nimport { formatNumber, movementTypes } from 'src/utils/functions'\nimport { useSelector } from 'react-redux'\n\nconst ModalFormPendingPaymentsTable = ({\n  onAddDetailPending,\n  onRemoveDetailPending,\n  detailPendingID,\n}) => {\n  const { pendingPayments } = useSelector((state) => state.purchaseRequest),\n    [pendingPaymentsFiltered, setPendingPaymentsFiltered] = useState([])\n\n  useEffect(() => {\n    setPendingPaymentsFiltered(pendingPayments)\n  }, [pendingPayments])\n\n  return (\n    <CTable striped responsive>\n      <CTableHead>\n        <CTableRow>\n          <CTableHeaderCell scope=\"col\">Opciones</CTableHeaderCell>\n          <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n          <CTableHeaderCell scope=\"col\">Concepto</CTableHeaderCell>\n          <CTableHeaderCell scope=\"col\">Obs.</CTableHeaderCell>\n          <CTableHeaderCell scope=\"col\">Saldo pendiente</CTableHeaderCell>\n        </CTableRow>\n      </CTableHead>\n      <CTableBody>\n        {pendingPaymentsFiltered.map((detail, i) => (\n          <CTableRow key={detail.id}>\n            <CTableDataCell>\n              {detailPendingID !== detail.id ? (\n                <CButton\n                  color=\"primary\"\n                  variant=\"outline\"\n                  title=\"Agregar\"\n                  onClick={() => onAddDetailPending(detail)}\n                >\n                  <CIcon icon={cilPlus} size=\"sm\" />\n                </CButton>\n              ) : (\n                <CButton\n                  color=\"danger\"\n                  variant=\"outline\"\n                  title=\"Quitar\"\n                  onClick={() => onRemoveDetailPending()}\n                >\n                  <CIcon icon={cilMinus} size=\"sm\" />\n                </CButton>\n              )}\n            </CTableDataCell>\n            <CTableDataCell>{detail.quote.quote_concept.charge}</CTableDataCell>\n            <CTableDataCell>{detail.quote.quote_concept.concept}</CTableDataCell>\n            <CTableDataCell>{detail.title}</CTableDataCell>\n            <CTableDataCell>${formatNumber(detail.balance)}</CTableDataCell>\n          </CTableRow>\n        ))}\n      </CTableBody>\n    </CTable>\n  )\n}\n\nexport default ModalFormPendingPaymentsTable\n","import React, { useState, useEffect, useCallback, useRef } from 'react'\nimport {\n  CModal,\n  CModalHeader,\n  CModalBody,\n  CModalTitle,\n  CModalFooter,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CButton,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CTabContent,\n  CTabPane,\n  CFormCheck,\n  CFormSelect,\n  CProgress,\n} from '@coreui/react'\nimport { cilPlus, cilTrash, cilDollar } from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fileTags } from 'src/utils/fileTags'\nimport { FileCard, AppToast } from '../../app'\nimport Swal from 'sweetalert2'\nimport { formatNumber, useHasPermission } from 'src/utils/functions'\nimport { selectAccountsByProvider, selectProviders } from 'src/actions/provider'\nimport {\n  addPurchaseRequest,\n  approvePurchaseRequest,\n  getPendingPayments,\n  rejectPurchaseRequest,\n  payPurchaseRequest,\n  updatePurchaseRequest,\n  getPurchaseRequests,\n} from 'src/actions/purchaseRequest'\nimport { setToast } from 'src/actions/toast'\nimport ModalFormPendingPaymentsTable from './ModalFormPendingPaymentsTable'\nimport { uploadFile } from 'src/actions/file'\nimport { modelTypes } from 'src/utils/modelTypes'\n\nconst PurchaseRequestModalForm = ({ visible, onClose, purchaseData, view }) => {\n  const [activeKey, setActiveKey] = useState(1),\n    [purchaseRequestID, setPurchaseRequestID] = useState(''),\n    [purchaseRequestPendingID, setPurchaseRequestPendingID] = useState(null),\n    [title, setTitle] = useState(''),\n    [totalAmount, setTotalAmount] = useState(0),\n    [paymentAmount, setPaymentAmount] = useState(0),\n    [imgFiles, setImgFiles] = useState([]),\n    [invoiceFile, setInvoiceFile] = useState(null),\n    [receiptFile, setReceiptFile] = useState(null),\n    [totalPaymentApproved, setTotalPaymentApproved] = useState(false),\n    [totalPaymentModified, setTotalPaymentModified] = useState(false),\n    [paymentWithoutInvoice, setPaymentWithoutInvoice] = useState(false),\n    [paymentDate, setPaymentDate] = useState(''),\n    [quoteID, setQuoteID] = useState(''),\n    [providerID, setProviderID] = useState(''),\n    [providerAccountID, setProviderAccountID] = useState(''),\n    dispatch = useDispatch(),\n    { progress } = useSelector((state) => state.file),\n    hasPayPermission = useHasPermission('purchaseRequest', 'pay'),\n    hasRejectPermission = useHasPermission('purchaseRequest', 'reject'),\n    hasAuthorizePermission = useHasPermission('purchaseRequest', 'authorize'),\n    user = useSelector((state) => state.auth.user)?.data?.user,\n    inputImgFile = useRef(),\n    inputReceiptFile = useRef(),\n    providers = useSelector((state) => state.provider.providers),\n    accounts = useSelector((state) => state.provider.accounts),\n    { purchaseRequests, filters, pendingPayments } = useSelector((state) => state.purchaseRequest)\n\n  useEffect(() => {\n    dispatch(selectProviders())\n  }, [dispatch])\n\n  useEffect(() => {\n    if (!providerID) {\n      return\n    }\n    dispatch(selectAccountsByProvider(providerID))\n  }, [dispatch, providerID])\n\n  useEffect(() => {\n    dispatch(getPendingPayments(user.id))\n  }, [dispatch, user])\n\n  useEffect(() => {\n    if (!purchaseData) {\n      return\n    }\n    setPurchaseRequestID(purchaseData.id)\n    setQuoteID(purchaseData?.quote?.id)\n    setImgFiles(purchaseData.files?.filter((file) => file.tag === fileTags.img))\n    setInvoiceFile(purchaseData.files?.find((file) => file.tag === fileTags.invoice))\n    setReceiptFile(purchaseData.files?.find((file) => file.tag === fileTags.receipt))\n    setTitle(purchaseData.title)\n    setTotalAmount(purchaseData.totalAmount)\n    setPaymentAmount(purchaseData.paymentAmount)\n    setTotalPaymentApproved(!!purchaseData.totalPaymentApproved)\n    setTotalPaymentModified(!!purchaseData.totalPaymentModified)\n    setProviderID(purchaseData.provider_id)\n    setProviderAccountID(purchaseData.provider_account_id)\n    setPaymentWithoutInvoice(purchaseData.paymentWithoutInvoice)\n    setPaymentDate(purchaseData.paymentDate)\n    setPurchaseRequestPendingID(purchaseData.purchase_request_pending_id)\n  }, [purchaseData])\n\n  const onReject = () => {\n    Swal.fire({\n      title: 'Escribe un motivo del rechazo',\n      input: 'textarea',\n      inputAttributes: {\n        autocapitalize: 'off',\n      },\n      showCancelButton: true,\n      confirmButtonText: 'Enviar',\n      confirmButtonColor: '#E94834',\n      showLoaderOnConfirm: true,\n      preConfirm: async (observation) => {\n        try {\n          if (!observation) {\n            Swal.showValidationMessage(`\n            Escribe una observacion\n          `)\n            return\n          }\n          dispatch(\n            rejectPurchaseRequest(\n              { observation, user_id: user.id },\n              purchaseData.id,\n              (purchaseRequestRes) => {\n                if (purchaseRequestRes.success) {\n                  dispatch(setToast(AppToast({ msg: 'Solicitud rechazada', type: 'success' })))\n                }\n              },\n            ),\n          )\n        } catch (error) {\n          Swal.showValidationMessage(`\n            Request failed: ${error}\n          `)\n        }\n      },\n      allowOutsideClick: () => !Swal.isLoading(),\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire({\n          title: `Solicitud rechazada correctamente`,\n        })\n      }\n    })\n  }\n\n  const onPay = () => {\n    try {\n      if (!paymentDate) {\n        alert(`Selecciona fecha de pago`)\n        return\n      }\n      if (!receiptFile) {\n        alert(`Adjunta comprobante de pago`)\n        return\n      }\n      dispatch(\n        payPurchaseRequest(\n          { paymentDate, user_id: user.id },\n          purchaseData.id,\n          (purchaseRequestRes) => {\n            if (purchaseRequestRes.success) {\n              onUploadReceiptFile(purchaseRequestRes.data)\n              dispatch(setToast(AppToast({ msg: purchaseRequestRes.message, type: 'success' })))\n              Swal.fire({\n                title: `Solicitud pagada`,\n              })\n            }\n          },\n        ),\n      )\n    } catch (error) {\n      Swal.showValidationMessage(`Request failed: ${error}`)\n    }\n  }\n\n  const onAddImages = (e) => {\n    if (!e.target.files[0]) {\n      return\n    }\n    let data = {\n      localName: e.target.files[0].name,\n      tag: fileTags.img,\n      file: e.target.files[0],\n    }\n    setImgFiles([...imgFiles, data])\n    inputImgFile.current.value = ''\n  }\n\n  const clearGeneralInputs = useCallback(() => {\n    setPurchaseRequestID('')\n    setQuoteID('')\n    setTitle('')\n    setTotalAmount('')\n    setPaymentAmount('')\n    setImgFiles([])\n  }, [])\n\n  const onSave = (e) => {\n    e.preventDefault()\n    try {\n      let data = {\n        quote_id: quoteID,\n        title,\n        paymentAmount,\n        totalAmount,\n        provider_id: providerID,\n        provider_account_id: providerAccountID,\n        paymentWithoutInvoice,\n        totalPaymentApproved,\n        totalPaymentModified,\n        purchase_request_pending_id: purchaseRequestPendingID,\n      }\n      dispatch(\n        purchaseData\n          ? updatePurchaseRequest(data, purchaseRequestID, (purchaseRequestRes) => {\n              if (purchaseRequestRes.success) {\n                dispatch(\n                  setToast(\n                    AppToast({\n                      msg: 'Solicitud actualizada correctamente.',\n                      title: 'Solicitudes de compra',\n                      type: 'success',\n                    }),\n                  ),\n                )\n                onUploadImgFiles(purchaseRequestRes.data)\n              } else {\n                dispatch(\n                  setToast(\n                    AppToast({\n                      msg: 'Ha ocurrido un error.',\n                      title: 'Solicitudes de compra',\n                      type: 'error',\n                    }),\n                  ),\n                )\n              }\n            })\n          : addPurchaseRequest({ ...data, petitioner_id: user.id }, (purchaseRequestRes) => {\n              if (purchaseRequestRes.success) {\n                dispatch(\n                  setToast(\n                    AppToast({\n                      msg: 'Solicitud realizada correctamente.',\n                      title: 'Solicitudes de compra',\n                      type: 'success',\n                    }),\n                  ),\n                )\n                onUploadImgFiles(purchaseRequestRes.data)\n              } else {\n                dispatch(\n                  setToast(\n                    AppToast({\n                      msg: 'Ha ocurrido un error.',\n                      title: 'Solicitudes de compra',\n                      type: 'error',\n                    }),\n                  ),\n                )\n              }\n            }),\n      )\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const onUploadImgFiles = (purchaseRequestRes) => {\n    if (imgFiles.length > 0) {\n      Promise.all(\n        imgFiles.map((file) => {\n          if (!file.id) {\n            return dispatch(\n              uploadFile(\n                file.file,\n                file.tag,\n                null,\n                purchaseRequestRes.id,\n                modelTypes.purchaseRequest,\n                () => {},\n              ),\n            )\n          } else {\n            onClose()\n            clearGeneralInputs()\n          }\n        }),\n      ).finally(() => {\n        dispatch(getPurchaseRequests(purchaseRequests.current_page, filters.filter, filters.value))\n      })\n    } else {\n      onClose()\n      clearGeneralInputs()\n    }\n  }\n\n  const onUploadReceiptFile = (purchaseRequestRes) => {\n    try {\n      dispatch(\n        uploadFile(\n          receiptFile.file,\n          receiptFile.tag,\n          null,\n          purchaseRequestRes.id,\n          modelTypes.purchaseRequest,\n          () => {\n            dispatch(\n              getPurchaseRequests(purchaseRequests.current_page, filters.filter, filters.value),\n            )\n          },\n        ),\n      )\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const onAddPurchasePending = (pr) => {\n    setPurchaseRequestPendingID(pr.id)\n    setTotalAmount(pr.balance)\n    setPaymentAmount(pr.balance)\n    setTitle(pr.title)\n    setActiveKey(1)\n    if (pr?.quote) {\n      setQuoteID(pr.quote.id)\n    }\n    setProviderID(pr.provider_id)\n    setProviderAccountID(pr.provider_account_id)\n  }\n\n  const onRemovePurchasePending = () => {\n    setPurchaseRequestPendingID(null)\n    setTotalAmount(0)\n    setPaymentAmount(0)\n    setTitle('')\n    setActiveKey(1)\n  }\n\n  useEffect(() => {\n    if (progress === 100) {\n      setTimeout(() => {\n        onClose()\n        clearGeneralInputs()\n      }, 3000)\n    }\n  }, [progress, onClose, clearGeneralInputs])\n\n  useEffect(() => {\n    if (totalPaymentApproved) {\n      setTotalPaymentModified(false)\n      setPaymentAmount(totalAmount)\n    }\n  }, [totalPaymentApproved, totalAmount])\n\n  useEffect(() => {\n    if (totalPaymentModified) {\n      setTotalPaymentApproved(false)\n    }\n  }, [totalPaymentModified])\n\n  return (\n    <CModal visible={visible} onClose={onClose} aria-labelledby=\"ModalForm\" size=\"xl\">\n      <CModalHeader onClose={onClose}>\n        <CModalTitle id=\"ModalForm\">\n          {purchaseData\n            ? `${view ? '' : 'Editar'} Solicitud ${purchaseData.title}`\n            : 'Nueva Solicitud'}\n        </CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        {imgFiles.length > 0 && imgFiles.some((file) => !file.id) && (\n          <CProgress value={progress} className=\"mb-2\">\n            {progress}%\n          </CProgress>\n        )}\n        {receiptFile && !receiptFile.id && (\n          <CProgress value={progress} className=\"mb-2\">\n            {progress}%\n          </CProgress>\n        )}\n        <CNav variant=\"tabs\" role=\"tablist\" className=\"mt-1\">\n          <CNavItem role=\"presentation\">\n            <CNavLink\n              active={activeKey === 1}\n              component=\"button\"\n              role=\"tab\"\n              aria-controls=\"data-tab-pane\"\n              aria-selected={activeKey === 1}\n              onClick={() => setActiveKey(1)}\n            >\n              General\n            </CNavLink>\n          </CNavItem>\n          {!hasAuthorizePermission && !view && !purchaseData?.fromQuote && (\n            <CNavItem role=\"presentation\">\n              <CNavLink\n                active={activeKey === 2}\n                component=\"button\"\n                role=\"tab\"\n                aria-controls=\"account-tab-pane\"\n                aria-selected={activeKey === 2}\n                onClick={() => setActiveKey(2)}\n              >\n                Pagos pendientes\n              </CNavLink>\n            </CNavItem>\n          )}\n          {((view && purchaseData.status === 'approved' && hasPayPermission) ||\n            (view && purchaseData.status === 'paid')) && (\n            <CNavItem role=\"presentation\">\n              <CNavLink\n                active={activeKey === 3}\n                component=\"button\"\n                role=\"tab\"\n                aria-controls=\"account-tab-pane\"\n                aria-selected={activeKey === 3}\n                onClick={() => setActiveKey(3)}\n              >\n                Tramite de pago\n              </CNavLink>\n            </CNavItem>\n          )}\n        </CNav>\n        <CTabContent>\n          {/* purchase request data */}\n          <CTabPane role=\"tabpanel\" aria-labelledby=\"data-tab-pane\" visible={activeKey === 1}>\n            <CForm className=\"mt-3\">\n              {purchaseData && purchaseData.fromQuote && (\n                <>\n                  <div className=\"mb-3 d-flex\">\n                    <div className=\"flex-md-fill me-2\">\n                      <CFormLabel>Proveedor</CFormLabel>\n                      <CFormSelect\n                        aria-label=\"provider\"\n                        onChange={(e) => setProviderID(e.target.value)}\n                        value={providerID}\n                        disabled={view || purchaseData?.fromQuote}\n                      >\n                        <option value={''}>Selecciona...</option>\n                        {providers.data.map(({ id, name }) => (\n                          <option key={id} value={id}>\n                            {name}\n                          </option>\n                        ))}\n                      </CFormSelect>\n                    </div>\n                    <div className=\"flex-md-fill me-2\">\n                      <CFormLabel>Cuenta</CFormLabel>\n                      <CFormSelect\n                        aria-label=\"providerAccount\"\n                        onChange={(e) => setProviderAccountID(e.target.value)}\n                        value={providerAccountID}\n                        disabled={view}\n                      >\n                        <option value={''}>Selecciona...</option>\n                        {accounts?.data?.map(({ id, clabe, bank }) => (\n                          <option key={id} value={id}>\n                            {bank.name} - {clabe}\n                          </option>\n                        ))}\n                      </CFormSelect>\n                    </div>\n                  </div>\n                  {invoiceFile && (\n                    <div className=\"mb-3 d-flex\">\n                      <FileCard\n                        file={invoiceFile}\n                        onDelete={(id) => {\n                          setInvoiceFile(null)\n                        }}\n                        viewMode={purchaseData}\n                      />\n                    </div>\n                  )}\n                  <div className=\"mb-3\">\n                    <CFormCheck\n                      id=\"paymentWithoutInvoice\"\n                      label=\"Tramitar pago sin factura\"\n                      checked={paymentWithoutInvoice}\n                      onChange={(e) => setPaymentWithoutInvoice(e.target.checked)}\n                      disabled={view || purchaseData?.fromQuote}\n                    />\n                  </div>\n                </>\n              )}\n              <div className=\"mb-3\">\n                <CFormLabel>Título</CFormLabel>\n                <CFormInput\n                  type=\"text\"\n                  id=\"title\"\n                  placeholder=\"Título de la solicitud\"\n                  value={title}\n                  onChange={(e) => setTitle(e.target.value)}\n                  disabled={view}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <CFormLabel>Monto</CFormLabel>\n                <CFormInput\n                  type=\"number\"\n                  id=\"totalAmount\"\n                  placeholder=\"0\"\n                  value={totalAmount}\n                  onChange={(e) => setTotalAmount(e.target.value)}\n                  disabled={view || purchaseData?.fromQuote || purchaseRequestPendingID}\n                />\n              </div>\n              {!view && (\n                <div className=\"mb-3\">\n                  <CFormLabel>\n                    Sube <b>imágenes</b> para la solicitud (opcional)\n                  </CFormLabel>\n                  <CFormInput\n                    ref={inputImgFile}\n                    type=\"file\"\n                    id=\"imgFile\"\n                    onChange={onAddImages}\n                    accept=\"image/*\"\n                    text=\"Archivos permitidos jpg, png, jpeg (10 MB)\"\n                  />\n                </div>\n              )}\n              <div className=\"mb-3 d-flex\">\n                {imgFiles.map((file, index) => {\n                  return (\n                    <FileCard\n                      file={file}\n                      key={file.tag}\n                      onDelete={(id) => {\n                        return file.id\n                          ? setImgFiles(imgFiles.filter((f) => f.id !== id))\n                          : setImgFiles(imgFiles.filter((f, i) => index !== i))\n                      }}\n                      viewMode={view}\n                    />\n                  )\n                })}\n              </div>\n              {((view && hasAuthorizePermission) ||\n                purchaseData?.status === 'approved' ||\n                purchaseData?.status === 'paid') && (\n                <>\n                  <div className=\"mb-3\">\n                    <CFormCheck\n                      id=\"totalPaymentApproved\"\n                      label=\"Se aprueba monto de pago\"\n                      checked={totalPaymentApproved}\n                      onChange={(e) => setTotalPaymentApproved(e.target.checked)}\n                      disabled={\n                        (view && purchaseData.status === 'approved') ||\n                        purchaseData.status === 'paid'\n                      }\n                    />\n                  </div>\n                  <div className=\"mb-3\">\n                    <CFormCheck\n                      id=\"totalPaymentModified\"\n                      label=\"Se modifica monto de pago\"\n                      checked={totalPaymentModified}\n                      onChange={(e) => setTotalPaymentModified(e.target.checked)}\n                      disabled={\n                        (view && purchaseData.status === 'approved') ||\n                        purchaseData.status === 'paid'\n                      }\n                    />\n                  </div>\n                  {totalPaymentModified && (\n                    <div className=\"mb-3\">\n                      <CFormLabel>Monto</CFormLabel>\n                      <CFormInput\n                        type=\"number\"\n                        id=\"amount\"\n                        placeholder=\"0\"\n                        value={paymentAmount}\n                        onChange={(e) => setPaymentAmount(e.target.value)}\n                        disabled={\n                          (view && purchaseData.status === 'approved') ||\n                          purchaseData.status === 'paid'\n                        }\n                      />\n                    </div>\n                  )}\n                  {totalPaymentModified && (\n                    <div className=\"mb-3\">\n                      <CFormLabel className=\"fw-bold\">\n                        Saldo ${formatNumber(totalAmount - paymentAmount)}\n                      </CFormLabel>\n                    </div>\n                  )}\n                </>\n              )}\n            </CForm>\n          </CTabPane>\n\n          {/* pending payments */}\n          <CTabPane role=\"tabpanel\" aria-labelledby=\"data-tab-pane\" visible={activeKey === 2}>\n            {pendingPayments.length > 0 ? (\n              <ModalFormPendingPaymentsTable\n                detailPendingID={purchaseRequestPendingID}\n                onAddDetailPending={(det) => onAddPurchasePending(det)}\n                onRemoveDetailPending={onRemovePurchasePending}\n              />\n            ) : (\n              <h3 className=\"text-center text-primary font-monospace\">No hay pagos pendientes</h3>\n            )}\n          </CTabPane>\n\n          {/* files purchase request */}\n          <CTabPane role=\"tabpanel\" aria-labelledby=\"data-tab-pane\" visible={activeKey === 3}>\n            <CForm className=\"mt-3\">\n              <div className=\"mb-3\">\n                <CFormLabel>Dia de pago</CFormLabel>\n                <CFormInput\n                  type=\"date\"\n                  id=\"paymentDate\"\n                  value={paymentDate}\n                  onChange={(e) => setPaymentDate(e.target.value)}\n                  disabled={view && purchaseData.status === 'paid'}\n                />\n              </div>\n              {view && purchaseData.status !== 'paid' && (\n                <div className=\"mb-3\">\n                  <CFormLabel>Adjuntar comprobante de pago</CFormLabel>\n                  <CFormInput\n                    type=\"file\"\n                    ref={inputReceiptFile}\n                    id=\"receiptFile\"\n                    onChange={(e) =>\n                      setReceiptFile({\n                        file: e.target.files[0],\n                        tag: fileTags.receipt,\n                        localName: e.target.files[0].name,\n                      })\n                    }\n                    text=\"Archivos permitidos jpg, pdf, png, xlxs (10 MB)\"\n                  />\n                </div>\n              )}\n              <div className=\"mb-3 d-flex\">\n                {receiptFile && (\n                  <FileCard\n                    file={receiptFile}\n                    onDelete={(id) => {\n                      setReceiptFile(null)\n                      inputReceiptFile.current.value = ''\n                    }}\n                    viewMode={view && purchaseData.status === 'paid'}\n                  />\n                )}\n              </div>\n            </CForm>\n          </CTabPane>\n        </CTabContent>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"secondary\" onClick={onClose}>\n          Cerrar\n        </CButton>\n        {purchaseData?.status !== 'approved' &&\n          !hasPayPermission &&\n          purchaseData?.status !== 'paid' && (\n            <CButton color=\"primary\" className=\"text-light fw-semibold\" onClick={onSave}>\n              Guardar\n            </CButton>\n          )}\n        {view && (\n          <>\n            {purchaseData.status === 'approved' && hasPayPermission && (\n              <CButton color=\"info\" className=\"text-light fw-semibold\" onClick={onPay}>\n                Pagar\n              </CButton>\n            )}\n            {purchaseData.status !== 'paid' &&\n              hasRejectPermission &&\n              purchaseData.status !== 'approved' &&\n              !purchaseData.fromQuote && (\n                <CButton color=\"danger\" className=\"text-light fw-semibold\" onClick={onReject}>\n                  Rechazar\n                </CButton>\n              )}\n          </>\n        )}\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default PurchaseRequestModalForm\n","import React, { useEffect, useState } from 'react'\nimport {\n  CModal,\n  CModalHeader,\n  CModalBody,\n  CModalTitle,\n  CModalFooter,\n  CForm,\n  CButton,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableRow,\n  CTableHeaderCell,\n  CTableBody,\n  CTableDataCell,\n  CSpinner,\n} from '@coreui/react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  addPurchaseRequestObservation,\n  getPurchaseRequestObservations,\n} from 'src/actions/purchaseRequest'\nimport { setToast } from 'src/actions/toast'\nimport { AppToast } from 'src/components/app'\nimport { formatTimezoneToDateTime } from 'src/utils/functions'\n\nconst PurchaseRequestModalObs = ({ visible, onClose, purchaseRequestID }) => {\n  const dispatch = useDispatch(),\n    [message, setMessage] = useState(''),\n    { observations, loadingObservations } = useSelector((state) => state.purchaseRequest),\n    user = useSelector((state) => state.auth.user)?.data?.user\n\n  useEffect(() => {\n    dispatch(getPurchaseRequestObservations(purchaseRequestID))\n  }, [dispatch, purchaseRequestID])\n\n  const onSave = (e) => {\n    e.preventDefault()\n    try {\n      if (!message || message === '') {\n        dispatch(setToast(AppToast({ msg: 'Escribe un mensaje', title: 'Error', type: 'error' })))\n        return\n      }\n      let data = {\n        message,\n        user_id: user.id,\n        purchase_request_id: purchaseRequestID,\n      }\n      dispatch(\n        addPurchaseRequestObservation(data, (purchaseRequestObservationRes) => {\n          if (purchaseRequestObservationRes.success) {\n            dispatch(\n              setToast(\n                AppToast({\n                  msg: 'Mensaje guardado con exito',\n                  title: 'Observacion',\n                  type: 'success',\n                }),\n              ),\n            )\n          } else {\n            dispatch(\n              setToast(\n                AppToast({ msg: 'Ha ocurrido un error', title: 'Observacion', type: 'error' }),\n              ),\n            )\n          }\n        }),\n      )\n    } catch (error) {\n      console.log(error)\n    }\n    setMessage('')\n  }\n\n  return (\n    <CModal visible={visible} onClose={onClose} aria-labelledby=\"ModalForm\">\n      <CModalHeader onClose={onClose}>\n        <CModalTitle id=\"ModalForm\">Observaciones</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        {loadingObservations ? (\n          <div className=\"d-flex justify-content-center\">\n            <CSpinner color=\"primary\" variant=\"grow\" />\n          </div>\n        ) : (\n          <>\n            <CTable striped responsive>\n              <CTableHead>\n                <CTableRow>\n                  <CTableHeaderCell scope=\"col\">Usuario</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Observación</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Fecha</CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {observations?.map((observation) => (\n                  <CTableRow key={observation.id}>\n                    <CTableDataCell>{observation.user.name}</CTableDataCell>\n                    <CTableDataCell>{observation.message}</CTableDataCell>\n                    <CTableDataCell>\n                      {formatTimezoneToDateTime(observation.created_at)}\n                    </CTableDataCell>\n                  </CTableRow>\n                ))}\n              </CTableBody>\n            </CTable>\n            <CForm className=\"mt-3\">\n              <div className=\"mb-3\">\n                <CFormTextarea\n                  id=\"obs\"\n                  label=\"Observación\"\n                  rows={2}\n                  text=\"Debe tener entre 8 y 20 palabras.\"\n                  value={message}\n                  onChange={(e) => setMessage(e.target.value)}\n                ></CFormTextarea>\n              </div>\n            </CForm>\n          </>\n        )}\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"secondary\" onClick={onClose}>\n          Cerrar\n        </CButton>\n        <CButton color=\"primary\" className=\"text-light fw-semibold\" onClick={onSave}>\n          Guardar\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default PurchaseRequestModalObs\n","import React, { useState } from 'react'\nimport {\n  CTable,\n  CTableBody,\n  CTableHead,\n  CTableRow,\n  CTableHeaderCell,\n  CTableDataCell,\n  CDropdown,\n  CDropdownToggle,\n  CDropdownMenu,\n  CDropdownItem,\n  CBadge,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilOptions } from '@coreui/icons'\nimport { useDispatch } from 'react-redux'\nimport Swal from 'sweetalert2'\nimport { fileTags } from 'src/utils/fileTags'\nimport { deleteFilesByModel, downloadFile } from 'src/actions/file'\nimport { modelTypes } from 'src/utils/modelTypes'\nimport PurchaseRequestModalForm from './PurchaseRequestModalForm'\nimport PurchaseRequestModalObs from './PurchaseRequestModalObs'\nimport {\n  formatNumber,\n  formatTimezoneToDate,\n  statusPurchaseRequest,\n  statusPurchaseRequestColors,\n  useHasPermission,\n} from 'src/utils/functions'\nimport { deletePurchaseRequest, getPurchaseRequestPDF } from 'src/actions/purchaseRequest'\nimport { setToast } from 'src/actions/toast'\nimport { AppToast } from 'src/components/app'\n\nconst PurchaseRequestTable = ({ data }) => {\n  const [visible, setVisible] = useState(false),\n    [visibleObs, setVisibleObs] = useState(false),\n    [purchaseData, setPurchaseData] = useState(null),\n    [viewModalMode, setViewModalMode] = useState(false),\n    dispatch = useDispatch(),\n    hasDeletePermission = useHasPermission('purchaseRequest', 'delete'),\n    hasEditPermission = useHasPermission('purchaseRequest', 'edit'),\n    hasShowPermission = useHasPermission('purchaseRequest', 'show')\n\n  const onDelete = (id) => {\n    Swal.fire({\n      title: '¿Está seguro?',\n      text: 'No podrás revertir esto.',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, eliminar.',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(\n          deletePurchaseRequest(id, (dataRes) => {\n            if (dataRes.success) {\n              dispatch(\n                setToast(\n                  AppToast({\n                    msg: 'Solicitud eliminada correctamente.',\n                    title: 'Solicitudes de pago',\n                    type: 'success',\n                  }),\n                ),\n              )\n              dispatch(deleteFilesByModel(id, modelTypes.purchaseRequest))\n            } else {\n              dispatch(\n                setToast(\n                  AppToast({\n                    msg: 'Ha ocurrido un error.',\n                    title: 'Solicitudes de pago',\n                    type: 'error',\n                  }),\n                ),\n              )\n            }\n          }),\n        )\n        Swal.fire({\n          title: 'Eliminado!',\n          text: 'La solicitud ha sido eliminada.',\n          icon: 'success',\n        })\n      }\n    })\n  }\n\n  return (\n    <>\n      <CTable striped responsive>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Folio</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Solicitante</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Titulo</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Fecha de solicitud</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Monto</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Status</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\" className=\"text-center\">\n              Opciones\n            </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          {data?.map((pr) => (\n            <CTableRow key={pr.id}>\n              <CTableHeaderCell scope=\"row\">{pr.id}</CTableHeaderCell>\n              <CTableDataCell>{pr.petitioner.name}</CTableDataCell>\n              <CTableDataCell>{pr.title}</CTableDataCell>\n              <CTableDataCell>{formatTimezoneToDate(pr.created_at)}</CTableDataCell>\n              <CTableDataCell>${formatNumber(pr.paymentAmount)}</CTableDataCell>\n              <CTableDataCell>\n                <CBadge style={{ backgroundColor: statusPurchaseRequestColors[pr.status] }}>\n                  {statusPurchaseRequest[pr.status]}\n                </CBadge>\n              </CTableDataCell>\n              <CTableDataCell className=\"text-center overflow-visible\">\n                <CDropdown variant=\"dropdown\">\n                  <CDropdownToggle href=\"#\" color=\"light\">\n                    <CIcon icon={cilOptions} title=\"Opciones\" size=\"lg\" />\n                  </CDropdownToggle>\n                  <CDropdownMenu className=\"position-fixed\">\n                    {hasShowPermission && (\n                      <CDropdownItem\n                        style={{ cursor: 'pointer' }}\n                        onClick={() => {\n                          setPurchaseData(pr)\n                          setViewModalMode(true)\n                          setVisible(!visible)\n                        }}\n                      >\n                        Ver solicitud\n                      </CDropdownItem>\n                    )}\n                    {hasEditPermission && pr.status !== 'approved' && pr.status !== 'paid' && (\n                      <CDropdownItem\n                        style={{ cursor: 'pointer' }}\n                        onClick={() => {\n                          setPurchaseData(pr)\n                          setVisible(!visible)\n                        }}\n                      >\n                        Editar\n                      </CDropdownItem>\n                    )}\n                    {hasDeletePermission &&\n                      pr.status !== 'approved' &&\n                      pr.status !== 'paid' &&\n                      !pr.fromQuote && (\n                        <CDropdownItem\n                          style={{ cursor: 'pointer' }}\n                          onClick={() => onDelete(pr.id)}\n                        >\n                          Eliminar\n                        </CDropdownItem>\n                      )}\n                    <CDropdownItem\n                      style={{ cursor: 'pointer' }}\n                      onClick={() => {\n                        setPurchaseData(pr)\n                        setVisibleObs(!visibleObs)\n                      }}\n                    >\n                      Ver observaciones\n                    </CDropdownItem>\n                    {/* <CDropdownItem\n                      style={{ cursor: 'pointer' }}\n                      onClick={() => {\n                        dispatch(getPurchaseRequestPDF(pr.id))\n                      }}\n                    >\n                      Imprimir\n                    </CDropdownItem> */}\n                  </CDropdownMenu>\n                </CDropdown>\n              </CTableDataCell>\n            </CTableRow>\n          ))}\n        </CTableBody>\n      </CTable>\n      {visible && (\n        <PurchaseRequestModalForm\n          visible={visible}\n          onClose={() => {\n            setVisible(false)\n            setViewModalMode(false)\n          }}\n          purchaseData={purchaseData}\n          view={viewModalMode}\n        />\n      )}\n      {visibleObs && (\n        <PurchaseRequestModalObs\n          purchaseRequestID={purchaseData?.id}\n          visible={visibleObs}\n          onClose={() => setVisibleObs(false)}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PurchaseRequestTable\n","/* eslint-disable react/no-unescaped-entities */\nimport React, { useEffect, useState } from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardFooter,\n  CButton,\n  CForm,\n  CFormLabel,\n  CFormSelect,\n  CFormInput,\n  CSpinner,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilPlus, cilCloudDownload } from '@coreui/icons'\nimport PurchaseRequestTable from 'src/components/payments/purchaseRequest/PurchaseRequestTable'\nimport PurchaseRequestModalForm from 'src/components/payments/purchaseRequest/PurchaseRequestModalForm'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getPurchaseRequests } from 'src/actions/purchaseRequest'\nimport { AppPagination } from 'src/components/app'\nimport { useHasPermission } from 'src/utils/functions'\n\nconst PurchaseRequest = () => {\n  const [visible, setVisible] = useState(false),\n    [caseFilter, setCaseFilter] = useState('provider'),\n    [filterValue, setFilterValue] = useState(''),\n    [currentPage, setCurrentPage] = useState(1),\n    dispatch = useDispatch(),\n    {\n      currentPage: currentPageState,\n      last_page,\n      data: purchaseRequests,\n    } = useSelector((state) => state.purchaseRequest.purchaseRequests),\n    loading = useSelector((state) => state.purchaseRequest.loading)\n\n  useEffect(() => {\n    dispatch(getPurchaseRequests(currentPage, caseFilter, filterValue))\n  }, [currentPage, dispatch])\n\n  useEffect(() => {\n    if (!currentPageState) {\n      return\n    }\n    setCurrentPage(currentPageState)\n  }, [currentPageState])\n\n  return (\n    <>\n      <CCard>\n        <CCardHeader className=\"d-flex justify-content-between align-items-center\">\n          <h4>Solicitudes de pago</h4>\n          <div className=\"d-flex gap-2\">\n            {useHasPermission('purchaseRequest', 'create') && (\n              <CButton\n                color=\"primary\"\n                className=\"text-light fw-semibold align-content-center d-flex\"\n                onClick={() => setVisible(!visible)}\n              >\n                <CIcon icon={cilPlus} size=\"xl\" className=\"me-1\" />\n                Nuevo\n              </CButton>\n            )}\n            <CButton color=\"info\" className=\"text-light align-content-center d-flex\">\n              <CIcon icon={cilCloudDownload} size=\"xl\" />\n            </CButton>\n          </div>\n        </CCardHeader>\n        <CCardBody>\n          <CForm>\n            <CFormLabel>Filtros de busqueda</CFormLabel>\n            <div className=\"mb-3 d-flex\">\n              <div className=\"flex-fill me-2\">\n                <CFormSelect\n                  value={caseFilter}\n                  onChange={(e) => setCaseFilter(e.target.value)}\n                  aria-label=\"caseFilter\"\n                  options={[\n                    { label: 'Proveedor', value: 'provider' },\n                    { label: 'Solicitante', value: 'petitioner' },\n                    { label: 'Status', value: 'status' },\n                  ]}\n                />\n              </div>\n              <div className=\"flex-fill me-2\">\n                {caseFilter !== 'status' ? (\n                  <CFormInput\n                    value={filterValue}\n                    onChange={(e) => setFilterValue(e.target.value)}\n                    type=\"text\"\n                    id=\"provider\"\n                    placeholder=\"Ingresar texto\"\n                  />\n                ) : (\n                  <CFormSelect\n                    value={filterValue}\n                    onChange={(e) => setFilterValue(e.target.value)}\n                    aria-label=\"caseFilter\"\n                    options={[\n                      { label: 'Pendientes', value: 'pending' },\n                      { label: 'Revisadas', value: 'review' },\n                      { label: 'Aprobadas', value: 'approved' },\n                      { label: 'Rechazadas', value: 'rejects' },\n                    ]}\n                  />\n                )}\n              </div>\n            </div>\n            <CButton\n              type=\"button\"\n              className=\"text-light fw-semibold\"\n              onClick={() => dispatch(getPurchaseRequests(currentPage, caseFilter, filterValue))}\n            >\n              Buscar\n            </CButton>\n          </CForm>\n          {loading ? (\n            <div className=\"d-flex justify-content-center\">\n              <CSpinner color=\"primary\" variant=\"grow\" />\n            </div>\n          ) : (\n            <PurchaseRequestTable data={purchaseRequests} />\n          )}\n        </CCardBody>\n        <CCardFooter>\n          <AppPagination\n            currentPage={currentPage}\n            lastPage={last_page}\n            setCurrentPage={setCurrentPage}\n          />\n        </CCardFooter>\n      </CCard>\n      <PurchaseRequestModalForm visible={visible} onClose={() => setVisible(false)} />\n    </>\n  )\n}\n\nexport default PurchaseRequest\n"],"names":["getProviders","page","filter","value","async","res","axios","get","concat","config","instance","baseURL","headers","Authorization","localStorage","getItem","dispatch","type","GET_PROVIDERS","payload","data","filters","err","PROVIDER_ERROR","msg","response","statusText","status","addProvider","cb","post","ADD_PROVIDER","success","message","updateProvider","id","put","UPDATE_PROVIDER","deleteProvider","delete","DELETE_PROVIDER","exportProviderExcel","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","EXPORT_PROVIDER_EXCEL","selectProviders","SELECT_PROVIDERS","selectAccountsByProvider","SELECT_ACCOUNT_PROVIDERS","formatNumber","toFixed","toString","replace","formatTimezoneToDate","date","DateTime","fromISO","toLocaleString","DATE_SHORT","formatTimezoneToDateTime","DATETIME_SHORT","statusQuote","uploadQuotePermission","arguments","length","undefined","inprogress","approved","authorized","ok","sent","sentPay","paid","rejected","statusQuoteColors","statusPurchaseRequest","pending","statusPurchaseRequestColors","permissions","index","show","create","edit","reject","pay","approve","authorize","modules","useHasPermission","submodule","permission","userPermissions","useSelector","state","auth","hasSubmodule","find","m","p","modelTypes","provider","purchaseRequest","quote","user","getPurchaseRequests","GET_PURCHASE_REQUESTS","PURCHASE_REQUEST_ERROR","cilMinus","_ref","onAddDetailPending","onRemoveDetailPending","detailPendingID","pendingPayments","pendingPaymentsFiltered","setPendingPaymentsFiltered","useState","useEffect","_jsxs","CTable","striped","responsive","children","_jsx","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","map","detail","i","CTableDataCell","CButton","color","variant","title","onClick","CIcon","icon","cilPlus","size","quote_concept","charge","concept","balance","_useSelector","_useSelector$data","_accounts$data","visible","onClose","purchaseData","view","activeKey","setActiveKey","purchaseRequestID","setPurchaseRequestID","purchaseRequestPendingID","setPurchaseRequestPendingID","setTitle","totalAmount","setTotalAmount","paymentAmount","setPaymentAmount","imgFiles","setImgFiles","invoiceFile","setInvoiceFile","receiptFile","setReceiptFile","totalPaymentApproved","setTotalPaymentApproved","totalPaymentModified","setTotalPaymentModified","paymentWithoutInvoice","setPaymentWithoutInvoice","paymentDate","setPaymentDate","quoteID","setQuoteID","providerID","setProviderID","providerAccountID","setProviderAccountID","useDispatch","progress","file","hasPayPermission","hasRejectPermission","hasAuthorizePermission","inputImgFile","useRef","inputReceiptFile","providers","accounts","purchaseRequests","GET_PP_PURCHASE_REQUEST","_purchaseData$quote","_purchaseData$files","_purchaseData$files2","_purchaseData$files3","files","tag","fileTags","img","invoice","receipt","provider_id","provider_account_id","purchase_request_pending_id","clearGeneralInputs","useCallback","onUploadImgFiles","purchaseRequestRes","Promise","all","uploadFile","finally","current_page","onUploadReceiptFile","error","console","log","setTimeout","CModal","CModalHeader","CModalTitle","CModalBody","some","CProgress","className","CNav","role","CNavItem","CNavLink","active","component","fromQuote","CTabContent","CTabPane","CForm","_Fragment","CFormLabel","CFormSelect","onChange","e","target","disabled","_ref2","name","_ref3","clabe","bank","FileCard","onDelete","viewMode","CFormCheck","label","checked","CFormInput","placeholder","ref","localName","current","accept","text","f","ModalFormPendingPaymentsTable","det","onAddPurchasePending","pr","onRemovePurchasePending","CModalFooter","preventDefault","quote_id","updatePurchaseRequest","UPDATE_PURCHASE_REQUEST","setToast","AppToast","addPurchaseRequest","ADD_PURCHASE_REQUEST","petitioner_id","onPay","alert","user_id","Swal","payPurchaseRequest","onReject","input","inputAttributes","autocapitalize","showCancelButton","confirmButtonText","confirmButtonColor","showLoaderOnConfirm","preConfirm","observation","rejectPurchaseRequest","allowOutsideClick","then","result","isConfirmed","setMessage","observations","loadingObservations","GET_PURCHASE_REQUEST_OBSERVATIONS","CSpinner","created_at","CFormTextarea","rows","purchase_request_id","addPurchaseRequestObservation","ADD_PURCHASE_REQUEST_OBSERVATION","purchaseRequestObservationRes","setVisible","visibleObs","setVisibleObs","setPurchaseData","viewModalMode","setViewModalMode","hasDeletePermission","hasEditPermission","hasShowPermission","cancelButtonColor","deletePurchaseRequest","DELETE_PURCHASE_REQUEST","dataRes","deleteFilesByModel","petitioner","CBadge","style","backgroundColor","CDropdown","CDropdownToggle","cilOptions","CDropdownMenu","CDropdownItem","cursor","PurchaseRequestModalForm","PurchaseRequestModalObs","PurchaseRequest","caseFilter","setCaseFilter","filterValue","setFilterValue","currentPage","setCurrentPage","currentPageState","last_page","loading","CCard","CCardHeader","cilCloudDownload","CCardBody","options","PurchaseRequestTable","CCardFooter","AppPagination","lastPage"],"sourceRoot":""}