{"version":3,"file":"static/js/535.7dfa0d3a.chunk.js","mappings":"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","sources":["actions/department.js","actions/user.js","../node_modules/@coreui/icons/src/free/cil-x.ts","components/users/users/UserModalForm.js","actions/role.js","utils/functions.js","components/users/users/UserModulesModalForm.js","components/users/users/UserPermissionsModalForm.js","actions/permission.js","components/users/users/UserTable.js","views/users/users/Users.js","../node_modules/@coreui/icons/src/free/cil-check-alt.ts"],"sourcesContent":["import axios from 'axios'\nimport {\n  GET_DEPARTMENTS,\n  ADD_DEPARTMENT,\n  UPDATE_DEPARTMENT,\n  DELETE_DEPARTMENT,\n  SELECT_DEPARTMENTS,\n  DEPARTMENT_ERROR,\n} from './types'\nimport config from 'src/server.config'\n\nexport const getDepartments = (page, filter, value) => async (dispatch) => {\n  try {\n    const res = await axios.get(\n      `${config.instance.baseURL}/api/department?${filter}=${value}&page=${page}`,\n      {\n        headers: {\n          ...config.instance.headers,\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      },\n    )\n    dispatch({\n      type: GET_DEPARTMENTS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: DEPARTMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n\nexport const addDepartment = (data, cb) => async (dispatch) => {\n  try {\n    const res = await axios.post(`${config.instance.baseURL}/api/department`, data, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: ADD_DEPARTMENT,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: DEPARTMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const updateDepartment = (data, id, cb) => async (dispatch) => {\n  try {\n    const res = await axios.put(`${config.instance.baseURL}/api/department/${id}`, data, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: UPDATE_DEPARTMENT,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: DEPARTMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const deleteDepartment = (id, cb) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`${config.instance.baseURL}/api/department/${id}`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: DELETE_DEPARTMENT,\n      payload: id,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: DEPARTMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const selectDepartments = () => async (dispatch) => {\n  try {\n    const res = await axios.get(`${config.instance.baseURL}/api/select/department`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: SELECT_DEPARTMENTS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: DEPARTMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n","import axios from 'axios'\nimport {\n  GET_USERS,\n  ADD_USER,\n  UPDATE_USER,\n  DELETE_USER,\n  ASSIGN_MODULE_USER,\n  ASSIGN_PERMISSION_USER,\n  USER_ERROR,\n} from './types'\nimport config from 'src/server.config'\n\nexport const getUsers = (page, filter, value) => async (dispatch) => {\n  try {\n    const res = await axios.get(\n      `${config.instance.baseURL}/api/user?${filter}=${value}&page=${page}`,\n      {\n        headers: {\n          ...config.instance.headers,\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      },\n    )\n    dispatch({\n      type: GET_USERS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: USER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n\nexport const addUser = (data, cb) => async (dispatch) => {\n  try {\n    const res = await axios.post(`${config.instance.baseURL}/api/user`, data, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: ADD_USER,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: USER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const updateUser = (data, id, cb) => async (dispatch) => {\n  try {\n    const res = await axios.put(`${config.instance.baseURL}/api/user/${id}`, data, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: UPDATE_USER,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: USER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const deleteUser = (id, cb) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`${config.instance.baseURL}/api/user/${id}`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: DELETE_USER,\n      payload: id,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: USER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const assignModules = (data, cb) => async (dispatch) => {\n  try {\n    const res = await axios.post(`${config.instance.baseURL}/api/assign/module`, data, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: UPDATE_USER,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: USER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const assignPermissions = (data, cb) => async (dispatch) => {\n  try {\n    const res = await axios.post(`${config.instance.baseURL}/api/assign/permission`, data, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: UPDATE_USER,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: USER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n","export var cilX = [\"512 512\", \"<polygon fill='var(--ci-primary-color, currentColor)' points='427.314 107.313 404.686 84.687 256 233.373 107.314 84.687 84.686 107.313 233.373 256 84.686 404.687 107.314 427.313 256 278.627 404.686 427.313 427.314 404.687 278.627 256 427.314 107.313' class='ci-primary'/>\"];\n","import React, { useState, useEffect, useCallback } from 'react'\nimport {\n  CModal,\n  CModalHeader,\n  CModalBody,\n  CModalTitle,\n  CModalFooter,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CButton,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CTabContent,\n  CTabPane,\n  CFormSelect,\n} from '@coreui/react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setToast } from 'src/actions/toast'\nimport { AppToast } from 'src/components/app'\nimport { addUser, updateUser } from 'src/actions/user'\nimport CIcon from '@coreui/icons-react'\nimport { cilX, cilCheckAlt } from '@coreui/icons'\nimport { selectDepartments } from 'src/actions/department'\nimport { selectRoles } from 'src/actions/role'\nimport { useNavigate } from 'react-router-dom'\n\nconst UserModalForm = ({ visible, onClose, userData, visibleChangePassword, fromProfile }) => {\n  const [activeKey, setActiveKey] = useState(visibleChangePassword ? 2 : 1),\n    [userID, setUserID] = useState(),\n    [user, setUser] = useState(''),\n    [email, setEmail] = useState(''),\n    [departmentID, setDepartmentID] = useState(''),\n    [roleID, setRoleID] = useState(''),\n    [password, setPassword] = useState(''),\n    [confirmPassword, setConfirmPassword] = useState(''),\n    [nss, setNss] = useState(''),\n    [payrollNumber, setPayrollNumber] = useState(''),\n    [passwordPolicy, setPasswordPolicy] = useState({\n      numCharacters: false,\n      uppercaseLetter: false,\n      lowercaseLetter: false,\n      number: false,\n      symbol: false,\n    }),\n    dispatch = useDispatch(),\n    roles = useSelector((state) => state.role.roles),\n    departments = useSelector((state) => state.department.departments),\n    navigate = useNavigate()\n\n  useEffect(() => {\n    dispatch(selectDepartments())\n    dispatch(selectRoles())\n  }, [dispatch])\n\n  const onSave = (e) => {\n    e.preventDefault()\n    if (!user) {\n      alert('Ingrese un nombre')\n      return\n    }\n    if (!email) {\n      alert('Ingrese un correo electrónico')\n      return\n    }\n    if (visibleChangePassword || !userData) {\n      let arrayPasswordPolicies = Object.values(passwordPolicy)\n\n      if (arrayPasswordPolicies.every((policy) => !policy)) {\n        alert('Verifique las políticas de contraseña segura')\n        return\n      }\n\n      if (!confirmPassword) {\n        alert('Confirme la contraseña')\n        return\n      }\n    }\n\n    let dataEdit = {\n      name: user,\n      email,\n      nss,\n      role_id: roleID,\n      department_id: departmentID,\n      payrollNumber,\n    }\n\n    let dataPassword = {\n      password,\n    }\n\n    let data = visibleChangePassword ? dataPassword : dataEdit\n\n    dispatch(\n      userData\n        ? updateUser(data, userID, (dataRes) => {\n            if (dataRes.success) {\n              dispatch(\n                setToast(\n                  AppToast({\n                    msg: 'Usuario actualizado correctamente.',\n                    title: 'Usuarios',\n                    type: 'success',\n                  }),\n                ),\n              )\n              if (visibleChangePassword && fromProfile) {\n                navigate('/login')\n              }\n            } else {\n              dispatch(\n                setToast(\n                  AppToast({ msg: 'Ha ocurrido un error.', title: 'Usuarios', type: 'error' }),\n                ),\n              )\n            }\n            cleanInputs()\n            onClose()\n          })\n        : addUser({ ...dataEdit, ...dataPassword }, (dataRes) => {\n            if (dataRes.success) {\n              dispatch(\n                setToast(\n                  AppToast({\n                    msg: 'Usuario agregado correctamente.',\n                    title: 'Usuarios',\n                    type: 'success',\n                  }),\n                ),\n              )\n            } else {\n              dispatch(\n                setToast(\n                  AppToast({ msg: 'Ha ocurrido un error.', title: 'Usuarios', type: 'error' }),\n                ),\n              )\n            }\n            cleanInputs()\n            onClose()\n          }),\n    )\n  }\n\n  const cleanInputs = useCallback(() => {\n    setUser('')\n    setEmail('')\n    setPassword('')\n    setConfirmPassword('')\n    setRoleID('')\n    setNss('')\n    setPayrollNumber('')\n    setDepartmentID('')\n    setUserID('')\n    setActiveKey(1)\n  }, [])\n\n  useEffect(() => {\n    if (!userData) {\n      return\n    }\n    setUserID(userData.id)\n    setUser(userData.name)\n    setEmail(userData.email)\n    setRoleID(userData.role_id)\n    setDepartmentID(userData.department_id)\n    setPayrollNumber(userData.payrollNumber)\n    setNss(userData.nss)\n  }, [userData])\n\n  useEffect(() => {\n    if (!password) {\n      setPasswordPolicy({\n        numCharacters: false,\n        uppercaseLetter: false,\n        lowercaseLetter: false,\n        number: false,\n        symbol: false,\n      })\n      return\n    }\n\n    const passData = {\n      numCharacters: password.length > 8,\n      lowercaseLetter: !!/[a-z]/.test(password),\n      uppercaseLetter: !!/[A-Z]/.test(password),\n      number: !!/\\d/.test(password),\n      // eslint-disable-next-line no-useless-escape\n      symbol: !!/[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/.test(password),\n    }\n\n    setPasswordPolicy(passData)\n  }, [password])\n\n  return (\n    <CModal visible={visible} onClose={onClose} aria-labelledby=\"LiveDemoExampleLabel\">\n      <CModalHeader onClose={onClose}>\n        <CModalTitle id=\"LiveDemoExampleLabel\">\n          {userData ? `Editar ${userData.name}` : 'Agregar nuevo'}\n        </CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <CNav variant=\"tabs\" role=\"tablist\" className=\"mt-1\">\n          {!visibleChangePassword && (\n            <CNavItem role=\"presentation\">\n              <CNavLink\n                active={activeKey === 1}\n                component=\"button\"\n                role=\"tab\"\n                aria-controls=\"data-tab-pane\"\n                aria-selected={activeKey === 1}\n                onClick={() => setActiveKey(1)}\n              >\n                Datos\n              </CNavLink>\n            </CNavItem>\n          )}\n          {(visibleChangePassword || !userData) && (\n            <CNavItem role=\"presentation\">\n              <CNavLink\n                active={activeKey === 2}\n                component=\"button\"\n                role=\"tab\"\n                aria-controls=\"data-tab-pane\"\n                aria-selected={activeKey === 2}\n                onClick={() => setActiveKey(2)}\n              >\n                Contraseña\n              </CNavLink>\n            </CNavItem>\n          )}\n        </CNav>\n        <CTabContent>\n          {/* user data */}\n          <CTabPane role=\"tabpanel\" aria-labelledby=\"data-tab-pane\" visible={activeKey === 1}>\n            <CForm className=\"mt-3\">\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"name\">Nombre completo</CFormLabel>\n                <CFormInput\n                  type=\"text\"\n                  id=\"name\"\n                  placeholder=\"Nombre\"\n                  onChange={(e) => setUser(e.target.value)}\n                  value={user}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"email\">Correo electrónico</CFormLabel>\n                <CFormInput\n                  type=\"text\"\n                  id=\"email\"\n                  placeholder=\"Correo electrónico\"\n                  onChange={(e) => setEmail(e.target.value)}\n                  value={email}\n                />\n              </div>\n              <div className=\"mb-3 d-flex\">\n                <div className=\"flex-fill me-2\">\n                  <CFormLabel htmlFor=\"nss\">Número de seguro social (NSS)</CFormLabel>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"nss\"\n                    placeholder=\"NSS\"\n                    onChange={(e) => setNss(e.target.value)}\n                    value={nss}\n                  />\n                </div>\n                <div className=\"flex-fill me-2\">\n                  <CFormLabel htmlFor=\"payrollNumber\">Número de nómina</CFormLabel>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"payrollNumber\"\n                    placeholder=\"No. Nómina\"\n                    onChange={(e) => setPayrollNumber(e.target.value)}\n                    value={payrollNumber}\n                  />\n                </div>\n              </div>\n              <div className=\"mb-3 d-flex\">\n                <div className=\"flex-fill me-2\">\n                  <CFormLabel>Departamento</CFormLabel>\n                  <CFormSelect\n                    aria-label=\"charge\"\n                    onChange={(e) => setDepartmentID(e.target.value)}\n                    value={departmentID}\n                  >\n                    <option value={''}>Seleccione...</option>\n                    {departments?.data.map((department) => (\n                      <option value={department.id} key={department.id}>\n                        {department.name}\n                      </option>\n                    ))}\n                  </CFormSelect>\n                </div>\n                <div className=\"flex-fill me-2\">\n                  <CFormLabel>Rol</CFormLabel>\n                  <CFormSelect\n                    aria-label=\"role\"\n                    onChange={(e) => setRoleID(e.target.value)}\n                    value={roleID}\n                  >\n                    <option value={''}>Seleccione...</option>\n                    {roles?.data.map((role) => (\n                      <option value={role.id} key={role.id}>\n                        {role.name}\n                      </option>\n                    ))}\n                  </CFormSelect>\n                </div>\n              </div>\n            </CForm>\n          </CTabPane>\n          {/* password data */}\n          <CTabPane role=\"tabpanel\" aria-labelledby=\"data-tab-pane\" visible={activeKey === 2}>\n            <CForm className=\"mt-3\">\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"name\">Contraseña</CFormLabel>\n                <CFormInput\n                  type=\"password\"\n                  id=\"password\"\n                  placeholder=\"Contraseña\"\n                  onChange={(e) => setPassword(e.target.value)}\n                  value={password}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"confirmPassword\">Confirmar contraseña</CFormLabel>\n                <CFormInput\n                  type=\"password\"\n                  id=\"confirmPassword\"\n                  placeholder=\"Confirmar contraseña\"\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                  value={confirmPassword}\n                />\n                {confirmPassword && password !== confirmPassword && (\n                  <p className=\"text-danger\">*La contraseña no coincide</p>\n                )}\n              </div>\n              <div className=\"mb-3\">\n                <h6 className=\"fw-bolder\">La contraseña debe contener: </h6>\n                <div className=\"d-flex align-items-center\">\n                  {passwordPolicy.numCharacters ? (\n                    <CIcon icon={cilCheckAlt} className=\"text-success\" />\n                  ) : (\n                    <CIcon icon={cilX} className=\"text-danger\" />\n                  )}\n                  8 o mas digitos\n                </div>\n                <div className=\"d-flex align-items-center\">\n                  {passwordPolicy.uppercaseLetter ? (\n                    <CIcon icon={cilCheckAlt} className=\"text-success\" />\n                  ) : (\n                    <CIcon icon={cilX} className=\"text-danger\" />\n                  )}\n                  Una letra mayuscula\n                </div>\n                <div className=\"d-flex align-items-center\">\n                  {passwordPolicy.lowercaseLetter ? (\n                    <CIcon icon={cilCheckAlt} className=\"text-success\" />\n                  ) : (\n                    <CIcon icon={cilX} className=\"text-danger\" />\n                  )}\n                  Una letra minuscula\n                </div>\n                <div className=\"d-flex align-items-center\">\n                  {passwordPolicy.number ? (\n                    <CIcon icon={cilCheckAlt} className=\"text-success\" />\n                  ) : (\n                    <CIcon icon={cilX} className=\"text-danger\" />\n                  )}\n                  Un numero\n                </div>\n                <div className=\"d-flex align-items-center\">\n                  {passwordPolicy.symbol ? (\n                    <CIcon icon={cilCheckAlt} className=\"text-success\" />\n                  ) : (\n                    <CIcon icon={cilX} className=\"text-danger\" />\n                  )}\n                  Un simbolo\n                </div>\n              </div>\n            </CForm>\n          </CTabPane>\n        </CTabContent>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"secondary\" onClick={onClose}>\n          Cerrar\n        </CButton>\n        <CButton color=\"primary\" className=\"text-light fw-semibold\" onClick={onSave}>\n          Guardar\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default UserModalForm\n","import { SELECT_ROLES, ROLE_ERROR } from './types'\nimport axios from 'axios'\nimport config from 'src/server.config'\n\nexport const selectRoles = () => async (dispatch) => {\n  try {\n    const res = await axios.get(`${config.instance.baseURL}/api/select/role`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: SELECT_ROLES,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: ROLE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n","import { DateTime } from 'luxon'\nimport { useSelector } from 'react-redux'\n\nexport const formatNumber = (value) => {\n  let val = (value / 1).toFixed(2)\n  return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n}\n\nexport const formatTimezoneToDate = (date) => {\n  return DateTime.fromISO(date).toLocaleString(DateTime.DATE_SHORT)\n}\n\nexport const formatTimezoneToDateTime = (date) => {\n  return DateTime.fromISO(date).toLocaleString(DateTime.DATETIME_SHORT)\n}\n\nexport const movementTypes = {\n  advance: 'Anticipo',\n  settlement: 'Liquidación',\n  payment: 'Abono a cuenta',\n}\n//////////////////////////// status QUOTE ////////////////////\nexport const statusQuote = (status, uploadQuotePermission = false, petitioner_id) => {\n  let statusQuoteLetter = {\n    inprogress: uploadQuotePermission ? 'Cotizaciónes enviadas' : 'Cotizaciónes disponibles',\n    approved: 'Cotización aprobada',\n    authorized: 'Cotización autorizada',\n    ok: 'Cotización VoBo',\n    sent: uploadQuotePermission ? 'Solicitud nueva' : 'Solicitud enviada',\n    sentPay: 'Enviada a pago',\n    paid: 'Pagado',\n    rejected: 'Cotizaciónes rechazadas',\n  }\n  return statusQuoteLetter[status]\n}\n\nexport const statusQuoteColors = {\n  inprogress: '#00FFFF',\n  approved: '#00FF00',\n  authorized: '#0000FF',\n  ok: '#008000',\n  sent: '#FFA500',\n  sentPay: '#30AFD4',\n  paid: '#800080',\n  rejected: '#FF0000',\n}\n////////////////////// status purchaseRequest (Update payments) //////////////\nexport const statusPurchaseRequest = {\n  pending: 'Pendiente de aprobación',\n  approved: 'Solicitud aprobada',\n  paid: 'Pagado',\n  rejected: 'Solicitud rechazada',\n}\n\nexport const statusPurchaseRequestColors = {\n  pending: '#FFA500',\n  approved: '#00FF00',\n  paid: '#800080',\n  rejected: '#FF0000',\n}\n\nexport const permissions = {\n  index: 'Listar',\n  show: 'Ver',\n  create: 'Crear',\n  edit: 'Editar',\n  delete: 'Eliminar',\n  reject: 'Rechazar',\n  pay: 'Pagar',\n  approve: 'Aprobar',\n  authorize: 'Autorizar',\n  'authorize.minor.1000': 'Autorizar < $1,000',\n  'authorize.mayor.1000': 'Autorizar > $1,000',\n  'authorize.minor.5000': 'Autorizar < $5,000',\n  'authorize.mayor.5000': 'Autorizar > $5,000',\n  modules: 'Asignar modulos',\n  permissions: 'Asignar permisos',\n  'upload.quote': 'Subir cotizaciónes',\n}\n\nexport const useHasPermission = (submodule, permission) => {\n  const userPermissions = useSelector((state) => state.auth.permissions)\n  const userModules = useSelector((state) => state.auth.modules)\n\n  const hasSubmodule = userModules.find((m) => m.submodule === submodule)\n\n  if (hasSubmodule) {\n    return userPermissions.find(\n      (p) => p.submodule === hasSubmodule.submodule && p.permission === permission,\n    )\n      ? true\n      : false\n  }\n\n  return false\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport {\n  CModal,\n  CModalHeader,\n  CModalBody,\n  CModalTitle,\n  CModalFooter,\n  CForm,\n  CButton,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CTabContent,\n  CTabPane,\n  CFormCheck,\n} from '@coreui/react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setToast } from 'src/actions/toast'\nimport { AppToast } from 'src/components/app'\nimport { assignModules } from 'src/actions/user'\n\nconst UserModulesModalForm = ({ visible, onClose, userData }) => {\n  const [activeKey, setActiveKey] = useState(1),\n    [userID, setUserID] = useState(),\n    [banks, setBanks] = useState(false),\n    [providers, setProviders] = useState(false),\n    [quotes, setQuotes] = useState(false),\n    [purchaseRequest, setPurchaseRequest] = useState(false),\n    [pendingPayments, setPendingPayments] = useState(false),\n    [departments, setDepartments] = useState(false),\n    [users, setUsers] = useState(false),\n    [modules, setModules] = useState([]),\n    dispatch = useDispatch(),\n    loading = useSelector((state) => state.user.loading)\n\n  const onSave = (e) => {\n    e.preventDefault()\n    let data = {\n      user_id: userID,\n      modules,\n    }\n    dispatch(\n      assignModules(data, (assignRes) => {\n        if (assignRes.success) {\n          dispatch(setToast(AppToast({ msg: assignRes.message, type: 'success' })))\n        }\n      }),\n    )\n    onClose()\n  }\n\n  const onAddModules = (checked, module, fromDB = false) => {\n    if (!fromDB) {\n      if (checked) {\n        setModules([...modules, module])\n      } else {\n        setModules(modules.filter((m) => m !== module))\n      }\n    }\n\n    if (module === 'banks') {\n      setBanks(checked)\n    }\n    if (module === 'providers') {\n      setProviders(checked)\n    }\n    if (module === 'quotes') {\n      setQuotes(checked)\n    }\n    if (module === 'purchaseRequest') {\n      setPurchaseRequest(checked)\n    }\n    if (module === 'pendingPayments') {\n      setPendingPayments(checked)\n    }\n    if (module === 'departments') {\n      setDepartments(checked)\n    }\n    if (module === 'users') {\n      setUsers(checked)\n    }\n  }\n\n  useEffect(() => {\n    if (!userData) {\n      return\n    }\n    setUserID(userData.id)\n    let modulesDB = []\n    if (userData.modules) {\n      userData.modules.forEach((m) => {\n        onAddModules(true, m.module.submodule, true)\n        modulesDB.push(m.module.submodule)\n      })\n      setModules(modulesDB)\n    }\n  }, [userData])\n\n  console.log(modules)\n\n  return (\n    <CModal visible={visible} onClose={onClose} aria-labelledby=\"UserModulesModal\" size=\"lg\">\n      <CModalHeader onClose={onClose}>\n        <CModalTitle id=\"UserModulesModal\">{`Asignar modulos a ${userData.name}`}</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <CNav variant=\"tabs\" role=\"tablist\" className=\"mt-1\">\n          <CNavItem role=\"presentation\">\n            <CNavLink\n              active={activeKey === 1}\n              component=\"button\"\n              role=\"tab\"\n              aria-controls=\"data-tab-pane\"\n              aria-selected={activeKey === 1}\n              onClick={() => setActiveKey(1)}\n            >\n              Modulos\n            </CNavLink>\n          </CNavItem>\n        </CNav>\n        <CTabContent>\n          {/* Modules Available */}\n          <CTabPane role=\"tabpanel\" aria-labelledby=\"data-tab-pane\" visible={activeKey === 1}>\n            <CForm className=\"mt-3\">\n              {/* Administration modules */}\n              <div className=\"mb-3\">\n                <h5>Administración</h5>\n                <div className=\"row row-cols-3\">\n                  <div className=\"col\">\n                    <CFormCheck\n                      id={'banks'}\n                      label={'Bancos'}\n                      checked={banks}\n                      onChange={(e) => onAddModules(e.target.checked, 'banks')}\n                    />\n                  </div>\n                  <div className=\"col\">\n                    <CFormCheck\n                      id={'providers'}\n                      label={'Proveedores'}\n                      checked={providers}\n                      onChange={(e) => onAddModules(e.target.checked, 'providers')}\n                    />\n                  </div>\n                </div>\n              </div>\n              {/* Payment modules */}\n              <div className=\"mb-3\">\n                <h5>Pagos</h5>\n                <div className=\"row row-cols-3\">\n                  <div className=\"col\">\n                    <CFormCheck\n                      id={'quotes'}\n                      label={'Solicitud de compra'}\n                      checked={quotes}\n                      onChange={(e) => onAddModules(e.target.checked, 'quotes')}\n                    />\n                  </div>\n                  <div className=\"col\">\n                    <CFormCheck\n                      id={'purchaseRequest'}\n                      label={'Solicitud de pago'}\n                      checked={purchaseRequest}\n                      onChange={(e) => onAddModules(e.target.checked, 'purchaseRequest')}\n                    />\n                  </div>\n                  <div className=\"col\">\n                    <CFormCheck\n                      id={'pendingPayments'}\n                      label={'Pagos pendientes'}\n                      checked={pendingPayments}\n                      onChange={(e) => onAddModules(e.target.checked, 'pendingPayments')}\n                    />\n                  </div>\n                </div>\n              </div>\n              {/* User modules */}\n              <div className=\"mb-3\">\n                <h5>Usuarios</h5>\n                <div className=\"row row-cols-3\">\n                  <div className=\"col\">\n                    <CFormCheck\n                      id={'departments'}\n                      label={'Departamentos'}\n                      checked={departments}\n                      onChange={(e) => onAddModules(e.target.checked, 'departments')}\n                    />\n                  </div>\n                  <div className=\"col\">\n                    <CFormCheck\n                      id={'users'}\n                      label={'Usuarios'}\n                      checked={users}\n                      onChange={(e) => onAddModules(e.target.checked, 'users')}\n                    />\n                  </div>\n                </div>\n              </div>\n            </CForm>\n          </CTabPane>\n        </CTabContent>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"secondary\" onClick={onClose}>\n          Cerrar\n        </CButton>\n        <CButton color=\"primary\" className=\"text-light fw-semibold\" onClick={onSave}>\n          Guardar\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default UserModulesModalForm\n","import React, { useState, useEffect } from 'react'\nimport {\n  CModal,\n  CModalHeader,\n  CModalBody,\n  CModalTitle,\n  CModalFooter,\n  CForm,\n  CButton,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CTabContent,\n  CTabPane,\n  CFormCheck,\n  CSpinner,\n} from '@coreui/react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setToast } from 'src/actions/toast'\nimport { AppToast } from 'src/components/app'\nimport { getPermissions } from 'src/actions/permission'\nimport { permissions as permissionsLabel } from 'src/utils/functions'\nimport { assignPermissions } from 'src/actions/user'\n\nconst UserPermissionsModalForm = ({ visible, onClose, userData }) => {\n  const [activeKey, setActiveKey] = useState(1),\n    [userID, setUserID] = useState(),\n    [selectedPermissions, setSelectedPermissions] = useState([]),\n    dispatch = useDispatch(),\n    loading = useSelector((state) => state.permission.loading),\n    permissions = useSelector((state) => state.permission.permissions)\n\n  const onSave = (e) => {\n    e.preventDefault()\n    let data = {\n      user_id: userID,\n      permissions: selectedPermissions,\n    }\n    dispatch(\n      assignPermissions(data, (assignPermissionRes) => {\n        if (assignPermissionRes.success) {\n          dispatch(setToast(AppToast({ msg: assignPermissionRes.message, type: 'success' })))\n        } else {\n          dispatch(setToast(AppToast({ msg: assignPermissionRes.message, type: 'error' })))\n        }\n      }),\n    )\n    onClose()\n  }\n\n  useEffect(() => {\n    if (!userData) {\n      return\n    }\n\n    setUserID(userData.id)\n    let permissionsDB = []\n    if (userData.permissions) {\n      userData.permissions.forEach((p) => {\n        onAddPermissions(true, p.permission.id, true)\n        permissionsDB.push(p.permission.id)\n      })\n      setSelectedPermissions(permissionsDB)\n    }\n  }, [userData])\n\n  useEffect(() => {\n    dispatch(getPermissions())\n  }, [dispatch])\n\n  const onAddPermissions = (checked, permissionID, fromDB = false) => {\n    if (!fromDB) {\n      if (checked) {\n        setSelectedPermissions([...selectedPermissions, permissionID])\n      } else {\n        setSelectedPermissions(selectedPermissions.filter((m) => m !== permissionID))\n      }\n    }\n  }\n\n  return (\n    <CModal visible={visible} onClose={onClose} aria-labelledby=\"UserPermissionsModal\" size=\"xl\">\n      <CModalHeader onClose={onClose}>\n        <CModalTitle id=\"UserPermissionsModal\">{`Editar permisos a ${userData.name}`}</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <CNav variant=\"tabs\" role=\"tablist\" className=\"mt-1\">\n          <CNavItem role=\"presentation\">\n            <CNavLink\n              active={activeKey === 1}\n              component=\"button\"\n              role=\"tab\"\n              aria-controls=\"data-tab-pane\"\n              aria-selected={activeKey === 1}\n              onClick={() => setActiveKey(1)}\n            >\n              Permisos\n            </CNavLink>\n          </CNavItem>\n        </CNav>\n        <CTabContent>\n          {/* Permissions per submodule */}\n          {loading ? (\n            <CSpinner color=\"primary\" variant=\"grow\" />\n          ) : (\n            <CTabPane role=\"tabpanel\" aria-labelledby=\"data-tab-pane\" visible={activeKey === 1}>\n              <CForm className=\"mt-3\">\n                {/* Administration Submodules */}\n                <div className=\"row row-cols-5\">\n                  {/* banks permissions */}\n                  {userData.modules.find((m) => m.module.submodule === 'banks') && (\n                    <div className=\"col mb-3\">\n                      <h5>Bancos</h5>\n                      {permissions?.map((permission) => {\n                        if (permission.module.submodule === 'banks') {\n                          return (\n                            <div key={permission.id}>\n                              <CFormCheck\n                                id={permission.name}\n                                label={permissionsLabel[permission.name]}\n                                checked={selectedPermissions.find((p) => p === permission.id)}\n                                onChange={(e) => onAddPermissions(e.target.checked, permission.id)}\n                              />\n                            </div>\n                          )\n                        }\n                        return <></>\n                      })}\n                    </div>\n                  )}\n                  {/* providers permissions */}\n                  {userData.modules.find((m) => m.module.submodule === 'providers') && (\n                    <div className=\"col mb-3\">\n                      <h5>Proveedores</h5>\n                      {permissions.map((permission) => {\n                        if (permission.module.submodule === 'providers') {\n                          return (\n                            <div key={permission.id}>\n                              <CFormCheck\n                                id={permission.name}\n                                label={permissionsLabel[permission.name]}\n                                checked={selectedPermissions.find((p) => p === permission.id)}\n                                onChange={(e) => onAddPermissions(e.target.checked, permission.id)}\n                              />\n                            </div>\n                          )\n                        }\n                        return <></>\n                      })}\n                    </div>\n                  )}\n                  {/* quotes permissions */}\n                  {userData.modules.find((m) => m.module.submodule === 'quotes') && (\n                    <div className=\"col mb-3\">\n                      <h5>Solicitudes de compra</h5>\n                      {permissions.map((permission) => {\n                        if (permission.module.submodule === 'quotes') {\n                          return (\n                            <div key={permission.id}>\n                              <CFormCheck\n                                id={permission.name}\n                                label={permissionsLabel[permission.name]}\n                                checked={selectedPermissions.find((p) => p === permission.id)}\n                                onChange={(e) => onAddPermissions(e.target.checked, permission.id)}\n                              />\n                            </div>\n                          )\n                        }\n                        return <></>\n                      })}\n                    </div>\n                  )}\n                  {/* purchaseRequest permissions */}\n                  {userData.modules.find((m) => m.module.submodule === 'purchaseRequest') && (\n                    <div className=\"col mb-3\">\n                      <h5>Solicitudes de pago</h5>\n                      {permissions.map((permission) => {\n                        if (permission.module.submodule === 'purchaseRequest') {\n                          return (\n                            <div key={permission.id}>\n                              <CFormCheck\n                                id={permission.name}\n                                label={permissionsLabel[permission.name]}\n                                checked={selectedPermissions.find((p) => p === permission.id)}\n                                onChange={(e) => onAddPermissions(e.target.checked, permission.id)}\n                              />\n                            </div>\n                          )\n                        }\n                        return <></>\n                      })}\n                    </div>\n                  )}\n                  {/* pendingPayments permissions */}\n                  {userData.modules.find((m) => m.module.submodule === 'pendingPayments') && (\n                    <div className=\"col mb-3\">\n                      <h5>Pagos pendientes</h5>\n                      {permissions.map((permission) => {\n                        if (permission.module.submodule === 'pendingPayments') {\n                          return (\n                            <div key={permission.id}>\n                              <CFormCheck\n                                id={permission.name}\n                                label={permissionsLabel[permission.name]}\n                                checked={selectedPermissions.find((p) => p === permission.id)}\n                                onChange={(e) => onAddPermissions(e.target.checked, permission.id)}\n                              />\n                            </div>\n                          )\n                        }\n                        return <></>\n                      })}\n                    </div>\n                  )}\n                  {/* departments permissions */}\n                  {userData.modules.find((m) => m.module.submodule === 'departments') && (\n                    <div className=\"col mb-3\">\n                      <h5>Departamentos</h5>\n                      {permissions.map((permission) => {\n                        if (permission.module.submodule === 'departments') {\n                          return (\n                            <div key={permission.id}>\n                              <CFormCheck\n                                id={permission.name}\n                                label={permissionsLabel[permission.name]}\n                                checked={selectedPermissions.find((p) => p === permission.id)}\n                                onChange={(e) => onAddPermissions(e.target.checked, permission.id)}\n                              />\n                            </div>\n                          )\n                        }\n                        return <></>\n                      })}\n                    </div>\n                  )}\n                  {/* Users permissions */}\n                  {userData.modules.find((m) => m.module.submodule === 'users') && (\n                    <div className=\"col mb-3\">\n                      <h5>Usuarios</h5>\n                      {permissions.map((permission) => {\n                        if (permission.module.submodule === 'users') {\n                          return (\n                            <div key={permission.id}>\n                              <CFormCheck\n                                id={permission.name}\n                                label={permissionsLabel[permission.name]}\n                                checked={selectedPermissions.find((p) => p === permission.id)}\n                                onChange={(e) => onAddPermissions(e.target.checked, permission.id)}\n                              />\n                            </div>\n                          )\n                        }\n                        return <></>\n                      })}\n                    </div>\n                  )}\n                </div>\n              </CForm>\n            </CTabPane>\n          )}\n        </CTabContent>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"secondary\" onClick={onClose}>\n          Cerrar\n        </CButton>\n        <CButton color=\"primary\" className=\"text-light fw-semibold\" onClick={onSave}>\n          Guardar\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default UserPermissionsModalForm\n","import { GET_PERMISSIONS, PERMISSION_ERROR } from './types'\nimport axios from 'axios'\nimport config from 'src/server.config'\n\nexport const getPermissions = () => async (dispatch) => {\n  try {\n    const res = await axios.get(`${config.instance.baseURL}/api/permission`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: GET_PERMISSIONS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: PERMISSION_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n","import React, { useState } from 'react'\nimport {\n  CTable,\n  CTableBody,\n  CTableHead,\n  CTableRow,\n  CTableHeaderCell,\n  CTableDataCell,\n  CDropdown,\n  CDropdownToggle,\n  CDropdownMenu,\n  CDropdownItem,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilOptions } from '@coreui/icons'\nimport { useDispatch } from 'react-redux'\nimport Swal from 'sweetalert2'\nimport { setToast } from 'src/actions/toast'\nimport { AppToast } from 'src/components/app'\nimport { deleteUser } from 'src/actions/user'\nimport UserModalForm from './UserModalForm'\nimport UserModulesModalForm from './UserModulesModalForm'\nimport UserPermissionsModalForm from './UserPermissionsModalForm'\nimport { useHasPermission } from 'src/utils/functions'\n\nconst UserTable = ({ data }) => {\n  const [visible, setVisible] = useState(false),\n    [visibleModules, setVisibleModules] = useState(false),\n    [visiblePermissions, setVisiblePermissions] = useState(false),\n    [visibleChangePassword, setVisibleChangePassword] = useState(false),\n    [userData, setUserData] = useState(null),\n    dispatch = useDispatch(),\n    hasDeletePermission = useHasPermission('users', 'delete'),\n    hasEditPermission = useHasPermission('users', 'edit'),\n    hasModulesPermission = useHasPermission('users', 'modules'),\n    hasPermissionsPermission = useHasPermission('users', 'permissions')\n\n  const onDelete = (id) => {\n    Swal.fire({\n      title: '¿Está seguro?',\n      text: 'No podrás revertir esto.',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, eliminar.',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(\n          deleteUser(id, (dataRes) => {\n            if (dataRes.success) {\n              dispatch(\n                setToast(\n                  AppToast({\n                    msg: 'Usuario eliminado correctamente.',\n                    title: 'Usuarios',\n                    type: 'success',\n                  }),\n                ),\n              )\n              Swal.fire({\n                title: 'Eliminado!',\n                text: 'El Usuario ha sido eliminado.',\n                icon: 'success',\n              })\n            } else {\n              dispatch(\n                setToast(\n                  AppToast({\n                    msg: 'Ocurrio un error.',\n                    title: 'Usuarios',\n                    type: 'error',\n                  }),\n                ),\n              )\n            }\n          }),\n        )\n      }\n    })\n  }\n\n  return (\n    <>\n      <CTable striped responsive>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">#</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Nombre</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Correo electrónico</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Departamento</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\" className=\"text-center\">\n              Opciones\n            </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          {data?.map((user) => (\n            <CTableRow key={user.id}>\n              <CTableHeaderCell scope=\"row\">{user.id}</CTableHeaderCell>\n              <CTableDataCell>{user.name}</CTableDataCell>\n              <CTableDataCell>{user.email}</CTableDataCell>\n              <CTableDataCell>\n                {user?.department?.name || (\n                  <span className=\"text-primary fw-bolder\">Sin departamento asignado</span>\n                )}\n              </CTableDataCell>\n              <CTableDataCell className=\"text-center overflow-visible\">\n                <CDropdown variant=\"dropdown\">\n                  <CDropdownToggle href=\"#\" color=\"light\">\n                    <CIcon icon={cilOptions} title=\"Opciones\" size=\"lg\" />\n                  </CDropdownToggle>\n                  <CDropdownMenu className=\"position-fixed\">\n                    {hasModulesPermission && (\n                      <CDropdownItem\n                        style={{ cursor: 'pointer' }}\n                        onClick={() => {\n                          setVisibleModules(!visibleModules)\n                          setUserData(user)\n                        }}\n                      >\n                        Asignar modulos\n                      </CDropdownItem>\n                    )}\n                    {hasPermissionsPermission && user?.modules?.length > 0 && (\n                      <CDropdownItem\n                        style={{ cursor: 'pointer' }}\n                        onClick={() => {\n                          setVisiblePermissions(!visiblePermissions)\n                          setUserData(user)\n                        }}\n                      >\n                        Permisos\n                      </CDropdownItem>\n                    )}\n                    {hasEditPermission && (\n                      <CDropdownItem\n                        style={{ cursor: 'pointer' }}\n                        onClick={() => {\n                          setVisible(!visible)\n                          setUserData(user)\n                        }}\n                      >\n                        Editar\n                      </CDropdownItem>\n                    )}\n                    {hasEditPermission && (\n                      <CDropdownItem\n                        style={{ cursor: 'pointer' }}\n                        onClick={() => {\n                          setVisible(!visible)\n                          setVisibleChangePassword(true)\n                          setUserData(user)\n                        }}\n                      >\n                        Cambiar contraseña\n                      </CDropdownItem>\n                    )}\n                    {hasDeletePermission && (\n                      <CDropdownItem\n                        style={{ cursor: 'pointer' }}\n                        onClick={() => onDelete(user.id)}\n                      >\n                        Eliminar\n                      </CDropdownItem>\n                    )}\n                  </CDropdownMenu>\n                </CDropdown>\n              </CTableDataCell>\n            </CTableRow>\n          ))}\n        </CTableBody>\n      </CTable>\n      {visible && (\n        <UserModalForm\n          visible={visible}\n          onClose={() => {\n            setVisible(false)\n            setVisibleChangePassword(false)\n          }}\n          userData={userData}\n          visibleChangePassword={visibleChangePassword}\n        />\n      )}\n      {visibleModules && (\n        <UserModulesModalForm\n          visible={visibleModules}\n          onClose={() => setVisibleModules(false)}\n          userData={userData}\n        />\n      )}\n      {visiblePermissions && (\n        <UserPermissionsModalForm\n          visible={visiblePermissions}\n          onClose={() => setVisiblePermissions(false)}\n          userData={userData}\n        />\n      )}\n    </>\n  )\n}\n\nexport default UserTable\n","import React, { useEffect, useState } from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardFooter,\n  CButton,\n  CForm,\n  CFormLabel,\n  CFormSelect,\n  CFormInput,\n  CSpinner,\n} from '@coreui/react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport CIcon from '@coreui/icons-react'\nimport { cilPlus } from '@coreui/icons'\nimport { AppPagination } from 'src/components/app'\nimport { getUsers } from 'src/actions/user'\nimport UserTable from 'src/components/users/users/UserTable'\nimport UserModalForm from 'src/components/users/users/UserModalForm'\nimport { useHasPermission } from 'src/utils/functions'\n\nconst Users = () => {\n  const [visible, setVisible] = useState(false),\n    dispatch = useDispatch(),\n    [caseFilter, setCaseFilter] = useState('name'),\n    [filterValue, setFilterValue] = useState(''),\n    users = useSelector((state) => state.user.users.data),\n    [currentPage, setCurrentPage] = useState(1),\n    currentPageState = useSelector((state) => state.user.users.current_page),\n    lastPage = useSelector((state) => state.user.users.last_page),\n    total = useSelector((state) => state.user.users.total),\n    loading = useSelector((state) => state.user.loading)\n\n  useEffect(() => {\n    dispatch(getUsers(currentPage, caseFilter, filterValue))\n  }, [dispatch, currentPage])\n\n  useEffect(() => {\n    if (!currentPageState) {\n      return\n    }\n    setCurrentPage(currentPageState)\n  }, [currentPageState])\n\n  return (\n    <>\n      <CCard>\n        <CCardHeader className=\"d-flex justify-content-between align-items-center\">\n          <h4>Listado de usuarios</h4>\n          <div className=\"d-flex gap-2\">\n            {useHasPermission('users', 'create') && (\n              <CButton\n                color=\"primary\"\n                className=\"text-light fw-semibold align-content-center d-flex\"\n                onClick={() => setVisible(!visible)}\n              >\n                <CIcon icon={cilPlus} size=\"xl\" className=\"me-1\" />\n                Nuevo\n              </CButton>\n            )}\n          </div>\n        </CCardHeader>\n        <CCardBody>\n          <CForm>\n            <CFormLabel>Filtros de busqueda</CFormLabel>\n            <div className=\"mb-3 d-flex\">\n              <div className=\"flex-fill me-2\">\n                <CFormSelect\n                  value={caseFilter}\n                  onChange={(e) => setCaseFilter(e.target.value)}\n                  aria-label=\"caseFilter\"\n                  options={[{ label: 'Nombre', value: 'name' }]}\n                />\n              </div>\n              <div className=\"flex-fill me-2\">\n                <CFormInput\n                  value={filterValue}\n                  onChange={(e) => setFilterValue(e.target.value)}\n                  type=\"text\"\n                  placeholder=\"Ingresar texto\"\n                />\n              </div>\n            </div>\n            <CButton\n              type=\"button\"\n              className=\"text-light fw-semibold\"\n              onClick={() => dispatch(getUsers(currentPage, caseFilter, filterValue))}\n            >\n              Buscar\n            </CButton>\n          </CForm>\n          {loading ? (\n            <div className=\"d-flex justify-content-center\">\n              <CSpinner color=\"primary\" variant=\"grow\" />\n            </div>\n          ) : (\n            <UserTable data={users} />\n          )}\n        </CCardBody>\n        <CCardFooter>\n          <AppPagination\n            currentPage={currentPage}\n            lastPage={lastPage}\n            setCurrentPage={setCurrentPage}\n          />\n        </CCardFooter>\n      </CCard>\n      {visible && <UserModalForm visible={visible} onClose={() => setVisible(false)} />}\n    </>\n  )\n}\n\nexport default Users\n","export var cilCheckAlt = [\"512 512\", \"<polygon fill='var(--ci-primary-color, currentColor)' points='200.359 382.269 61.057 251.673 82.943 228.327 199.641 337.731 428.686 108.687 451.314 131.313 200.359 382.269' class='ci-primary'/>\"];\n"],"names":["getDepartments","page","filter","value","async","res","axios","get","concat","config","instance","baseURL","headers","Authorization","localStorage","getItem","dispatch","type","GET_DEPARTMENTS","payload","data","err","DEPARTMENT_ERROR","msg","response","statusText","status","addDepartment","cb","post","ADD_DEPARTMENT","success","message","updateDepartment","id","put","UPDATE_DEPARTMENT","deleteDepartment","delete","DELETE_DEPARTMENT","selectDepartments","SELECT_DEPARTMENTS","getUsers","GET_USERS","USER_ERROR","addUser","ADD_USER","updateUser","UPDATE_USER","deleteUser","DELETE_USER","assignModules","assignPermissions","cilX","_ref","visible","onClose","userData","visibleChangePassword","fromProfile","activeKey","setActiveKey","useState","userID","setUserID","user","setUser","email","setEmail","departmentID","setDepartmentID","roleID","setRoleID","password","setPassword","confirmPassword","setConfirmPassword","nss","setNss","payrollNumber","setPayrollNumber","passwordPolicy","setPasswordPolicy","numCharacters","uppercaseLetter","lowercaseLetter","number","symbol","useDispatch","roles","useSelector","state","role","departments","department","navigate","useNavigate","useEffect","SELECT_ROLES","ROLE_ERROR","cleanInputs","useCallback","name","role_id","department_id","passData","length","test","_jsxs","CModal","children","_jsx","CModalHeader","CModalTitle","CModalBody","CNav","variant","className","CNavItem","CNavLink","active","component","onClick","CTabContent","CTabPane","CForm","CFormLabel","htmlFor","CFormInput","placeholder","onChange","e","target","CFormSelect","map","CIcon","icon","cilCheckAlt","CModalFooter","CButton","color","preventDefault","alert","Object","values","every","policy","dataEdit","dataPassword","dataRes","setToast","AppToast","title","formatNumber","toFixed","toString","replace","formatTimezoneToDate","date","DateTime","fromISO","toLocaleString","DATE_SHORT","formatTimezoneToDateTime","DATETIME_SHORT","statusQuote","uploadQuotePermission","arguments","undefined","inprogress","approved","authorized","ok","sent","sentPay","paid","rejected","statusQuoteColors","statusPurchaseRequest","pending","statusPurchaseRequestColors","permissions","index","show","create","edit","reject","pay","approve","authorize","modules","useHasPermission","submodule","permission","userPermissions","auth","hasSubmodule","find","m","p","banks","setBanks","providers","setProviders","quotes","setQuotes","purchaseRequest","setPurchaseRequest","pendingPayments","setPendingPayments","setDepartments","users","setUsers","setModules","onAddModules","loading","checked","module","modulesDB","forEach","push","console","log","size","CFormCheck","label","user_id","assignRes","selectedPermissions","setSelectedPermissions","permissionsDB","onAddPermissions","GET_PERMISSIONS","PERMISSION_ERROR","permissionID","CSpinner","permissionsLabel","_Fragment","assignPermissionRes","setVisible","visibleModules","setVisibleModules","visiblePermissions","setVisiblePermissions","setVisibleChangePassword","setUserData","hasDeletePermission","hasEditPermission","hasModulesPermission","hasPermissionsPermission","onDelete","Swal","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","CTable","striped","responsive","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","_user$department","_user$modules","CTableDataCell","CDropdown","CDropdownToggle","href","cilOptions","CDropdownMenu","CDropdownItem","style","cursor","UserModalForm","UserModulesModalForm","UserPermissionsModalForm","Users","caseFilter","setCaseFilter","filterValue","setFilterValue","currentPage","setCurrentPage","currentPageState","current_page","lastPage","last_page","total","CCard","CCardHeader","cilPlus","CCardBody","options","UserTable","CCardFooter","AppPagination"],"sourceRoot":""}