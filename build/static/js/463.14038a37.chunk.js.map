{"version":3,"file":"static/js/463.14038a37.chunk.js","mappings":"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","sources":["actions/department.js","actions/user.js","../node_modules/@coreui/icons/src/free/cil-x.ts","components/users/users/UserModalForm.js","actions/role.js","utils/functions.js","utils/modelTypes.js","components/users/profile/ProfilePhotoUploadModalForm.js","views/users/profile/Profile.js","../node_modules/@coreui/icons/src/free/cil-check-alt.ts"],"sourcesContent":["import axios from 'axios'\nimport {\n  GET_DEPARTMENTS,\n  ADD_DEPARTMENT,\n  UPDATE_DEPARTMENT,\n  DELETE_DEPARTMENT,\n  SELECT_DEPARTMENTS,\n  DEPARTMENT_ERROR,\n} from './types'\nimport config from 'src/server.config'\n\nexport const getDepartments = (page, filter, value) => async (dispatch) => {\n  try {\n    const res = await axios.get(\n      `${config.instance.baseURL}/api/department?${filter}=${value}&page=${page}`,\n      {\n        headers: {\n          ...config.instance.headers,\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      },\n    )\n    dispatch({\n      type: GET_DEPARTMENTS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: DEPARTMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n\nexport const addDepartment = (data, cb) => async (dispatch) => {\n  try {\n    const res = await axios.post(`${config.instance.baseURL}/api/department`, data, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: ADD_DEPARTMENT,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: DEPARTMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const updateDepartment = (data, id, cb) => async (dispatch) => {\n  try {\n    const res = await axios.put(`${config.instance.baseURL}/api/department/${id}`, data, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: UPDATE_DEPARTMENT,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: DEPARTMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const deleteDepartment = (id, cb) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`${config.instance.baseURL}/api/department/${id}`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: DELETE_DEPARTMENT,\n      payload: id,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: DEPARTMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const selectDepartments = () => async (dispatch) => {\n  try {\n    const res = await axios.get(`${config.instance.baseURL}/api/select/department`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: SELECT_DEPARTMENTS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: DEPARTMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n","import axios from 'axios'\nimport {\n  GET_USERS,\n  ADD_USER,\n  UPDATE_USER,\n  DELETE_USER,\n  ASSIGN_MODULE_USER,\n  ASSIGN_PERMISSION_USER,\n  USER_ERROR,\n} from './types'\nimport config from 'src/server.config'\n\nexport const getUsers = (page, filter, value) => async (dispatch) => {\n  try {\n    const res = await axios.get(\n      `${config.instance.baseURL}/api/user?${filter}=${value}&page=${page}`,\n      {\n        headers: {\n          ...config.instance.headers,\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      },\n    )\n    dispatch({\n      type: GET_USERS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: USER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n\nexport const addUser = (data, cb) => async (dispatch) => {\n  try {\n    const res = await axios.post(`${config.instance.baseURL}/api/user`, data, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: ADD_USER,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: USER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const updateUser = (data, id, cb) => async (dispatch) => {\n  try {\n    const res = await axios.put(`${config.instance.baseURL}/api/user/${id}`, data, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: UPDATE_USER,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: USER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const deleteUser = (id, cb) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`${config.instance.baseURL}/api/user/${id}`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: DELETE_USER,\n      payload: id,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: USER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const assignModules = (data, cb) => async (dispatch) => {\n  try {\n    const res = await axios.post(`${config.instance.baseURL}/api/assign/module`, data, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: UPDATE_USER,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: USER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n\nexport const assignPermissions = (data, cb) => async (dispatch) => {\n  try {\n    const res = await axios.post(`${config.instance.baseURL}/api/assign/permission`, data, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: UPDATE_USER,\n      payload: res.data.data,\n    })\n    cb(res.data)\n  } catch (err) {\n    dispatch({\n      type: USER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n    cb({\n      success: false,\n      message: err.message,\n    })\n  }\n}\n","export var cilX = [\"512 512\", \"<polygon fill='var(--ci-primary-color, currentColor)' points='427.314 107.313 404.686 84.687 256 233.373 107.314 84.687 84.686 107.313 233.373 256 84.686 404.687 107.314 427.313 256 278.627 404.686 427.313 427.314 404.687 278.627 256 427.314 107.313' class='ci-primary'/>\"];\n","import React, { useState, useEffect, useCallback } from 'react'\nimport {\n  CModal,\n  CModalHeader,\n  CModalBody,\n  CModalTitle,\n  CModalFooter,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CButton,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CTabContent,\n  CTabPane,\n  CFormSelect,\n} from '@coreui/react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setToast } from 'src/actions/toast'\nimport { AppToast } from 'src/components/app'\nimport { addUser, updateUser } from 'src/actions/user'\nimport CIcon from '@coreui/icons-react'\nimport { cilX, cilCheckAlt } from '@coreui/icons'\nimport { selectDepartments } from 'src/actions/department'\nimport { selectRoles } from 'src/actions/role'\nimport { useNavigate } from 'react-router-dom'\n\nconst UserModalForm = ({ visible, onClose, userData, visibleChangePassword, fromProfile }) => {\n  const [activeKey, setActiveKey] = useState(visibleChangePassword ? 2 : 1),\n    [userID, setUserID] = useState(),\n    [user, setUser] = useState(''),\n    [email, setEmail] = useState(''),\n    [departmentID, setDepartmentID] = useState(''),\n    [roleID, setRoleID] = useState(''),\n    [password, setPassword] = useState(''),\n    [confirmPassword, setConfirmPassword] = useState(''),\n    [nss, setNss] = useState(''),\n    [payrollNumber, setPayrollNumber] = useState(''),\n    [passwordPolicy, setPasswordPolicy] = useState({\n      numCharacters: false,\n      uppercaseLetter: false,\n      lowercaseLetter: false,\n      number: false,\n      symbol: false,\n    }),\n    dispatch = useDispatch(),\n    roles = useSelector((state) => state.role.roles),\n    departments = useSelector((state) => state.department.departments),\n    navigate = useNavigate()\n\n  useEffect(() => {\n    dispatch(selectDepartments())\n    dispatch(selectRoles())\n  }, [dispatch])\n\n  const onSave = (e) => {\n    e.preventDefault()\n    if (!user) {\n      alert('Ingrese un nombre')\n      return\n    }\n    if (!email) {\n      alert('Ingrese un correo electrónico')\n      return\n    }\n    if (visibleChangePassword || !userData) {\n      let arrayPasswordPolicies = Object.values(passwordPolicy)\n\n      if (arrayPasswordPolicies.every((policy) => !policy)) {\n        alert('Verifique las políticas de contraseña segura')\n        return\n      }\n\n      if (!confirmPassword) {\n        alert('Confirme la contraseña')\n        return\n      }\n    }\n\n    let dataEdit = {\n      name: user,\n      email,\n      nss,\n      role_id: roleID,\n      department_id: departmentID,\n      payrollNumber,\n    }\n\n    let dataPassword = {\n      password,\n    }\n\n    let data = visibleChangePassword ? dataPassword : dataEdit\n\n    dispatch(\n      userData\n        ? updateUser(data, userID, (dataRes) => {\n            if (dataRes.success) {\n              dispatch(\n                setToast(\n                  AppToast({\n                    msg: 'Usuario actualizado correctamente.',\n                    title: 'Usuarios',\n                    type: 'success',\n                  }),\n                ),\n              )\n              if (visibleChangePassword && fromProfile) {\n                navigate('/login')\n              }\n            } else {\n              dispatch(\n                setToast(\n                  AppToast({ msg: 'Ha ocurrido un error.', title: 'Usuarios', type: 'error' }),\n                ),\n              )\n            }\n            cleanInputs()\n            onClose()\n          })\n        : addUser({ ...dataEdit, ...dataPassword }, (dataRes) => {\n            if (dataRes.success) {\n              dispatch(\n                setToast(\n                  AppToast({\n                    msg: 'Usuario agregado correctamente.',\n                    title: 'Usuarios',\n                    type: 'success',\n                  }),\n                ),\n              )\n            } else {\n              dispatch(\n                setToast(\n                  AppToast({ msg: 'Ha ocurrido un error.', title: 'Usuarios', type: 'error' }),\n                ),\n              )\n            }\n            cleanInputs()\n            onClose()\n          }),\n    )\n  }\n\n  const cleanInputs = useCallback(() => {\n    setUser('')\n    setEmail('')\n    setPassword('')\n    setConfirmPassword('')\n    setRoleID('')\n    setNss('')\n    setPayrollNumber('')\n    setDepartmentID('')\n    setUserID('')\n    setActiveKey(1)\n  }, [])\n\n  useEffect(() => {\n    if (!userData) {\n      return\n    }\n    setUserID(userData.id)\n    setUser(userData.name)\n    setEmail(userData.email)\n    setRoleID(userData.role_id)\n    setDepartmentID(userData.department_id)\n    setPayrollNumber(userData.payrollNumber)\n    setNss(userData.nss)\n  }, [userData])\n\n  useEffect(() => {\n    if (!password) {\n      setPasswordPolicy({\n        numCharacters: false,\n        uppercaseLetter: false,\n        lowercaseLetter: false,\n        number: false,\n        symbol: false,\n      })\n      return\n    }\n\n    const passData = {\n      numCharacters: password.length > 8,\n      lowercaseLetter: !!/[a-z]/.test(password),\n      uppercaseLetter: !!/[A-Z]/.test(password),\n      number: !!/\\d/.test(password),\n      // eslint-disable-next-line no-useless-escape\n      symbol: !!/[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/.test(password),\n    }\n\n    setPasswordPolicy(passData)\n  }, [password])\n\n  return (\n    <CModal visible={visible} onClose={onClose} aria-labelledby=\"LiveDemoExampleLabel\">\n      <CModalHeader onClose={onClose}>\n        <CModalTitle id=\"LiveDemoExampleLabel\">\n          {userData ? `Editar ${userData.name}` : 'Agregar nuevo'}\n        </CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <CNav variant=\"tabs\" role=\"tablist\" className=\"mt-1\">\n          {!visibleChangePassword && (\n            <CNavItem role=\"presentation\">\n              <CNavLink\n                active={activeKey === 1}\n                component=\"button\"\n                role=\"tab\"\n                aria-controls=\"data-tab-pane\"\n                aria-selected={activeKey === 1}\n                onClick={() => setActiveKey(1)}\n              >\n                Datos\n              </CNavLink>\n            </CNavItem>\n          )}\n          {(visibleChangePassword || !userData) && (\n            <CNavItem role=\"presentation\">\n              <CNavLink\n                active={activeKey === 2}\n                component=\"button\"\n                role=\"tab\"\n                aria-controls=\"data-tab-pane\"\n                aria-selected={activeKey === 2}\n                onClick={() => setActiveKey(2)}\n              >\n                Contraseña\n              </CNavLink>\n            </CNavItem>\n          )}\n        </CNav>\n        <CTabContent>\n          {/* user data */}\n          <CTabPane role=\"tabpanel\" aria-labelledby=\"data-tab-pane\" visible={activeKey === 1}>\n            <CForm className=\"mt-3\">\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"name\">Nombre completo</CFormLabel>\n                <CFormInput\n                  type=\"text\"\n                  id=\"name\"\n                  placeholder=\"Nombre\"\n                  onChange={(e) => setUser(e.target.value)}\n                  value={user}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"email\">Correo electrónico</CFormLabel>\n                <CFormInput\n                  type=\"text\"\n                  id=\"email\"\n                  placeholder=\"Correo electrónico\"\n                  onChange={(e) => setEmail(e.target.value)}\n                  value={email}\n                />\n              </div>\n              <div className=\"mb-3 d-flex\">\n                <div className=\"flex-fill me-2\">\n                  <CFormLabel htmlFor=\"nss\">Número de seguro social (NSS)</CFormLabel>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"nss\"\n                    placeholder=\"NSS\"\n                    onChange={(e) => setNss(e.target.value)}\n                    value={nss}\n                  />\n                </div>\n                <div className=\"flex-fill me-2\">\n                  <CFormLabel htmlFor=\"payrollNumber\">Número de nómina</CFormLabel>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"payrollNumber\"\n                    placeholder=\"No. Nómina\"\n                    onChange={(e) => setPayrollNumber(e.target.value)}\n                    value={payrollNumber}\n                  />\n                </div>\n              </div>\n              <div className=\"mb-3 d-flex\">\n                <div className=\"flex-fill me-2\">\n                  <CFormLabel>Departamento</CFormLabel>\n                  <CFormSelect\n                    aria-label=\"charge\"\n                    onChange={(e) => setDepartmentID(e.target.value)}\n                    value={departmentID}\n                  >\n                    <option value={''}>Seleccione...</option>\n                    {departments?.data.map((department) => (\n                      <option value={department.id} key={department.id}>\n                        {department.name}\n                      </option>\n                    ))}\n                  </CFormSelect>\n                </div>\n                <div className=\"flex-fill me-2\">\n                  <CFormLabel>Rol</CFormLabel>\n                  <CFormSelect\n                    aria-label=\"role\"\n                    onChange={(e) => setRoleID(e.target.value)}\n                    value={roleID}\n                  >\n                    <option value={''}>Seleccione...</option>\n                    {roles?.data.map((role) => (\n                      <option value={role.id} key={role.id}>\n                        {role.name}\n                      </option>\n                    ))}\n                  </CFormSelect>\n                </div>\n              </div>\n            </CForm>\n          </CTabPane>\n          {/* password data */}\n          <CTabPane role=\"tabpanel\" aria-labelledby=\"data-tab-pane\" visible={activeKey === 2}>\n            <CForm className=\"mt-3\">\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"name\">Contraseña</CFormLabel>\n                <CFormInput\n                  type=\"password\"\n                  id=\"password\"\n                  placeholder=\"Contraseña\"\n                  onChange={(e) => setPassword(e.target.value)}\n                  value={password}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"confirmPassword\">Confirmar contraseña</CFormLabel>\n                <CFormInput\n                  type=\"password\"\n                  id=\"confirmPassword\"\n                  placeholder=\"Confirmar contraseña\"\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                  value={confirmPassword}\n                />\n                {confirmPassword && password !== confirmPassword && (\n                  <p className=\"text-danger\">*La contraseña no coincide</p>\n                )}\n              </div>\n              <div className=\"mb-3\">\n                <h6 className=\"fw-bolder\">La contraseña debe contener: </h6>\n                <div className=\"d-flex align-items-center\">\n                  {passwordPolicy.numCharacters ? (\n                    <CIcon icon={cilCheckAlt} className=\"text-success\" />\n                  ) : (\n                    <CIcon icon={cilX} className=\"text-danger\" />\n                  )}\n                  8 o mas digitos\n                </div>\n                <div className=\"d-flex align-items-center\">\n                  {passwordPolicy.uppercaseLetter ? (\n                    <CIcon icon={cilCheckAlt} className=\"text-success\" />\n                  ) : (\n                    <CIcon icon={cilX} className=\"text-danger\" />\n                  )}\n                  Una letra mayuscula\n                </div>\n                <div className=\"d-flex align-items-center\">\n                  {passwordPolicy.lowercaseLetter ? (\n                    <CIcon icon={cilCheckAlt} className=\"text-success\" />\n                  ) : (\n                    <CIcon icon={cilX} className=\"text-danger\" />\n                  )}\n                  Una letra minuscula\n                </div>\n                <div className=\"d-flex align-items-center\">\n                  {passwordPolicy.number ? (\n                    <CIcon icon={cilCheckAlt} className=\"text-success\" />\n                  ) : (\n                    <CIcon icon={cilX} className=\"text-danger\" />\n                  )}\n                  Un numero\n                </div>\n                <div className=\"d-flex align-items-center\">\n                  {passwordPolicy.symbol ? (\n                    <CIcon icon={cilCheckAlt} className=\"text-success\" />\n                  ) : (\n                    <CIcon icon={cilX} className=\"text-danger\" />\n                  )}\n                  Un simbolo\n                </div>\n              </div>\n            </CForm>\n          </CTabPane>\n        </CTabContent>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"secondary\" onClick={onClose}>\n          Cerrar\n        </CButton>\n        <CButton color=\"primary\" className=\"text-light fw-semibold\" onClick={onSave}>\n          Guardar\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default UserModalForm\n","import { SELECT_ROLES, ROLE_ERROR } from './types'\nimport axios from 'axios'\nimport config from 'src/server.config'\n\nexport const selectRoles = () => async (dispatch) => {\n  try {\n    const res = await axios.get(`${config.instance.baseURL}/api/select/role`, {\n      headers: {\n        ...config.instance.headers,\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n    dispatch({\n      type: SELECT_ROLES,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: ROLE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    })\n  }\n}\n","import { DateTime } from 'luxon'\nimport { useSelector } from 'react-redux'\n\nexport const formatNumber = (value) => {\n  let val = (value / 1).toFixed(2)\n  return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n}\n\nexport const formatTimezoneToDate = (date) => {\n  return DateTime.fromISO(date).toLocaleString(DateTime.DATE_SHORT)\n}\n\nexport const formatTimezoneToDateTime = (date) => {\n  return DateTime.fromISO(date).toLocaleString(DateTime.DATETIME_SHORT)\n}\n\nexport const getBase64 = (file) =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.readAsDataURL(file)\n    reader.onload = (e) => resolve(e.target.result.toString())\n    reader.onerror = reject\n  })\n\nexport const movementTypes = {\n  advance: 'Anticipo',\n  settlement: 'Liquidación',\n  payment: 'Abono a cuenta',\n}\n//////////////////////////// status QUOTE ////////////////////\nexport const statusQuote = (status, uploadQuotePermission = false, petitioner_id) => {\n  let statusQuoteLetter = {\n    inprogress: uploadQuotePermission ? 'Cotizaciónes enviadas' : 'Cotizaciónes disponibles',\n    approved: 'Cotización aprobada',\n    authorized: 'Cotización autorizada',\n    ok: 'Cotización VoBo',\n    sent: uploadQuotePermission ? 'Solicitud nueva' : 'Solicitud enviada',\n    sentPay: 'Enviada a pago',\n    paid: 'Pagado',\n    rejected: 'Cotizaciónes rechazadas',\n  }\n  return statusQuoteLetter[status]\n}\n\nexport const statusQuoteColors = {\n  inprogress: '#00FFFF',\n  approved: '#00FF00',\n  authorized: '#0000FF',\n  ok: '#008000',\n  sent: '#FFA500',\n  sentPay: '#30AFD4',\n  paid: '#800080',\n  rejected: '#FF0000',\n}\n////////////////////// status purchaseRequest (Update payments) //////////////\nexport const statusPurchaseRequest = {\n  pending: 'Pendiente de aprobación',\n  approved: 'Solicitud aprobada',\n  paid: 'Pagado',\n  rejected: 'Solicitud rechazada',\n}\n\nexport const statusPurchaseRequestColors = {\n  pending: '#FFA500',\n  approved: '#00FF00',\n  paid: '#800080',\n  rejected: '#FF0000',\n}\n\nexport const permissions = {\n  index: 'Listar',\n  show: 'Ver',\n  create: 'Crear',\n  edit: 'Editar',\n  delete: 'Eliminar',\n  reject: 'Rechazar',\n  pay: 'Pagar',\n  approve: 'Aprobar',\n  authorize: 'Autorizar',\n  'authorize.minor.1000': 'Autorizar < $1,000',\n  'authorize.mayor.1000': 'Autorizar > $1,000',\n  'authorize.minor.5000': 'Autorizar < $5,000',\n  'authorize.mayor.5000': 'Autorizar > $5,000',\n  modules: 'Asignar modulos',\n  permissions: 'Asignar permisos',\n  'upload.quote': 'Subir cotizaciónes',\n}\n\nexport const useHasPermission = (submodule, permission) => {\n  const userPermissions = useSelector((state) => state.auth.permissions)\n  const userModules = useSelector((state) => state.auth.modules)\n\n  const hasSubmodule = userModules.find((m) => m.submodule === submodule)\n\n  if (hasSubmodule) {\n    return userPermissions.find(\n      (p) => p.submodule === hasSubmodule.submodule && p.permission === permission,\n    )\n      ? true\n      : false\n  }\n\n  return false\n}\n","export const modelTypes = {\n  provider: 'provider',\n  purchaseRequest: 'purchaseRequest',\n  quote: 'quote',\n  user: 'user',\n}\n","import React, { useState, useEffect, useCallback, useRef } from 'react'\nimport {\n  CModal,\n  CModalHeader,\n  CModalBody,\n  CModalTitle,\n  CModalFooter,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CButton,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CTabContent,\n  CTabPane,\n  CProgress,\n} from '@coreui/react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fileTags } from 'src/utils/fileTags'\nimport { deleteFile, uploadFile } from 'src/actions/file'\nimport { modelTypes } from 'src/utils/modelTypes'\nimport { getUser } from 'src/actions/auth'\nimport { getBase64 } from 'src/utils/functions'\n\nconst ProfilePhotoUploadModalForm = ({ visible, onClose, userData, selectedImage }) => {\n  const [activeKey, setActiveKey] = useState(1),\n    [userID, setUserID] = useState(),\n    [profilePhotoFile, setProfilePhotoFile] = useState(null),\n    progress = useSelector((state) => state.file.progress),\n    dispatch = useDispatch(),\n    photo = useRef()\n\n  useEffect(() => {\n    if (!userData) {\n      return\n    }\n    setUserID(userData.id)\n  }, [userData])\n\n  useEffect(() => {\n    if (!profilePhotoFile) {\n      return\n    }\n    const imageSelected = async () => {\n      let result = await getBase64(profilePhotoFile.file)\n      selectedImage(result)\n    }\n    imageSelected()\n  }, [profilePhotoFile, selectedImage])\n\n  const onSave = () => {\n    try {\n      if (userData.files.length > 0) {\n        let image = userData.files.find((file) => file.tag === fileTags.img)\n        if (image) {\n          dispatch(deleteFile(image.id, () => console.log('Foto eliminada')))\n        }\n      }\n\n      dispatch(\n        uploadFile(\n          profilePhotoFile.file,\n          profilePhotoFile.tag,\n          null,\n          userID,\n          modelTypes.user,\n          () => {\n            dispatch(getUser())\n          },\n        ),\n      )\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    if (progress === 100) {\n      setTimeout(() => {\n        onClose()\n      }, 3000)\n    }\n  }, [progress, onClose])\n\n  return (\n    <CModal visible={visible} onClose={onClose} aria-labelledby=\"uploadPhoto\" alignment=\"center\">\n      <CModalHeader onClose={onClose}>\n        <CModalTitle id=\"uploadPhoto\">\n          {userData ? `Editar ${userData.name}` : 'Agregar nuevo'}\n        </CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        {profilePhotoFile && !profilePhotoFile?.id && (\n          <CProgress value={progress} className=\"mb-2\">\n            {progress}%\n          </CProgress>\n        )}\n        <CNav variant=\"tabs\" role=\"tablist\" className=\"mt-1\">\n          <CNavItem role=\"presentation\">\n            <CNavLink\n              active={activeKey === 1}\n              component=\"button\"\n              role=\"tab\"\n              aria-controls=\"data-tab-pane\"\n              aria-selected={activeKey === 1}\n              onClick={() => setActiveKey(1)}\n            >\n              Foto\n            </CNavLink>\n          </CNavItem>\n        </CNav>\n        <CTabContent>\n          {/* user data */}\n          <CTabPane role=\"tabpanel\" aria-labelledby=\"data-tab-pane\" visible={activeKey === 1}>\n            <CForm className=\"mt-3\">\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"name\">Sube una foto o imagen de perfil</CFormLabel>\n                <CFormInput\n                  ref={photo}\n                  type=\"file\"\n                  id=\"photo\"\n                  onChange={(e) =>\n                    setProfilePhotoFile({\n                      file: e.target.files[0],\n                      tag: fileTags.img,\n                      fileName: e.target.files[0].name,\n                    })\n                  }\n                  accept=\"image/*\"\n                />\n              </div>\n            </CForm>\n          </CTabPane>\n        </CTabContent>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"secondary\" onClick={onClose}>\n          Cerrar\n        </CButton>\n        <CButton color=\"primary\" className=\"text-light fw-semibold\" onClick={onSave}>\n          Guardar\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default ProfilePhotoUploadModalForm\n","import { CButton, CCard, CCardBody, CCardTitle, CImage } from '@coreui/react'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getUrlImage } from 'src/actions/file'\nimport ProfilePhotoUploadModalForm from 'src/components/users/profile/ProfilePhotoUploadModalForm'\nimport UserModalForm from 'src/components/users/users/UserModalForm'\nconst DEFAULTIMAGE = require('../../../assets/images/avatars/1.jpg')\n\nconst Profile = () => {\n  const { user: userState, profilePicture } = useSelector((state) => state.auth),\n    user = userState?.data.user,\n    [visible, setVisible] = useState(false),\n    [visibleUploadPhoto, setVisibleUploadPhoto] = useState(false),\n    [selectedImage, setSelectedImage] = useState(null),\n    dispatch = useDispatch()\n\n  useEffect(() => {\n    if (!profilePicture) {\n      return\n    }\n    setSelectedImage(profilePicture)\n  }, [profilePicture])\n\n  return (\n    <>\n      <div className=\"d-md-flex flex-md-row\">\n        <CCard className=\"flex-fill mx-md-3\">\n          <CCardBody className=\"d-flex flex-column align-items-center\">\n            <div>\n              <CImage\n                rounded\n                src={selectedImage ? selectedImage : DEFAULTIMAGE}\n                width={200}\n                height={200}\n                className=\"mt-4\"\n              />\n              <p\n                className=\"text-primary text-center text-decoration-underline\"\n                onClick={() => setVisibleUploadPhoto(!visibleUploadPhoto)}\n              >\n                Cambiar imagen\n              </p>\n            </div>\n            <CCardTitle className=\"text-primary fs-3 mt-3\">{user.name}</CCardTitle>\n            <hr className=\"text-secondary w-25\" />\n            <div className=\"d-flex mt-2\">\n              <div className=\"mx-1\">\n                <div>\n                  <p className=\"text-end lh-sm fw-semibold text-muted\">Nombre:</p>\n                </div>\n                <div>\n                  <p className=\"text-end lh-sm fw-semibold text-muted\">Correo electrónico:</p>\n                </div>\n                <div>\n                  <p className=\"text-end lh-sm fw-semibold text-muted\">Departamento:</p>\n                </div>\n                <div>\n                  <p className=\"text-end lh-sm fw-semibold text-muted\">Puesto:</p>\n                </div>\n                <div>\n                  <p className=\"text-end lh-sm fw-semibold text-muted\">No. Nomina:</p>\n                </div>\n              </div>\n              <div className=\"mx-1\">\n                <div>\n                  <p className=\"text-start lh-sm fw-bold\">{user.name}</p>\n                </div>\n                <div>\n                  <p className=\"text-start lh-sm fw-bold\">{user.email}</p>\n                </div>\n                <div>\n                  <p className=\"text-start lh-sm fw-bold\">{user.department?.name}</p>\n                </div>\n                <div>\n                  <p className=\"text-start lh-sm fw-bold\">{user.role?.name}</p>\n                </div>\n                <div>\n                  <p className=\"text-start lh-sm fw-bold\">{user.payrollNumber}</p>\n                </div>\n              </div>\n            </div>\n          </CCardBody>\n        </CCard>\n        <div className=\"w-auto\">\n          <CCard>\n            <CCardBody>\n              <CButton\n                className=\"w-100 p-3 text-white fw-normal\"\n                style={{ backgroundColor: '#21274E' }}\n                onClick={() => setVisible(!visible)}\n              >\n                Cambiar contraseña\n              </CButton>\n            </CCardBody>\n          </CCard>\n        </div>\n      </div>\n      {visible && (\n        <UserModalForm\n          visible={visible}\n          onClose={() => {\n            setVisible(false)\n          }}\n          userData={user}\n          visibleChangePassword={true}\n          fromProfile={true}\n        />\n      )}\n\n      <ProfilePhotoUploadModalForm\n        visible={visibleUploadPhoto}\n        onClose={() => {\n          setVisibleUploadPhoto(false)\n        }}\n        userData={user}\n        selectedImage={setSelectedImage}\n      />\n    </>\n  )\n}\n\nexport default Profile\n","export var cilCheckAlt = [\"512 512\", \"<polygon fill='var(--ci-primary-color, currentColor)' points='200.359 382.269 61.057 251.673 82.943 228.327 199.641 337.731 428.686 108.687 451.314 131.313 200.359 382.269' class='ci-primary'/>\"];\n"],"names":["getDepartments","page","filter","value","async","res","axios","get","concat","config","instance","baseURL","headers","Authorization","localStorage","getItem","dispatch","type","GET_DEPARTMENTS","payload","data","err","DEPARTMENT_ERROR","msg","response","statusText","status","addDepartment","cb","post","ADD_DEPARTMENT","success","message","updateDepartment","id","put","UPDATE_DEPARTMENT","deleteDepartment","delete","DELETE_DEPARTMENT","selectDepartments","SELECT_DEPARTMENTS","getUsers","GET_USERS","USER_ERROR","addUser","ADD_USER","updateUser","UPDATE_USER","deleteUser","DELETE_USER","assignModules","assignPermissions","cilX","_ref","visible","onClose","userData","visibleChangePassword","fromProfile","activeKey","setActiveKey","useState","userID","setUserID","user","setUser","email","setEmail","departmentID","setDepartmentID","roleID","setRoleID","password","setPassword","confirmPassword","setConfirmPassword","nss","setNss","payrollNumber","setPayrollNumber","passwordPolicy","setPasswordPolicy","numCharacters","uppercaseLetter","lowercaseLetter","number","symbol","useDispatch","roles","useSelector","state","role","departments","department","navigate","useNavigate","useEffect","SELECT_ROLES","ROLE_ERROR","cleanInputs","useCallback","name","role_id","department_id","passData","length","test","_jsxs","CModal","children","_jsx","CModalHeader","CModalTitle","CModalBody","CNav","variant","className","CNavItem","CNavLink","active","component","onClick","CTabContent","CTabPane","CForm","CFormLabel","htmlFor","CFormInput","placeholder","onChange","e","target","CFormSelect","map","CIcon","icon","cilCheckAlt","CModalFooter","CButton","color","preventDefault","alert","Object","values","every","policy","dataEdit","dataPassword","dataRes","setToast","AppToast","title","formatNumber","toFixed","toString","replace","formatTimezoneToDate","date","DateTime","fromISO","toLocaleString","DATE_SHORT","formatTimezoneToDateTime","DATETIME_SHORT","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","statusQuote","uploadQuotePermission","arguments","undefined","inprogress","approved","authorized","ok","sent","sentPay","paid","rejected","statusQuoteColors","statusPurchaseRequest","pending","statusPurchaseRequestColors","permissions","index","show","create","edit","pay","approve","authorize","modules","useHasPermission","submodule","permission","userPermissions","auth","hasSubmodule","find","m","p","modelTypes","provider","purchaseRequest","quote","selectedImage","profilePhotoFile","setProfilePhotoFile","progress","photo","useRef","imageSelected","setTimeout","alignment","CProgress","ref","files","tag","fileTags","img","fileName","accept","onSave","image","deleteFile","console","log","uploadFile","getUser","error","DEFAULTIMAGE","require","Profile","_user$department","_user$role","userState","profilePicture","setVisible","visibleUploadPhoto","setVisibleUploadPhoto","setSelectedImage","_Fragment","CCard","CCardBody","CImage","rounded","src","width","height","CCardTitle","style","backgroundColor","UserModalForm","ProfilePhotoUploadModalForm"],"sourceRoot":""}